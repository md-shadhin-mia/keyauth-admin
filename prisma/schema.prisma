generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model account_controls {
  id                                       BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  name                                     String                 @db.VarChar(255)
  account_group_id                         BigInt?                @db.UnsignedBigInt
  branch_id                                BigInt?                @default(1) @db.UnsignedBigInt
  status                                   Int                    @default(1) @db.TinyInt
  is_deletable                             Int                    @default(1) @db.TinyInt
  deleted_at                               DateTime?              @db.Timestamp(0)
  created_by                               BigInt?                @db.UnsignedBigInt
  updated_by                               BigInt?                @db.UnsignedBigInt
  deleted_by                               BigInt?                @db.UnsignedBigInt
  created_at                               DateTime?              @db.Timestamp(0)
  updated_at                               DateTime?              @db.Timestamp(0)
  account_groups                           account_groups?        @relation(fields: [account_group_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_controls_account_group_id_foreign")
  branches                                 branches?              @relation(fields: [branch_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_controls_branch_id_foreign")
  users_account_controls_created_byTousers users?                 @relation("account_controls_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_controls_created_by_foreign")
  users_account_controls_deleted_byTousers users?                 @relation("account_controls_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_controls_deleted_by_foreign")
  users_account_controls_updated_byTousers users?                 @relation("account_controls_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_controls_updated_by_foreign")
  account_subsidiaries                     account_subsidiaries[]
  accounts                                 accounts[]

  @@index([account_group_id], map: "account_controls_account_group_id_foreign")
  @@index([branch_id], map: "account_controls_branch_id_foreign")
  @@index([created_by], map: "account_controls_created_by_foreign")
  @@index([deleted_by], map: "account_controls_deleted_by_foreign")
  @@index([updated_by], map: "account_controls_updated_by_foreign")
}

model account_groups {
  id                                     BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  name                                   String                 @db.VarChar(255)
  branch_id                              BigInt?                @default(1) @db.UnsignedBigInt
  status                                 Int                    @default(1) @db.TinyInt
  is_deletable                           Int                    @default(1) @db.TinyInt
  created_at                             DateTime?              @db.Timestamp(0)
  updated_at                             DateTime?              @db.Timestamp(0)
  deleted_at                             DateTime?              @db.Timestamp(0)
  created_by                             BigInt?                @db.UnsignedBigInt
  updated_by                             BigInt?                @db.UnsignedBigInt
  deleted_by                             BigInt?                @db.UnsignedBigInt
  account_controls                       account_controls[]
  branches                               branches?              @relation(fields: [branch_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_groups_branch_id_foreign")
  users_account_groups_created_byTousers users?                 @relation("account_groups_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_groups_created_by_foreign")
  users_account_groups_deleted_byTousers users?                 @relation("account_groups_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_groups_deleted_by_foreign")
  users_account_groups_updated_byTousers users?                 @relation("account_groups_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_groups_updated_by_foreign")
  account_subsidiaries                   account_subsidiaries[]
  accounts                               accounts[]

  @@index([branch_id], map: "account_groups_branch_id_foreign")
  @@index([created_by], map: "account_groups_created_by_foreign")
  @@index([deleted_by], map: "account_groups_deleted_by_foreign")
  @@index([updated_by], map: "account_groups_updated_by_foreign")
}

model account_subsidiaries {
  id                                           BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name                                         String            @db.VarChar(255)
  account_group_id                             BigInt?           @db.UnsignedBigInt
  account_control_id                           BigInt?           @db.UnsignedBigInt
  branch_id                                    BigInt?           @default(1) @db.UnsignedBigInt
  status                                       Int               @default(1) @db.TinyInt
  is_deletable                                 Int               @default(1) @db.TinyInt
  deleted_at                                   DateTime?         @db.Timestamp(0)
  created_by                                   BigInt?           @db.UnsignedBigInt
  updated_by                                   BigInt?           @db.UnsignedBigInt
  deleted_by                                   BigInt?           @db.UnsignedBigInt
  created_at                                   DateTime?         @db.Timestamp(0)
  updated_at                                   DateTime?         @db.Timestamp(0)
  account_controls                             account_controls? @relation(fields: [account_control_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_subsidiaries_account_control_id_foreign")
  account_groups                               account_groups?   @relation(fields: [account_group_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_subsidiaries_account_group_id_foreign")
  branches                                     branches?         @relation(fields: [branch_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_subsidiaries_branch_id_foreign")
  users_account_subsidiaries_created_byTousers users?            @relation("account_subsidiaries_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_subsidiaries_created_by_foreign")
  users_account_subsidiaries_deleted_byTousers users?            @relation("account_subsidiaries_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_subsidiaries_deleted_by_foreign")
  users_account_subsidiaries_updated_byTousers users?            @relation("account_subsidiaries_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "account_subsidiaries_updated_by_foreign")
  accounts                                     accounts[]

  @@index([account_control_id], map: "account_subsidiaries_account_control_id_foreign")
  @@index([account_group_id], map: "account_subsidiaries_account_group_id_foreign")
  @@index([branch_id], map: "account_subsidiaries_branch_id_foreign")
  @@index([created_by], map: "account_subsidiaries_created_by_foreign")
  @@index([deleted_by], map: "account_subsidiaries_deleted_by_foreign")
  @@index([updated_by], map: "account_subsidiaries_updated_by_foreign")
}

model accounts {
  id                               BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  name                             String                 @db.VarChar(255)
  account_number                   String?                @db.VarChar(255)
  account_group_id                 BigInt?                @db.UnsignedBigInt
  account_control_id               BigInt?                @db.UnsignedBigInt
  account_subsidiary_id            BigInt?                @db.UnsignedBigInt
  branch_id                        BigInt?                @default(1) @db.UnsignedBigInt
  balance_type                     accounts_balance_type?
  opening_balance                  Decimal                @default(0.00) @db.Decimal(15, 2)
  accountable_type                 String?                @db.VarChar(255)
  accountable_id                   BigInt?                @db.UnsignedBigInt
  remarks                          String?                @db.Text
  status                           Int                    @default(1) @db.TinyInt
  is_deletable                     Int                    @default(1) @db.TinyInt
  deleted_at                       DateTime?              @db.Timestamp(0)
  created_by                       BigInt?                @db.UnsignedBigInt
  updated_by                       BigInt?                @db.UnsignedBigInt
  deleted_by                       BigInt?                @db.UnsignedBigInt
  created_at                       DateTime?              @db.Timestamp(0)
  updated_at                       DateTime?              @db.Timestamp(0)
  account_controls                 account_controls?      @relation(fields: [account_control_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_account_control_id_foreign")
  account_groups                   account_groups?        @relation(fields: [account_group_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_account_group_id_foreign")
  account_subsidiaries             account_subsidiaries?  @relation(fields: [account_subsidiary_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_account_subsidiary_id_foreign")
  branches                         branches?              @relation(fields: [branch_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_branch_id_foreign")
  users_accounts_created_byTousers users?                 @relation("accounts_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_created_by_foreign")
  users_accounts_deleted_byTousers users?                 @relation("accounts_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_deleted_by_foreign")
  users_accounts_updated_byTousers users?                 @relation("accounts_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "accounts_updated_by_foreign")
  transactions                     transactions[]

  @@index([account_control_id], map: "accounts_account_control_id_foreign")
  @@index([account_group_id], map: "accounts_account_group_id_foreign")
  @@index([account_subsidiary_id], map: "accounts_account_subsidiary_id_foreign")
  @@index([accountable_type, accountable_id], map: "accounts_accountable_type_accountable_id_index")
  @@index([branch_id], map: "accounts_branch_id_foreign")
  @@index([created_by], map: "accounts_created_by_foreign")
  @@index([deleted_by], map: "accounts_deleted_by_foreign")
  @@index([updated_by], map: "accounts_updated_by_foreign")
}

model areas {
  id                                             BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  division_id                                    BigInt              @db.UnsignedBigInt
  district_id                                    BigInt              @db.UnsignedBigInt
  thana_id                                       BigInt              @db.UnsignedBigInt
  area                                           String              @db.VarChar(255)
  union_id                                       BigInt?             @db.UnsignedBigInt
  village_id                                     BigInt?             @db.UnsignedBigInt
  post_code                                      String?             @db.VarChar(255)
  street                                         String?             @db.VarChar(255)
  lat                                            String?             @db.VarChar(255)
  lon                                            String?             @db.VarChar(255)
  status                                         Int                 @default(1) @db.TinyInt
  created_by                                     BigInt?             @db.UnsignedBigInt
  updated_by                                     BigInt?             @db.UnsignedBigInt
  deleted_at                                     DateTime?           @db.Timestamp(0)
  deleted_by                                     BigInt?             @db.UnsignedBigInt
  created_at                                     DateTime?           @db.Timestamp(0)
  updated_at                                     DateTime?           @db.Timestamp(0)
  users_areas_created_byTousers                  users?              @relation("areas_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "areas_created_by_foreign")
  users_areas_deleted_byTousers                  users?              @relation("areas_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "areas_deleted_by_foreign")
  geo_locations_areas_district_idTogeo_locations geo_locations       @relation("areas_district_idTogeo_locations", fields: [district_id], references: [id], onUpdate: Restrict, map: "areas_district_id_foreign")
  geo_locations_areas_division_idTogeo_locations geo_locations       @relation("areas_division_idTogeo_locations", fields: [division_id], references: [id], onUpdate: Restrict, map: "areas_division_id_foreign")
  geo_locations_areas_thana_idTogeo_locations    geo_locations       @relation("areas_thana_idTogeo_locations", fields: [thana_id], references: [id], onUpdate: Restrict, map: "areas_thana_id_foreign")
  geo_locations_areas_union_idTogeo_locations    geo_locations?      @relation("areas_union_idTogeo_locations", fields: [union_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "areas_union_id_foreign")
  users_areas_updated_byTousers                  users?              @relation("areas_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "areas_updated_by_foreign")
  geo_locations_areas_village_idTogeo_locations  geo_locations?      @relation("areas_village_idTogeo_locations", fields: [village_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "areas_village_id_foreign")
  challans                                       challans[]
  territory_details                              territory_details[]

  @@index([created_by], map: "areas_created_by_foreign")
  @@index([deleted_by], map: "areas_deleted_by_foreign")
  @@index([district_id], map: "areas_district_id_foreign")
  @@index([division_id], map: "areas_division_id_foreign")
  @@index([thana_id], map: "areas_thana_id_foreign")
  @@index([union_id], map: "areas_union_id_foreign")
  @@index([updated_by], map: "areas_updated_by_foreign")
  @@index([village_id], map: "areas_village_id_foreign")
}

model attendances {
  id                                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                          BigInt    @db.UnsignedBigInt
  date                                 DateTime  @db.Date
  remarks                              String?   @db.VarChar(255)
  check_in_date                        DateTime? @db.Date
  check_in_time                        DateTime? @db.Time(0)
  check_in_latitude                    String?   @db.VarChar(255)
  check_in_longitude                   String?   @db.VarChar(255)
  check_out_date                       DateTime? @db.Date
  check_out_time                       DateTime? @db.Time(0)
  check_out_latitude                   String?   @db.VarChar(255)
  check_out_longitude                  String?   @db.VarChar(255)
  status                               String    @default("0") @db.VarChar(255)
  attendance_type                      String?   @db.VarChar(255)
  deleted_at                           DateTime? @db.Timestamp(0)
  approved_by                          BigInt?   @db.UnsignedBigInt
  created_by                           BigInt?   @db.UnsignedBigInt
  updated_by                           BigInt?   @db.UnsignedBigInt
  deleted_by                           BigInt?   @db.UnsignedBigInt
  created_at                           DateTime? @db.Timestamp(0)
  updated_at                           DateTime? @db.Timestamp(0)
  users_attendances_approved_byTousers users?    @relation("attendances_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "attendances_approved_by_foreign")
  users_attendances_created_byTousers  users?    @relation("attendances_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "attendances_created_by_foreign")
  users_attendances_deleted_byTousers  users?    @relation("attendances_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "attendances_deleted_by_foreign")
  employees                            employees @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "attendances_employee_id_foreign")
  users_attendances_updated_byTousers  users?    @relation("attendances_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "attendances_updated_by_foreign")

  @@index([approved_by], map: "attendances_approved_by_foreign")
  @@index([created_by], map: "attendances_created_by_foreign")
  @@index([deleted_by], map: "attendances_deleted_by_foreign")
  @@index([employee_id], map: "attendances_employee_id_foreign")
  @@index([updated_by], map: "attendances_updated_by_foreign")
}

model backup_challan_deliveries {
  id                                                BigInt                            @id @default(autoincrement()) @db.UnsignedBigInt
  backup_challan_id                                 BigInt?                           @db.UnsignedBigInt
  backup_challan_type                               String?                           @db.VarChar(255)
  deleted_at                                        DateTime?                         @db.Timestamp(0)
  created_by                                        BigInt?                           @db.UnsignedBigInt
  updated_by                                        BigInt?                           @db.UnsignedBigInt
  deleted_by                                        BigInt?                           @db.UnsignedBigInt
  created_at                                        DateTime?                         @db.Timestamp(0)
  updated_at                                        DateTime?                         @db.Timestamp(0)
  users_backup_challan_deliveries_created_byTousers users?                            @relation("backup_challan_deliveries_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "backup_challan_deliveries_created_by_foreign")
  users_backup_challan_deliveries_deleted_byTousers users?                            @relation("backup_challan_deliveries_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "backup_challan_deliveries_deleted_by_foreign")
  users_backup_challan_deliveries_updated_byTousers users?                            @relation("backup_challan_deliveries_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "backup_challan_deliveries_updated_by_foreign")
  backup_challan_delivery_details                   backup_challan_delivery_details[]

  @@index([created_by], map: "backup_challan_deliveries_created_by_foreign")
  @@index([deleted_by], map: "backup_challan_deliveries_deleted_by_foreign")
  @@index([updated_by], map: "backup_challan_deliveries_updated_by_foreign")
}

model backup_challan_delivery_details {
  id                             BigInt                           @id @default(autoincrement()) @db.UnsignedBigInt
  backup_challan_delivery_id     BigInt                           @db.UnsignedBigInt
  product_id                     BigInt                           @db.UnsignedBigInt
  quantity                       Decimal?                         @db.Decimal(20, 5)
  deleted_at                     DateTime?                        @db.Timestamp(0)
  created_at                     DateTime?                        @db.Timestamp(0)
  updated_at                     DateTime?                        @db.Timestamp(0)
  product_catalogs               product_catalogs                 @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "backup_challan_delivery_details_product_id_foreign")
  backup_challan_deliveries      backup_challan_deliveries        @relation(fields: [backup_challan_delivery_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bc_delivery_id_fk")
  backup_challan_delivery_stocks backup_challan_delivery_stocks[]

  @@index([product_id], map: "backup_challan_delivery_details_product_id_foreign")
  @@index([backup_challan_delivery_id], map: "bc_delivery_id_fk")
}

model backup_challan_delivery_stocks {
  id                              BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  b_c_d_p_details_id              BigInt                          @db.UnsignedBigInt
  product_catalog_id              BigInt                          @db.UnsignedBigInt
  serial_no                       String?                         @db.VarChar(255)
  quantity                        Float?
  lot_no                          String?                         @db.VarChar(255)
  backup_challan_type             String?                         @db.VarChar(255)
  deleted_at                      DateTime?                       @db.Timestamp(0)
  created_at                      DateTime?                       @db.Timestamp(0)
  updated_at                      DateTime?                       @db.Timestamp(0)
  backup_challan_delivery_details backup_challan_delivery_details @relation(fields: [b_c_d_p_details_id], references: [id], onDelete: Cascade, map: "backup_challan_delivery_stocks_b_c_d_p_details_id_foreign")
  product_catalogs                product_catalogs                @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, map: "backup_challan_delivery_stocks_product_catalog_id_foreign")

  @@index([b_c_d_p_details_id], map: "backup_challan_delivery_stocks_b_c_d_p_details_id_foreign")
  @@index([product_catalog_id], map: "backup_challan_delivery_stocks_product_catalog_id_foreign")
}

model backup_challan_details {
  id                BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  backup_challan_id BigInt          @db.UnsignedBigInt
  product_id        BigInt?         @db.UnsignedBigInt
  quantity          BigInt?         @db.UnsignedBigInt
  price             BigInt?         @db.UnsignedBigInt
  amount            BigInt?         @db.UnsignedBigInt
  created_at        DateTime?       @db.Timestamp(0)
  updated_at        DateTime?       @db.Timestamp(0)
  backup_challans   backup_challans @relation(fields: [backup_challan_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "backup_challan_details_backup_challan_id_foreign")

  @@index([backup_challan_id], map: "backup_challan_details_backup_challan_id_foreign")
}

model backup_challan_shipments {
  id                    BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  backup_challan_id     BigInt          @db.UnsignedBigInt
  courier_id            BigInt?         @db.UnsignedBigInt
  area_id               BigInt?         @db.UnsignedBigInt
  address               String?         @db.VarChar(255)
  contact_person_name   String?         @db.VarChar(255)
  contact_person_number String?         @db.VarChar(255)
  created_at            DateTime?       @db.Timestamp(0)
  updated_at            DateTime?       @db.Timestamp(0)
  backup_challans       backup_challans @relation(fields: [backup_challan_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "backup_challan_shipments_backup_challan_id_foreign")

  @@index([backup_challan_id], map: "backup_challan_shipments_backup_challan_id_foreign")
}

model backup_challans {
  id                                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  remaining_date                           DateTime                   @db.Date
  invoice_date                             DateTime                   @db.Date
  invoice_no                               String?                    @db.VarChar(255)
  type                                     String                     @db.VarChar(255)
  customer_id                              BigInt                     @db.UnsignedBigInt
  total_amount                             String                     @db.VarChar(255)
  remarks                                  String?                    @db.VarChar(255)
  invoice_id                               String?                    @db.VarChar(255)
  status                                   String?                    @default("pending") @db.VarChar(255)
  approved_by                              BigInt?                    @db.UnsignedBigInt
  approved_comments                        String?                    @db.VarChar(255)
  is_shipment                              Boolean                    @default(false)
  deleted_at                               DateTime?                  @db.Timestamp(0)
  created_by                               BigInt?                    @db.UnsignedBigInt
  updated_by                               BigInt?                    @db.UnsignedBigInt
  deleted_by                               BigInt?                    @db.UnsignedBigInt
  created_at                               DateTime?                  @db.Timestamp(0)
  updated_at                               DateTime?                  @db.Timestamp(0)
  backup_challan_details                   backup_challan_details[]
  backup_challan_shipments                 backup_challan_shipments[]
  users_backup_challans_approved_byTousers users?                     @relation("backup_challans_approved_byTousers", fields: [approved_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "backup_challans_approved_by_foreign")
  users_backup_challans_created_byTousers  users?                     @relation("backup_challans_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "backup_challans_created_by_foreign")
  customers                                customers                  @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "backup_challans_customer_id_foreign")
  users_backup_challans_deleted_byTousers  users?                     @relation("backup_challans_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "backup_challans_deleted_by_foreign")
  users_backup_challans_updated_byTousers  users?                     @relation("backup_challans_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "backup_challans_updated_by_foreign")

  @@index([approved_by], map: "backup_challans_approved_by_foreign")
  @@index([created_by], map: "backup_challans_created_by_foreign")
  @@index([customer_id], map: "backup_challans_customer_id_foreign")
  @@index([deleted_by], map: "backup_challans_deleted_by_foreign")
  @@index([updated_by], map: "backup_challans_updated_by_foreign")
}

model bank_accounts {
  id                                              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  account_name                                    String    @db.VarChar(255)
  account_code                                    String    @db.VarChar(255)
  opening_balance                                 Int
  bank_id                                         BigInt    @db.UnsignedBigInt
  bank_branch_id                                  BigInt    @db.UnsignedBigInt
  bank_account_no                                 String    @db.VarChar(255)
  status                                          Int       @default(1) @db.TinyInt
  branch_id                                       BigInt    @default(1) @db.UnsignedBigInt
  created_by                                      BigInt?   @db.UnsignedBigInt
  updated_by                                      BigInt?   @db.UnsignedBigInt
  deleted_by                                      BigInt?   @db.UnsignedBigInt
  deleted_at                                      DateTime? @db.Timestamp(0)
  created_at                                      DateTime? @db.Timestamp(0)
  updated_at                                      DateTime? @db.Timestamp(0)
  branches_bank_accounts_bank_branch_idTobranches branches  @relation("bank_accounts_bank_branch_idTobranches", fields: [bank_branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_accounts_bank_branch_id_foreign")
  banks                                           banks     @relation(fields: [bank_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_accounts_bank_id_foreign")
  branches_bank_accounts_branch_idTobranches      branches  @relation("bank_accounts_branch_idTobranches", fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_accounts_branch_id_foreign")
  users_bank_accounts_created_byTousers           users?    @relation("bank_accounts_created_byTousers", fields: [created_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_accounts_created_by_foreign")
  users_bank_accounts_deleted_byTousers           users?    @relation("bank_accounts_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_accounts_deleted_by_foreign")
  users_bank_accounts_updated_byTousers           users?    @relation("bank_accounts_updated_byTousers", fields: [updated_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_accounts_updated_by_foreign")

  @@index([bank_branch_id], map: "bank_accounts_bank_branch_id_foreign")
  @@index([bank_id], map: "bank_accounts_bank_id_foreign")
  @@index([branch_id], map: "bank_accounts_branch_id_foreign")
  @@index([created_by], map: "bank_accounts_created_by_foreign")
  @@index([deleted_by], map: "bank_accounts_deleted_by_foreign")
  @@index([updated_by], map: "bank_accounts_updated_by_foreign")
}

model bank_branches {
  id                                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  bank_id                               BigInt    @db.UnsignedBigInt
  name                                  String    @db.VarChar(255)
  deleted_at                            DateTime? @db.Timestamp(0)
  created_by                            BigInt?   @db.UnsignedBigInt
  updated_by                            BigInt?   @db.UnsignedBigInt
  deleted_by                            BigInt?   @db.UnsignedBigInt
  created_at                            DateTime? @db.Timestamp(0)
  updated_at                            DateTime? @db.Timestamp(0)
  banks                                 banks     @relation(fields: [bank_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bank_branches_bank_id_foreign")
  users_bank_branches_created_byTousers users?    @relation("bank_branches_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bank_branches_created_by_foreign")
  users_bank_branches_deleted_byTousers users?    @relation("bank_branches_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bank_branches_deleted_by_foreign")
  users_bank_branches_updated_byTousers users?    @relation("bank_branches_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bank_branches_updated_by_foreign")

  @@index([bank_id], map: "bank_branches_bank_id_foreign")
  @@index([created_by], map: "bank_branches_created_by_foreign")
  @@index([deleted_by], map: "bank_branches_deleted_by_foreign")
  @@index([updated_by], map: "bank_branches_updated_by_foreign")
}

model banks {
  id                            BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name                          String          @db.VarChar(255)
  created_at                    DateTime?       @db.Timestamp(0)
  updated_at                    DateTime?       @db.Timestamp(0)
  deleted_at                    DateTime?       @db.Timestamp(0)
  created_by                    BigInt?         @db.UnsignedBigInt
  updated_by                    BigInt?         @db.UnsignedBigInt
  deleted_by                    BigInt?         @db.UnsignedBigInt
  bank_accounts                 bank_accounts[]
  bank_branches                 bank_branches[]
  users_banks_created_byTousers users?          @relation("banks_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "banks_created_by_foreign")
  users_banks_deleted_byTousers users?          @relation("banks_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "banks_deleted_by_foreign")
  users_banks_updated_byTousers users?          @relation("banks_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "banks_updated_by_foreign")

  @@index([created_by], map: "banks_created_by_foreign")
  @@index([deleted_by], map: "banks_deleted_by_foreign")
  @@index([updated_by], map: "banks_updated_by_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model bills_and_allowances {
  id                                               BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                                      BigInt               @db.UnsignedBigInt
  date_of_bill_claim                               DateTime             @db.Date
  approved_by                                      BigInt?              @db.UnsignedBigInt
  approved_comments                                String?              @db.VarChar(255)
  rejected_by                                      BigInt?              @db.UnsignedBigInt
  rejected_comments                                String?              @db.VarChar(255)
  recommended_by                                   BigInt?              @db.UnsignedBigInt
  recommended_comments                             String?              @db.VarChar(255)
  status                                           String               @default("pending") @db.VarChar(255)
  deleted_at                                       DateTime?            @db.Timestamp(0)
  created_by                                       BigInt?              @db.UnsignedBigInt
  updated_by                                       BigInt?              @db.UnsignedBigInt
  deleted_by                                       BigInt?              @db.UnsignedBigInt
  created_at                                       DateTime?            @db.Timestamp(0)
  updated_at                                       DateTime?            @db.Timestamp(0)
  users_bills_and_allowances_approved_byTousers    users?               @relation("bills_and_allowances_approved_byTousers", fields: [approved_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bills_and_allowances_approved_by_foreign")
  users_bills_and_allowances_created_byTousers     users?               @relation("bills_and_allowances_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bills_and_allowances_created_by_foreign")
  users_bills_and_allowances_deleted_byTousers     users?               @relation("bills_and_allowances_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bills_and_allowances_deleted_by_foreign")
  employees                                        employees            @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bills_and_allowances_employee_id_foreign")
  users_bills_and_allowances_recommended_byTousers users?               @relation("bills_and_allowances_recommended_byTousers", fields: [recommended_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bills_and_allowances_recommended_by_foreign")
  users_bills_and_allowances_rejected_byTousers    users?               @relation("bills_and_allowances_rejected_byTousers", fields: [rejected_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "bills_and_allowances_rejected_by_foreign")
  users_bills_and_allowances_updated_byTousers     users?               @relation("bills_and_allowances_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "bills_and_allowances_updated_by_foreign")
  general_expenses                                 general_expenses[]
  transport_expenses                               transport_expenses[]

  @@index([approved_by], map: "bills_and_allowances_approved_by_foreign")
  @@index([created_by], map: "bills_and_allowances_created_by_foreign")
  @@index([deleted_by], map: "bills_and_allowances_deleted_by_foreign")
  @@index([employee_id], map: "bills_and_allowances_employee_id_foreign")
  @@index([recommended_by], map: "bills_and_allowances_recommended_by_foreign")
  @@index([rejected_by], map: "bills_and_allowances_rejected_by_foreign")
  @@index([updated_by], map: "bills_and_allowances_updated_by_foreign")
}

model branch_types {
  id                                   BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  name                                 String     @db.VarChar(255)
  description                          String?    @db.VarChar(255)
  created_at                           DateTime?  @db.Timestamp(0)
  updated_at                           DateTime?  @db.Timestamp(0)
  deleted_at                           DateTime?  @db.Timestamp(0)
  created_by                           BigInt?    @db.UnsignedBigInt
  updated_by                           BigInt?    @db.UnsignedBigInt
  deleted_by                           BigInt?    @db.UnsignedBigInt
  users_branch_types_created_byTousers users?     @relation("branch_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "branch_types_created_by_foreign")
  users_branch_types_deleted_byTousers users?     @relation("branch_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "branch_types_deleted_by_foreign")
  users_branch_types_updated_byTousers users?     @relation("branch_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "branch_types_updated_by_foreign")
  branches                             branches[]

  @@index([created_by], map: "branch_types_created_by_foreign")
  @@index([deleted_by], map: "branch_types_deleted_by_foreign")
  @@index([updated_by], map: "branch_types_updated_by_foreign")
}

model branches {
  id                                                                                  BigInt                      @id @default(autoincrement()) @db.UnsignedBigInt
  parent_id                                                                           BigInt                      @default(1) @db.UnsignedBigInt
  branch_type_id                                                                      BigInt                      @db.UnsignedBigInt
  name                                                                                String                      @db.VarChar(255)
  title                                                                               String?                     @db.VarChar(255)
  division                                                                            String?                     @db.VarChar(255)
  district                                                                            String?                     @db.VarChar(255)
  police_station                                                                      String?                     @db.VarChar(255)
  contact_no                                                                          String?                     @db.VarChar(255)
  size                                                                                String?                     @db.VarChar(255)
  image                                                                               String?                     @db.VarChar(255)
  address                                                                             String?                     @db.VarChar(255)
  created_at                                                                          DateTime?                   @db.Timestamp(0)
  updated_at                                                                          DateTime?                   @db.Timestamp(0)
  deleted_at                                                                          DateTime?                   @db.Timestamp(0)
  created_by                                                                          BigInt?                     @db.UnsignedBigInt
  updated_by                                                                          BigInt?                     @db.UnsignedBigInt
  deleted_by                                                                          BigInt?                     @db.UnsignedBigInt
  account_controls                                                                    account_controls[]
  account_groups                                                                      account_groups[]
  account_subsidiaries                                                                account_subsidiaries[]
  accounts                                                                            accounts[]
  bank_accounts_bank_accounts_bank_branch_idTobranches                                bank_accounts[]             @relation("bank_accounts_bank_branch_idTobranches")
  bank_accounts_bank_accounts_branch_idTobranches                                     bank_accounts[]             @relation("bank_accounts_branch_idTobranches")
  branch_types                                                                        branch_types                @relation(fields: [branch_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "branches_branch_type_id_foreign")
  users_branches_created_byTousers                                                    users?                      @relation("branches_created_byTousers", fields: [created_by], references: [id], onUpdate: Restrict, map: "branches_created_by_foreign")
  users_branches_deleted_byTousers                                                    users?                      @relation("branches_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "branches_deleted_by_foreign")
  branches                                                                            branches                    @relation("branchesTobranches", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "branches_parent_id_foreign")
  other_branches                                                                      branches[]                  @relation("branchesTobranches")
  users_branches_updated_byTousers                                                    users?                      @relation("branches_updated_byTousers", fields: [updated_by], references: [id], onUpdate: Restrict, map: "branches_updated_by_foreign")
  contact_persion_details                                                             contact_persion_details[]
  employement_details                                                                 employement_details[]
  job_templates                                                                       job_templates[]
  jobs                                                                                jobs[]
  opening_stocks                                                                      opening_stocks[]
  product_transfer_requests_product_transfer_requests_destination_branch_idTobranches product_transfer_requests[] @relation("product_transfer_requests_destination_branch_idTobranches")
  product_transfer_requests_product_transfer_requests_source_branch_idTobranches      product_transfer_requests[] @relation("product_transfer_requests_source_branch_idTobranches")
  stocks                                                                              stocks[]

  @@index([branch_type_id], map: "branches_branch_type_id_foreign")
  @@index([created_by], map: "branches_created_by_foreign")
  @@index([deleted_by], map: "branches_deleted_by_foreign")
  @@index([parent_id], map: "branches_parent_id_foreign")
  @@index([updated_by], map: "branches_updated_by_foreign")
}

model brands {
  id                             BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  name                           String             @db.VarChar(255)
  code                           String             @db.VarChar(255)
  status                         Int                @default(1) @db.TinyInt
  supplier_id                    BigInt             @db.UnsignedBigInt
  created_at                     DateTime?          @db.Timestamp(0)
  updated_at                     DateTime?          @db.Timestamp(0)
  deleted_at                     DateTime?          @db.Timestamp(0)
  created_by                     BigInt?            @db.UnsignedBigInt
  updated_by                     BigInt?            @db.UnsignedBigInt
  deleted_by                     BigInt?            @db.UnsignedBigInt
  users_brands_created_byTousers users?             @relation("brands_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "brands_created_by_foreign")
  users_brands_deleted_byTousers users?             @relation("brands_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "brands_deleted_by_foreign")
  users_brands_updated_byTousers users?             @relation("brands_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "brands_updated_by_foreign")
  product_catalogs               product_catalogs[]
  purchase_orders                purchase_orders[]

  @@index([created_by], map: "brands_created_by_foreign")
  @@index([deleted_by], map: "brands_deleted_by_foreign")
  @@index([updated_by], map: "brands_updated_by_foreign")
}

model broker_banks {
  id           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  broker_id    BigInt    @db.UnsignedBigInt
  bank_type    String?   @db.VarChar(255)
  bank_name    String?   @db.VarChar(255)
  branch_name  String?   @db.VarChar(255)
  account_nos  String?   @db.VarChar(255)
  e_tin_no     String?   @db.VarChar(255)
  routing_name String?   @db.VarChar(255)
  created_at   DateTime? @db.Timestamp(0)
  updated_at   DateTime? @db.Timestamp(0)
}

model broker_commissions {
  id              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  broker_id       BigInt    @db.UnsignedBigInt
  commission_type BigInt    @db.UnsignedBigInt
  percentage_type BigInt?   @db.UnsignedBigInt
  fixed_type      BigInt?   @db.UnsignedBigInt
  fixed           Float?
  percentage      Float?
  created_at      DateTime? @db.Timestamp(0)
  updated_at      DateTime? @db.Timestamp(0)
}

model broker_customer_attacheds {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  broker_id   BigInt    @db.UnsignedBigInt
  customer_id BigInt    @db.UnsignedBigInt
  status      Int       @db.TinyInt
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
}

model brokers {
  id                              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  broker_name                     String    @db.VarChar(255)
  email                           String?   @db.VarChar(255)
  mobile                          String    @db.VarChar(255)
  alternative_phone               String?   @db.VarChar(255)
  dob                             String    @db.VarChar(255)
  gender                          String    @db.VarChar(255)
  commission_type                 BigInt    @db.UnsignedBigInt
  division_id                     BigInt    @db.UnsignedBigInt
  district_id                     BigInt    @db.UnsignedBigInt
  thana_id                        BigInt    @db.UnsignedBigInt
  nid                             String    @db.VarChar(255)
  present_address                 String?   @db.Text
  permanent_address               String?   @db.Text
  photograph                      String?   @db.VarChar(255)
  front_image                     String?   @db.VarChar(255)
  back_image                      String?   @db.VarChar(255)
  status                          Int       @default(1) @db.TinyInt
  deleted_at                      DateTime? @db.Timestamp(0)
  created_by                      BigInt?   @db.UnsignedBigInt
  updated_by                      BigInt?   @db.UnsignedBigInt
  deleted_by                      BigInt?   @db.UnsignedBigInt
  created_at                      DateTime? @db.Timestamp(0)
  updated_at                      DateTime? @db.Timestamp(0)
  users_brokers_created_byTousers users?    @relation("brokers_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "brokers_created_by_foreign")
  users_brokers_deleted_byTousers users?    @relation("brokers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "brokers_deleted_by_foreign")
  users_brokers_updated_byTousers users?    @relation("brokers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "brokers_updated_by_foreign")

  @@index([created_by], map: "brokers_created_by_foreign")
  @@index([deleted_by], map: "brokers_deleted_by_foreign")
  @@index([updated_by], map: "brokers_updated_by_foreign")
}

model c_b_c_license_requisition_phones {
  id                           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  c_b_c_license_requisition_id BigInt    @db.UnsignedBigInt
  multiple_phone_no            String    @db.VarChar(255)
  created_at                   DateTime? @db.Timestamp(0)
  updated_at                   DateTime? @db.Timestamp(0)
}

model c_b_c_license_requisitions {
  id                                                  BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                                         BigInt                   @db.UnsignedBigInt
  address                                             String?                  @db.VarChar(255)
  phone                                               String?                  @db.VarChar(255)
  dongle_id                                           BigInt                   @db.UnsignedBigInt
  product_model                                       String?                  @db.VarChar(255)
  start_date                                          DateTime?                @db.Date
  expired_date                                        DateTime?                @db.Date
  valid_period                                        String?                  @db.VarChar(255)
  valid_period_type                                   String?                  @db.VarChar(255)
  remarks                                             String?                  @db.VarChar(255)
  license_id                                          String?                  @db.VarChar(255)
  software_version                                    String?                  @db.VarChar(255)
  approved_by                                         BigInt?                  @db.UnsignedBigInt
  status                                              String                   @default("Pending") @db.VarChar(255)
  deleted_at                                          DateTime?                @db.Timestamp(0)
  created_by                                          BigInt?                  @db.UnsignedBigInt
  updated_by                                          BigInt?                  @db.UnsignedBigInt
  deleted_by                                          BigInt?                  @db.UnsignedBigInt
  created_at                                          DateTime?                @db.Timestamp(0)
  updated_at                                          DateTime?                @db.Timestamp(0)
  users_c_b_c_license_requisitions_approved_byTousers users?                   @relation("c_b_c_license_requisitions_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "c_b_c_license_requisitions_approved_by_foreign")
  users_c_b_c_license_requisitions_created_byTousers  users?                   @relation("c_b_c_license_requisitions_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "c_b_c_license_requisitions_created_by_foreign")
  customers                                           customers                @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "c_b_c_license_requisitions_customer_id_foreign")
  users_c_b_c_license_requisitions_deleted_byTousers  users?                   @relation("c_b_c_license_requisitions_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "c_b_c_license_requisitions_deleted_by_foreign")
  dongle_or_serial_entries                            dongle_or_serial_entries @relation(fields: [dongle_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "c_b_c_license_requisitions_dongle_id_foreign")
  users_c_b_c_license_requisitions_updated_byTousers  users?                   @relation("c_b_c_license_requisitions_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "c_b_c_license_requisitions_updated_by_foreign")

  @@index([approved_by], map: "c_b_c_license_requisitions_approved_by_foreign")
  @@index([created_by], map: "c_b_c_license_requisitions_created_by_foreign")
  @@index([customer_id], map: "c_b_c_license_requisitions_customer_id_foreign")
  @@index([deleted_by], map: "c_b_c_license_requisitions_deleted_by_foreign")
  @@index([dongle_id], map: "c_b_c_license_requisitions_dongle_id_foreign")
  @@index([updated_by], map: "c_b_c_license_requisitions_updated_by_foreign")
}

model categories {
  id                                 BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  name                               String             @db.VarChar(255)
  status                             Int                @default(1) @db.TinyInt
  created_at                         DateTime?          @db.Timestamp(0)
  updated_at                         DateTime?          @db.Timestamp(0)
  deleted_at                         DateTime?          @db.Timestamp(0)
  created_by                         BigInt?            @db.UnsignedBigInt
  updated_by                         BigInt?            @db.UnsignedBigInt
  deleted_by                         BigInt?            @db.UnsignedBigInt
  users_categories_created_byTousers users?             @relation("categories_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "categories_created_by_foreign")
  users_categories_deleted_byTousers users?             @relation("categories_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "categories_deleted_by_foreign")
  users_categories_updated_byTousers users?             @relation("categories_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "categories_updated_by_foreign")
  product_catalogs                   product_catalogs[]

  @@index([created_by], map: "categories_created_by_foreign")
  @@index([deleted_by], map: "categories_deleted_by_foreign")
  @@index([updated_by], map: "categories_updated_by_foreign")
}

model cbc_sms {
  id                              BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  c_b_c_license_requisition_id    BigInt                   @db.UnsignedBigInt
  customer_id                     BigInt                   @db.UnsignedBigInt
  address                         String?                  @db.VarChar(255)
  phone                           String?                  @db.VarChar(255)
  dongle_id                       BigInt                   @db.UnsignedBigInt
  product_model                   String?                  @db.VarChar(255)
  start_date                      DateTime?                @db.Date
  expired_date                    DateTime?                @db.Date
  valid_period                    String?                  @db.VarChar(255)
  valid_period_type               String?                  @db.VarChar(255)
  remarks                         String?                  @db.VarChar(255)
  license_id                      String?                  @db.VarChar(255)
  software_version                String?                  @db.VarChar(255)
  license_key                     String?                  @db.VarChar(255)
  sms                             String?                  @db.VarChar(255)
  status                          String                   @default("Pending") @db.VarChar(255)
  deleted_at                      DateTime?                @db.Timestamp(0)
  created_by                      BigInt?                  @db.UnsignedBigInt
  updated_by                      BigInt?                  @db.UnsignedBigInt
  deleted_by                      BigInt?                  @db.UnsignedBigInt
  created_at                      DateTime?                @db.Timestamp(0)
  updated_at                      DateTime?                @db.Timestamp(0)
  users_cbc_sms_created_byTousers users?                   @relation("cbc_sms_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cbc_sms_created_by_foreign")
  customers                       customers                @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cbc_sms_customer_id_foreign")
  users_cbc_sms_deleted_byTousers users?                   @relation("cbc_sms_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cbc_sms_deleted_by_foreign")
  dongle_or_serial_entries        dongle_or_serial_entries @relation(fields: [dongle_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "cbc_sms_dongle_id_foreign")
  users_cbc_sms_updated_byTousers users?                   @relation("cbc_sms_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "cbc_sms_updated_by_foreign")

  @@index([created_by], map: "cbc_sms_created_by_foreign")
  @@index([customer_id], map: "cbc_sms_customer_id_foreign")
  @@index([deleted_by], map: "cbc_sms_deleted_by_foreign")
  @@index([dongle_id], map: "cbc_sms_dongle_id_foreign")
  @@index([updated_by], map: "cbc_sms_updated_by_foreign")
}

model cbc_sms_phones {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  cbc_sms_id        BigInt    @db.UnsignedBigInt
  multiple_phone_no String    @db.VarChar(255)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model challan_product_details {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  challan_id            BigInt                  @db.UnsignedBigInt
  product_id            BigInt                  @db.UnsignedBigInt
  quantity              Int                     @default(0)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  challans              challans                @relation(fields: [challan_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "challan_product_details_challan_id_foreign")
  product_catalogs      product_catalogs        @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "challan_product_details_product_id_foreign")
  challan_stock_details challan_stock_details[]

  @@index([challan_id], map: "challan_product_details_challan_id_foreign")
  @@index([product_id], map: "challan_product_details_product_id_foreign")
}

model challan_stock_details {
  id                        BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  challan_product_detail_id BigInt                  @db.UnsignedBigInt
  product_catalog_id        BigInt                  @db.UnsignedBigInt
  quantity                  Int?
  lot_no                    String?                 @db.VarChar(255)
  serial_no                 String?                 @db.VarChar(255)
  created_at                DateTime?               @db.Timestamp(0)
  updated_at                DateTime?               @db.Timestamp(0)
  challan_product_details   challan_product_details @relation(fields: [challan_product_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "challan_stock_details_challan_product_detail_id_foreign")
  product_catalogs          product_catalogs        @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "challan_stock_details_product_catalog_id_foreign")

  @@index([challan_product_detail_id], map: "challan_stock_details_challan_product_detail_id_foreign")
  @@index([product_catalog_id], map: "challan_stock_details_product_catalog_id_foreign")
}

model challans {
  id                               BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  date                             DateTime                  @db.Date
  customer_id                      BigInt                    @db.UnsignedBigInt
  additional_phone                 String?                   @db.VarChar(255)
  contact_person_name              String?                   @db.VarChar(255)
  contact_person_number            String?                   @db.VarChar(255)
  delivery_date                    DateTime                  @db.Date
  is_courier                       Int?
  courier_id                       BigInt?                   @db.UnsignedBigInt
  remarks                          String?                   @db.VarChar(255)
  is_shipment                      Int?
  area_id                          BigInt?                   @db.UnsignedBigInt
  address                          String?                   @db.VarChar(255)
  additional_amount                Int?
  condition                        Int?                      @default(0) @db.TinyInt
  condition_remarks                String?                   @db.VarChar(255)
  status                           String                    @default("pending") @db.VarChar(255)
  created_at                       DateTime?                 @db.Timestamp(0)
  updated_at                       DateTime?                 @db.Timestamp(0)
  deleted_at                       DateTime?                 @db.Timestamp(0)
  created_by                       BigInt?                   @db.UnsignedBigInt
  updated_by                       BigInt?                   @db.UnsignedBigInt
  deleted_by                       BigInt?                   @db.UnsignedBigInt
  receiver_id                      BigInt?                   @db.UnsignedBigInt
  challan_id                       String?                   @db.VarChar(255)
  executive_id                     BigInt?                   @db.UnsignedBigInt
  challan_product_details          challan_product_details[]
  areas                            areas?                    @relation(fields: [area_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "challans_area_id_foreign")
  couriers                         couriers?                 @relation(fields: [courier_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "challans_courier_id_foreign")
  users_challans_created_byTousers users?                    @relation("challans_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "challans_created_by_foreign")
  customers                        customers                 @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "challans_customer_id_foreign")
  users_challans_deleted_byTousers users?                    @relation("challans_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "challans_deleted_by_foreign")
  employees                        employees?                @relation(fields: [executive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "challans_executive_id_foreign")
  receivers                        receivers?                @relation(fields: [receiver_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "challans_receiver_id_foreign")
  users_challans_updated_byTousers users?                    @relation("challans_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "challans_updated_by_foreign")
  sale_invoices                    sale_invoices[]

  @@index([area_id], map: "challans_area_id_foreign")
  @@index([courier_id], map: "challans_courier_id_foreign")
  @@index([created_by], map: "challans_created_by_foreign")
  @@index([customer_id], map: "challans_customer_id_foreign")
  @@index([deleted_by], map: "challans_deleted_by_foreign")
  @@index([executive_id], map: "challans_executive_id_foreign")
  @@index([receiver_id], map: "challans_receiver_id_foreign")
  @@index([updated_by], map: "challans_updated_by_foreign")
}

model clearance_offer_ranges {
  id                 BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  offer_detail_id    BigInt        @db.UnsignedBigInt
  buying_amount_from Decimal       @db.Decimal(10, 2)
  buying_amount_to   Decimal       @db.Decimal(10, 2)
  created_at         DateTime?     @db.Timestamp(0)
  updated_at         DateTime?     @db.Timestamp(0)
  offer_details      offer_details @relation(fields: [offer_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "clearance_offer_ranges_offer_detail_id_foreign")

  @@index([offer_detail_id], map: "clearance_offer_ranges_offer_detail_id_foreign")
}

model commercial_infos {
  id             BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  company_id     BigInt?        @db.UnsignedBigInt
  vat_percentage String?        @db.VarChar(255)
  ait_percentage String?        @db.VarChar(255)
  remarks        String?        @db.VarChar(255)
  created_at     DateTime?      @db.Timestamp(0)
  updated_at     DateTime?      @db.Timestamp(0)
  company_infos  company_infos? @relation(fields: [company_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "commercial_infos_company_id_foreign")

  @@index([company_id], map: "commercial_infos_company_id_foreign")
}

model company_infos {
  id                                    BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  company_name                          String             @db.VarChar(255)
  company_email                         String?            @db.VarChar(255)
  company_phone                         String?            @db.VarChar(255)
  company_address                       String?            @db.VarChar(255)
  company_logo                          String?            @db.VarChar(255)
  company_fav                           String?            @db.VarChar(255)
  report_logo                           String?            @db.VarChar(255)
  company_bio                           String?            @db.VarChar(255)
  website                               String?            @db.VarChar(255)
  deleted_at                            DateTime?          @db.Timestamp(0)
  created_by                            BigInt?            @db.UnsignedBigInt
  updated_by                            BigInt?            @db.UnsignedBigInt
  deleted_by                            BigInt?            @db.UnsignedBigInt
  created_at                            DateTime?          @db.Timestamp(0)
  updated_at                            DateTime?          @db.Timestamp(0)
  commercial_infos                      commercial_infos[]
  users_company_infos_created_byTousers users?             @relation("company_infos_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "company_infos_created_by_foreign")
  users_company_infos_deleted_byTousers users?             @relation("company_infos_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "company_infos_deleted_by_foreign")
  users_company_infos_updated_byTousers users?             @relation("company_infos_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "company_infos_updated_by_foreign")

  @@index([created_by], map: "company_infos_created_by_foreign")
  @@index([deleted_by], map: "company_infos_deleted_by_foreign")
  @@index([updated_by], map: "company_infos_updated_by_foreign")
}

model contact_persion_details {
  id          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  branch_id   BigInt    @db.UnsignedBigInt
  name        String    @db.VarChar(255)
  mobile      String    @db.VarChar(255)
  designation String    @db.VarChar(255)
  created_at  DateTime? @db.Timestamp(0)
  updated_at  DateTime? @db.Timestamp(0)
  branches    branches  @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "contact_persion_details_branch_id_foreign")

  @@index([branch_id], map: "contact_persion_details_branch_id_foreign")
}

model couriers {
  id                               BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  courier_name                     String              @db.VarChar(255)
  courier_branch                   String?             @db.VarChar(255)
  courier_address                  String?             @db.VarChar(255)
  courier_phone                    String?             @db.VarChar(255)
  courier_email                    String?             @db.VarChar(255)
  contact_person_name              String?             @db.VarChar(255)
  contact_person_phone             String?             @db.VarChar(255)
  contact_person_address           String?             @db.VarChar(255)
  contact_person_designation       String?             @db.VarChar(255)
  status                           Int                 @default(0) @db.TinyInt
  deleted_at                       DateTime?           @db.Timestamp(0)
  created_by                       BigInt?             @db.UnsignedBigInt
  updated_by                       BigInt?             @db.UnsignedBigInt
  deleted_by                       BigInt?             @db.UnsignedBigInt
  created_at                       DateTime?           @db.Timestamp(0)
  updated_at                       DateTime?           @db.Timestamp(0)
  challans                         challans[]
  users_couriers_created_byTousers users?              @relation("couriers_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "couriers_created_by_foreign")
  users_couriers_deleted_byTousers users?              @relation("couriers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "couriers_deleted_by_foreign")
  users_couriers_updated_byTousers users?              @relation("couriers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "couriers_updated_by_foreign")
  shipment_verifies                shipment_verifies[]

  @@index([created_by], map: "couriers_created_by_foreign")
  @@index([deleted_by], map: "couriers_deleted_by_foreign")
  @@index([updated_by], map: "couriers_updated_by_foreign")
}

model currencies {
  id                                 BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name                               String            @db.VarChar(255)
  code                               String            @db.VarChar(255)
  symbol                             String            @db.VarChar(255)
  deleted_at                         DateTime?         @db.Timestamp(0)
  created_by                         BigInt?           @db.UnsignedBigInt
  updated_by                         BigInt?           @db.UnsignedBigInt
  deleted_by                         BigInt?           @db.UnsignedBigInt
  created_at                         DateTime?         @db.Timestamp(0)
  updated_at                         DateTime?         @db.Timestamp(0)
  users_currencies_created_byTousers users?            @relation("currencies_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "currencies_created_by_foreign")
  users_currencies_deleted_byTousers users?            @relation("currencies_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "currencies_deleted_by_foreign")
  users_currencies_updated_byTousers users?            @relation("currencies_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "currencies_updated_by_foreign")
  purchase_orders                    purchase_orders[]

  @@index([created_by], map: "currencies_created_by_foreign")
  @@index([deleted_by], map: "currencies_deleted_by_foreign")
  @@index([updated_by], map: "currencies_updated_by_foreign")
}

model customer_departments {
  id                                           BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                         String    @db.VarChar(255)
  code                                         String    @db.VarChar(255)
  status                                       Int       @default(1) @db.TinyInt
  deleted_at                                   DateTime? @db.Timestamp(0)
  created_by                                   BigInt?   @db.UnsignedBigInt
  updated_by                                   BigInt?   @db.UnsignedBigInt
  deleted_by                                   BigInt?   @db.UnsignedBigInt
  created_at                                   DateTime? @db.Timestamp(0)
  updated_at                                   DateTime? @db.Timestamp(0)
  users_customer_departments_created_byTousers users?    @relation("customer_departments_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_departments_created_by_foreign")
  users_customer_departments_deleted_byTousers users?    @relation("customer_departments_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_departments_deleted_by_foreign")
  users_customer_departments_updated_byTousers users?    @relation("customer_departments_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_departments_updated_by_foreign")

  @@index([created_by], map: "customer_departments_created_by_foreign")
  @@index([deleted_by], map: "customer_departments_deleted_by_foreign")
  @@index([updated_by], map: "customer_departments_updated_by_foreign")
}

model customer_ratings {
  id                                       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                     String    @db.VarChar(255)
  code                                     String    @db.VarChar(255)
  status                                   Int       @default(1) @db.TinyInt
  deleted_at                               DateTime? @db.Timestamp(0)
  created_by                               BigInt?   @db.UnsignedBigInt
  updated_by                               BigInt?   @db.UnsignedBigInt
  deleted_by                               BigInt?   @db.UnsignedBigInt
  created_at                               DateTime? @db.Timestamp(0)
  updated_at                               DateTime? @db.Timestamp(0)
  users_customer_ratings_created_byTousers users?    @relation("customer_ratings_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_ratings_created_by_foreign")
  users_customer_ratings_deleted_byTousers users?    @relation("customer_ratings_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_ratings_deleted_by_foreign")
  users_customer_ratings_updated_byTousers users?    @relation("customer_ratings_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_ratings_updated_by_foreign")

  @@index([created_by], map: "customer_ratings_created_by_foreign")
  @@index([deleted_by], map: "customer_ratings_deleted_by_foreign")
  @@index([updated_by], map: "customer_ratings_updated_by_foreign")
}

model customer_setting_prices {
  id                  BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  customer_setting_id BigInt            @db.UnsignedBigInt
  product_type_id     BigInt            @db.UnsignedBigInt
  sales_amount        Float
  created_at          DateTime?         @db.Timestamp(0)
  updated_at          DateTime?         @db.Timestamp(0)
  customer_settings   customer_settings @relation(fields: [customer_setting_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "customer_setting_prices_customer_setting_id_foreign")
  product_types       product_types     @relation(fields: [product_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "customer_setting_prices_product_type_id_foreign")

  @@index([customer_setting_id], map: "customer_setting_prices_customer_setting_id_foreign")
  @@index([product_type_id], map: "customer_setting_prices_product_type_id_foreign")
}

model customer_settings {
  id                      BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id             BigInt                    @db.UnsignedBigInt
  created_at              DateTime?                 @db.Timestamp(0)
  updated_at              DateTime?                 @db.Timestamp(0)
  customer_setting_prices customer_setting_prices[]
  customers               customers                 @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "customer_settings_customer_id_foreign")

  @@index([customer_id], map: "customer_settings_customer_id_foreign")
}

model customer_shipping_news {
  id               BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id      BigInt    @db.UnsignedBigInt
  ship_to          String?   @db.VarChar(255)
  shipping_address String?   @db.Text
  shipping_phone   String?   @db.VarChar(255)
  created_at       DateTime? @db.Timestamp(0)
  updated_at       DateTime? @db.Timestamp(0)
  customers        customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "customer_shipping_news_customer_id_foreign")

  @@index([customer_id], map: "customer_shipping_news_customer_id_foreign")
}

model customer_stocks {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id      BigInt           @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  in_qty           Int?
  out_qty          Int?
  serial_no        String?          @db.VarChar(255)
  lot_no           String?          @db.VarChar(255)
  stock_type       String           @db.VarChar(255)
  sourceable_type  String?          @db.VarChar(255)
  sourceable_id    BigInt?          @db.UnsignedBigInt
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  customers        customers        @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "customer_stocks_customer_id_foreign")
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "customer_stocks_product_id_foreign")

  @@index([customer_id], map: "customer_stocks_customer_id_foreign")
  @@index([product_id], map: "customer_stocks_product_id_foreign")
  @@index([sourceable_type, sourceable_id], map: "customer_stocks_sourceable_type_sourceable_id_index")
}

model customer_types {
  id                                     BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  name                                   String       @db.VarChar(255)
  code                                   String       @db.VarChar(255)
  status                                 Int          @default(1) @db.TinyInt
  deleted_at                             DateTime?    @db.Timestamp(0)
  created_by                             BigInt?      @db.UnsignedBigInt
  updated_by                             BigInt?      @db.UnsignedBigInt
  deleted_by                             BigInt?      @db.UnsignedBigInt
  created_at                             DateTime?    @db.Timestamp(0)
  updated_at                             DateTime?    @db.Timestamp(0)
  users_customer_types_created_byTousers users?       @relation("customer_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_types_created_by_foreign")
  users_customer_types_deleted_byTousers users?       @relation("customer_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_types_deleted_by_foreign")
  users_customer_types_updated_byTousers users?       @relation("customer_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customer_types_updated_by_foreign")
  quotations                             quotations[]

  @@index([created_by], map: "customer_types_created_by_foreign")
  @@index([deleted_by], map: "customer_types_deleted_by_foreign")
  @@index([updated_by], map: "customer_types_updated_by_foreign")
}

model customers {
  id                                  BigInt                                @id @default(autoincrement()) @db.UnsignedBigInt
  company_name                        String                                @db.VarChar(255)
  phone                               String                                @db.VarChar(255)
  email                               String?                               @db.VarChar(255)
  customer_type_id                    BigInt                                @db.UnsignedBigInt
  customer_department_id              BigInt                                @db.UnsignedBigInt
  address                             String?                               @db.Text
  user_ref_id                         BigInt?                               @db.UnsignedBigInt
  customer_ref_id                     BigInt?                               @db.UnsignedBigInt
  company_place_id                    BigInt?                               @db.UnsignedBigInt
  credit_limit                        Float?
  credit_limit_period                 Int?
  product_return_time                 Int?
  payment_mode_id                     BigInt?                               @db.UnsignedBigInt
  customer_status                     Int                                   @default(1) @db.TinyInt
  deleted_at                          DateTime?                             @db.Timestamp(0)
  created_by                          BigInt?                               @db.UnsignedBigInt
  updated_by                          BigInt?                               @db.UnsignedBigInt
  deleted_by                          BigInt?                               @db.UnsignedBigInt
  created_at                          DateTime?                             @db.Timestamp(0)
  updated_at                          DateTime?                             @db.Timestamp(0)
  backup_challans                     backup_challans[]
  c_b_c_license_requisitions          c_b_c_license_requisitions[]
  cbc_sms                             cbc_sms[]
  challans                            challans[]
  customer_settings                   customer_settings[]
  customer_shipping_news              customer_shipping_news[]
  customer_stocks                     customer_stocks[]
  users_customers_created_byTousers   users?                                @relation("customers_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customers_created_by_foreign")
  users_customers_deleted_byTousers   users?                                @relation("customers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customers_deleted_by_foreign")
  users_customers_updated_byTousers   users?                                @relation("customers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "customers_updated_by_foreign")
  daily_calls                         daily_calls[]
  dongle_or_serial_entries            dongle_or_serial_entries[]
  receivers                           receivers[]
  requisitions                        requisitions[]
  sale_invoices                       sale_invoices[]
  sales_orders                        sales_orders[]
  sales_requisitions                  sales_requisitions[]
  shipment_verifies                   shipment_verifies[]
  u_s_g_or_o_p_g_license_requisitions u_s_g_or_o_p_g_license_requisitions[]
  usg_or_opg_sms                      usg_or_opg_sms[]

  @@index([created_by], map: "customers_created_by_foreign")
  @@index([deleted_by], map: "customers_deleted_by_foreign")
  @@index([updated_by], map: "customers_updated_by_foreign")
}

model daily_calls {
  id                                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                         BigInt    @db.UnsignedBigInt
  call_type_id                        BigInt?   @db.UnsignedBigInt
  call_date                           String    @db.VarChar(255)
  is_account_complain                 Int?      @db.TinyInt
  complains_details                   String?   @db.Text
  is_service_complain                 Int?      @db.TinyInt
  service_complain_details            String?   @db.Text
  is_product_required                 Int?      @db.TinyInt
  product_required_details            String?   @db.Text
  remarks                             String?   @db.Text
  status                              Int       @default(1) @db.TinyInt
  deleted_at                          DateTime? @db.Timestamp(0)
  created_by                          BigInt?   @db.UnsignedBigInt
  updated_by                          BigInt?   @db.UnsignedBigInt
  deleted_by                          BigInt?   @db.UnsignedBigInt
  created_at                          DateTime? @db.Timestamp(0)
  updated_at                          DateTime? @db.Timestamp(0)
  users_daily_calls_created_byTousers users?    @relation("daily_calls_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "daily_calls_created_by_foreign")
  customers                           customers @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "daily_calls_customer_id_foreign")
  users_daily_calls_deleted_byTousers users?    @relation("daily_calls_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "daily_calls_deleted_by_foreign")
  users_daily_calls_updated_byTousers users?    @relation("daily_calls_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "daily_calls_updated_by_foreign")

  @@index([created_by], map: "daily_calls_created_by_foreign")
  @@index([customer_id], map: "daily_calls_customer_id_foreign")
  @@index([deleted_by], map: "daily_calls_deleted_by_foreign")
  @@index([updated_by], map: "daily_calls_updated_by_foreign")
}

model default_accounts {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model deliveries {
  id                                 BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  source_type                        String             @db.VarChar(255)
  source_id                          BigInt             @db.UnsignedBigInt
  delivery_date                      DateTime           @db.Date
  status                             String             @default("pending") @db.VarChar(255)
  remarks                            String?            @db.VarChar(255)
  deleted_at                         DateTime?          @db.Timestamp(0)
  created_by                         BigInt?            @db.UnsignedBigInt
  updated_by                         BigInt?            @db.UnsignedBigInt
  deleted_by                         BigInt?            @db.UnsignedBigInt
  created_at                         DateTime?          @db.Timestamp(0)
  updated_at                         DateTime?          @db.Timestamp(0)
  users_deliveries_created_byTousers users?             @relation("deliveries_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "deliveries_created_by_foreign")
  users_deliveries_deleted_byTousers users?             @relation("deliveries_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "deliveries_deleted_by_foreign")
  users_deliveries_updated_byTousers users?             @relation("deliveries_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "deliveries_updated_by_foreign")
  delivery_details                   delivery_details[]

  @@index([created_by], map: "deliveries_created_by_foreign")
  @@index([deleted_by], map: "deliveries_deleted_by_foreign")
  @@index([source_type, source_id], map: "deliveries_source_type_source_id_index")
  @@index([updated_by], map: "deliveries_updated_by_foreign")
}

model delivery_details {
  id               BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  delivery_id      BigInt            @db.UnsignedBigInt
  product_id       BigInt            @db.UnsignedBigInt
  quantity         Decimal           @db.Decimal(10, 2)
  created_at       DateTime?         @db.Timestamp(0)
  updated_at       DateTime?         @db.Timestamp(0)
  deliveries       deliveries        @relation(fields: [delivery_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "delivery_details_delivery_id_foreign")
  product_catalogs product_catalogs  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "delivery_details_product_id_foreign")
  delivery_stocks  delivery_stocks[]

  @@index([delivery_id], map: "delivery_details_delivery_id_foreign")
  @@index([product_id], map: "delivery_details_product_id_foreign")
}

model delivery_stocks {
  id                 BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  delivery_detail_id BigInt           @db.UnsignedBigInt
  product_catalog_id BigInt           @db.UnsignedBigInt
  quantity           Int?
  lot_no             String?          @db.VarChar(255)
  serial_no          String?          @db.VarChar(255)
  created_at         DateTime?        @db.Timestamp(0)
  updated_at         DateTime?        @db.Timestamp(0)
  delivery_details   delivery_details @relation(fields: [delivery_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "delivery_stocks_delivery_detail_id_foreign")
  product_catalogs   product_catalogs @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "delivery_stocks_product_catalog_id_foreign")

  @@index([delivery_detail_id], map: "delivery_stocks_delivery_detail_id_foreign")
  @@index([product_catalog_id], map: "delivery_stocks_product_catalog_id_foreign")
}

model departments {
  id                                  BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name                                String          @db.VarChar(255)
  code                                String?         @db.VarChar(255)
  status                              Int             @default(1) @db.TinyInt
  deleted_at                          DateTime?       @db.Timestamp(0)
  created_by                          BigInt?         @db.UnsignedBigInt
  updated_by                          BigInt?         @db.UnsignedBigInt
  deleted_by                          BigInt?         @db.UnsignedBigInt
  created_at                          DateTime?       @db.Timestamp(0)
  updated_at                          DateTime?       @db.Timestamp(0)
  users_departments_created_byTousers users?          @relation("departments_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "departments_created_by_foreign")
  users_departments_deleted_byTousers users?          @relation("departments_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "departments_deleted_by_foreign")
  users_departments_updated_byTousers users?          @relation("departments_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "departments_updated_by_foreign")
  job_templates                       job_templates[]
  jobs                                jobs[]

  @@index([created_by], map: "departments_created_by_foreign")
  @@index([deleted_by], map: "departments_deleted_by_foreign")
  @@index([updated_by], map: "departments_updated_by_foreign")
}

model designations {
  id                                   BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name                                 String          @db.VarChar(255)
  code                                 String?         @db.VarChar(255)
  status                               Int             @default(1) @db.TinyInt
  deleted_at                           DateTime?       @db.Timestamp(0)
  created_by                           BigInt?         @db.UnsignedBigInt
  updated_by                           BigInt?         @db.UnsignedBigInt
  deleted_by                           BigInt?         @db.UnsignedBigInt
  created_at                           DateTime?       @db.Timestamp(0)
  updated_at                           DateTime?       @db.Timestamp(0)
  users_designations_created_byTousers users?          @relation("designations_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "designations_created_by_foreign")
  users_designations_deleted_byTousers users?          @relation("designations_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "designations_deleted_by_foreign")
  users_designations_updated_byTousers users?          @relation("designations_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "designations_updated_by_foreign")
  job_templates                        job_templates[]
  jobs                                 jobs[]

  @@index([created_by], map: "designations_created_by_foreign")
  @@index([deleted_by], map: "designations_deleted_by_foreign")
  @@index([updated_by], map: "designations_updated_by_foreign")
}

model discount_sales_products {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  offer_detail_id  BigInt           @db.UnsignedBigInt
  sales_product    BigInt           @db.UnsignedBigInt
  sales_quentity   Decimal          @db.Decimal(8, 2)
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  offer_details    offer_details    @relation(fields: [offer_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "discount_sales_products_offer_detail_id_foreign")
  product_catalogs product_catalogs @relation(fields: [sales_product], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "discount_sales_products_sales_product_foreign")

  @@index([offer_detail_id], map: "discount_sales_products_offer_detail_id_foreign")
  @@index([sales_product], map: "discount_sales_products_sales_product_foreign")
}

model doctors {
  id                              BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  doctor_name                     String    @db.VarChar(255)
  contact_number                  String?   @db.VarChar(255)
  resident_address                String?   @db.VarChar(255)
  chamber_address                 String?   @db.VarChar(255)
  hospital_address                String?   @db.VarChar(255)
  deleted_at                      DateTime? @db.Timestamp(0)
  created_by                      BigInt?   @db.UnsignedBigInt
  updated_by                      BigInt?   @db.UnsignedBigInt
  deleted_by                      BigInt?   @db.UnsignedBigInt
  created_at                      DateTime? @db.Timestamp(0)
  updated_at                      DateTime? @db.Timestamp(0)
  users_doctors_created_byTousers users?    @relation("doctors_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "doctors_created_by_foreign")
  users_doctors_deleted_byTousers users?    @relation("doctors_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "doctors_deleted_by_foreign")
  users_doctors_updated_byTousers users?    @relation("doctors_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "doctors_updated_by_foreign")

  @@index([created_by], map: "doctors_created_by_foreign")
  @@index([deleted_by], map: "doctors_deleted_by_foreign")
  @@index([updated_by], map: "doctors_updated_by_foreign")
}

model dongle_or_serial_entries {
  id                                               BigInt                                @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                                      BigInt                                @db.UnsignedBigInt
  address                                          String                                @db.VarChar(255)
  product_id                                       BigInt                                @db.UnsignedBigInt
  product_type                                     String                                @db.VarChar(255)
  dongle_id                                        String                                @db.VarChar(255)
  software_version                                 String?                               @db.VarChar(255)
  status                                           String                                @db.VarChar(255)
  file_upload                                      String?                               @db.VarChar(255)
  deleted_at                                       DateTime?                             @db.Timestamp(0)
  created_by                                       BigInt?                               @db.UnsignedBigInt
  updated_by                                       BigInt?                               @db.UnsignedBigInt
  deleted_by                                       BigInt?                               @db.UnsignedBigInt
  created_at                                       DateTime?                             @db.Timestamp(0)
  updated_at                                       DateTime?                             @db.Timestamp(0)
  c_b_c_license_requisitions                       c_b_c_license_requisitions[]
  cbc_sms                                          cbc_sms[]
  users_dongle_or_serial_entries_created_byTousers users?                                @relation("dongle_or_serial_entries_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dongle_or_serial_entries_created_by_foreign")
  customers                                        customers                             @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "dongle_or_serial_entries_customer_id_foreign")
  users_dongle_or_serial_entries_deleted_byTousers users?                                @relation("dongle_or_serial_entries_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dongle_or_serial_entries_deleted_by_foreign")
  product_catalogs                                 product_catalogs                      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "dongle_or_serial_entries_product_id_foreign")
  users_dongle_or_serial_entries_updated_byTousers users?                                @relation("dongle_or_serial_entries_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "dongle_or_serial_entries_updated_by_foreign")
  u_s_g_or_o_p_g_license_requisitions              u_s_g_or_o_p_g_license_requisitions[]
  usg_or_opg_sms                                   usg_or_opg_sms[]

  @@index([created_by], map: "dongle_or_serial_entries_created_by_foreign")
  @@index([customer_id], map: "dongle_or_serial_entries_customer_id_foreign")
  @@index([deleted_by], map: "dongle_or_serial_entries_deleted_by_foreign")
  @@index([product_id], map: "dongle_or_serial_entries_product_id_foreign")
  @@index([updated_by], map: "dongle_or_serial_entries_updated_by_foreign")
}

model education_details {
  id                 BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id        BigInt    @db.UnsignedBigInt
  degree_title       String?   @db.VarChar(255)
  institute_name     String?   @db.VarChar(255)
  group              String?   @db.VarChar(255)
  duration           String?   @db.VarChar(255)
  passing_year       String?   @db.VarChar(255)
  result             String?   @db.VarChar(255)
  certificate_upload String?   @db.VarChar(255)
  created_at         DateTime? @db.Timestamp(0)
  updated_at         DateTime? @db.Timestamp(0)
  employees          employees @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "education_details_employee_id_foreign")

  @@index([employee_id], map: "education_details_employee_id_foreign")
}

model emergency_notes {
  id                                      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  service_id                              BigInt?   @db.UnsignedBigInt
  note                                    String    @db.Text
  deleted_at                              DateTime? @db.Timestamp(0)
  created_by                              BigInt?   @db.UnsignedBigInt
  updated_by                              BigInt?   @db.UnsignedBigInt
  deleted_by                              BigInt?   @db.UnsignedBigInt
  created_at                              DateTime? @db.Timestamp(0)
  updated_at                              DateTime? @db.Timestamp(0)
  users_emergency_notes_created_byTousers users?    @relation("emergency_notes_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emergency_notes_created_by_foreign")
  users_emergency_notes_deleted_byTousers users?    @relation("emergency_notes_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emergency_notes_deleted_by_foreign")
  services                                services? @relation(fields: [service_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emergency_notes_service_id_foreign")
  users_emergency_notes_updated_byTousers users?    @relation("emergency_notes_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "emergency_notes_updated_by_foreign")

  @@index([created_by], map: "emergency_notes_created_by_foreign")
  @@index([deleted_by], map: "emergency_notes_deleted_by_foreign")
  @@index([service_id], map: "emergency_notes_service_id_foreign")
  @@index([updated_by], map: "emergency_notes_updated_by_foreign")
}

model employee_salaries {
  id                                        BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                               BigInt         @db.UnsignedBigInt
  salary_setup_id                           BigInt?        @db.UnsignedBigInt
  basic                                     Decimal        @default(0.00000) @db.Decimal(20, 5)
  house_rent                                Decimal        @default(0.00000) @db.Decimal(20, 5)
  medical                                   Decimal        @default(0.00000) @db.Decimal(20, 5)
  conveyance                                Decimal        @default(0.00000) @db.Decimal(20, 5)
  others                                    Decimal        @default(0.00000) @db.Decimal(20, 5)
  gross                                     Decimal        @default(0.00000) @db.Decimal(20, 5)
  effective_date                            DateTime       @db.Date
  tax                                       Decimal        @default(0.00000) @db.Decimal(20, 5)
  status                                    Int            @default(1) @db.TinyInt
  deleted_at                                DateTime?      @db.Timestamp(0)
  created_by                                BigInt?        @db.UnsignedBigInt
  updated_by                                BigInt?        @db.UnsignedBigInt
  deleted_by                                BigInt?        @db.UnsignedBigInt
  created_at                                DateTime?      @db.Timestamp(0)
  updated_at                                DateTime?      @db.Timestamp(0)
  users_employee_salaries_created_byTousers users?         @relation("employee_salaries_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employee_salaries_created_by_foreign")
  users_employee_salaries_deleted_byTousers users?         @relation("employee_salaries_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employee_salaries_deleted_by_foreign")
  employees                                 employees      @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "employee_salaries_employee_id_foreign")
  salary_setups                             salary_setups? @relation(fields: [salary_setup_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "employee_salaries_salary_setup_id_foreign")
  users_employee_salaries_updated_byTousers users?         @relation("employee_salaries_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employee_salaries_updated_by_foreign")

  @@index([created_by], map: "employee_salaries_created_by_foreign")
  @@index([deleted_by], map: "employee_salaries_deleted_by_foreign")
  @@index([employee_id], map: "employee_salaries_employee_id_foreign")
  @@index([salary_setup_id], map: "employee_salaries_salary_setup_id_foreign")
  @@index([updated_by], map: "employee_salaries_updated_by_foreign")
}

model employees {
  id                                                             BigInt                 @id @default(autoincrement()) @db.UnsignedBigInt
  full_name                                                      String                 @db.VarChar(255)
  father_name                                                    String?                @db.VarChar(255)
  mother_name                                                    String?                @db.VarChar(255)
  gender                                                         String?                @db.VarChar(255)
  office_phone                                                   String?                @db.VarChar(255)
  personal_mobile                                                String                 @db.VarChar(255)
  alternate_phone                                                String?                @db.VarChar(255)
  email_address                                                  String?                @db.VarChar(255)
  country                                                        String?                @db.VarChar(255)
  city                                                           String?                @db.VarChar(255)
  present_address                                                String?                @db.VarChar(255)
  permanent_address                                              String?                @db.VarChar(255)
  blood_group                                                    String?                @db.VarChar(255)
  religion                                                       String?                @db.VarChar(255)
  marital_status                                                 String?                @db.VarChar(255)
  photograph                                                     String?                @db.VarChar(255)
  resume                                                         String?                @db.VarChar(255)
  national_id                                                    String?                @db.VarChar(255)
  front_image                                                    String?                @db.VarChar(255)
  back_image                                                     String?                @db.VarChar(255)
  signature                                                      String?                @db.VarChar(255)
  address_proof                                                  String?                @db.VarChar(255)
  other_documents                                                String?                @db.VarChar(255)
  bank_name                                                      String?                @db.VarChar(255)
  account_holder_name                                            String?                @db.VarChar(255)
  account_number                                                 String?                @db.VarChar(255)
  bank_branch                                                    String?                @db.VarChar(255)
  routing_number                                                 String?                @db.VarChar(255)
  etin_number                                                    String?                @db.VarChar(255)
  user_id                                                        BigInt?                @db.UnsignedBigInt
  date_of_birth                                                  String?                @db.VarChar(255)
  epf_number                                                     String?                @db.VarChar(255)
  email_accounts                                                 String?                @db.VarChar(255)
  software_access                                                String?                @db.VarChar(255)
  additional_notes                                               String?                @db.VarChar(255)
  status                                                         Int                    @default(1) @db.TinyInt
  deleted_at                                                     DateTime?              @db.Timestamp(0)
  created_by                                                     BigInt?                @db.UnsignedBigInt
  updated_by                                                     BigInt?                @db.UnsignedBigInt
  deleted_by                                                     BigInt?                @db.UnsignedBigInt
  created_at                                                     DateTime?              @db.Timestamp(0)
  updated_at                                                     DateTime?              @db.Timestamp(0)
  attendances                                                    attendances[]
  bills_and_allowances                                           bills_and_allowances[]
  challans                                                       challans[]
  education_details                                              education_details[]
  employee_salaries                                              employee_salaries[]
  users_employees_created_byTousers                              users?                 @relation("employees_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employees_created_by_foreign")
  users_employees_deleted_byTousers                              users?                 @relation("employees_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employees_deleted_by_foreign")
  users_employees_updated_byTousers                              users?                 @relation("employees_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "employees_updated_by_foreign")
  users_employees_user_idTousers                                 users?                 @relation("employees_user_idTousers", fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "employees_user_id_foreign")
  employement_details_employement_details_employee_idToemployees employement_details[]  @relation("employement_details_employee_idToemployees")
  employement_details_employement_details_supervisorToemployees  employement_details[]  @relation("employement_details_supervisorToemployees")
  leave_applications                                             leave_applications[]
  salary_generates                                               salary_generates[]
  territory_assigns                                              territory_assigns[]
  visit_plans                                                    visit_plans[]

  @@index([created_by], map: "employees_created_by_foreign")
  @@index([deleted_by], map: "employees_deleted_by_foreign")
  @@index([updated_by], map: "employees_updated_by_foreign")
  @@index([user_id], map: "employees_user_id_foreign")
}

model employement_details {
  id                                                   BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                                          BigInt     @db.UnsignedBigInt
  card_no                                              String?    @db.VarChar(255)
  date_of_joining                                      String?    @db.VarChar(255)
  employment_type_id                                   BigInt?    @db.UnsignedBigInt
  department_id                                        BigInt?    @db.UnsignedBigInt
  designation_id                                       BigInt?    @db.UnsignedBigInt
  branch_id                                            BigInt?    @db.UnsignedBigInt
  supervisor                                           BigInt?    @db.UnsignedBigInt
  created_at                                           DateTime?  @db.Timestamp(0)
  updated_at                                           DateTime?  @db.Timestamp(0)
  branches                                             branches?  @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "employement_details_branch_id_foreign")
  employees_employement_details_employee_idToemployees employees  @relation("employement_details_employee_idToemployees", fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "employement_details_employee_id_foreign")
  employees_employement_details_supervisorToemployees  employees? @relation("employement_details_supervisorToemployees", fields: [supervisor], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "employement_details_supervisor_foreign")

  @@index([branch_id], map: "employement_details_branch_id_foreign")
  @@index([employee_id], map: "employement_details_employee_id_foreign")
  @@index([supervisor], map: "employement_details_supervisor_foreign")
}

model expense_types {
  id                                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  code                                  String?   @db.VarChar(255)
  name                                  String    @db.VarChar(255)
  description                           String?   @db.Text
  status                                Boolean   @default(true)
  deleted_at                            DateTime? @db.Timestamp(0)
  created_by                            BigInt?   @db.UnsignedBigInt
  updated_by                            BigInt?   @db.UnsignedBigInt
  deleted_by                            BigInt?   @db.UnsignedBigInt
  created_at                            DateTime? @db.Timestamp(0)
  updated_at                            DateTime? @db.Timestamp(0)
  users_expense_types_created_byTousers users?    @relation("expense_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "expense_types_created_by_foreign")
  users_expense_types_deleted_byTousers users?    @relation("expense_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "expense_types_deleted_by_foreign")
  users_expense_types_updated_byTousers users?    @relation("expense_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "expense_types_updated_by_foreign")

  @@index([created_by], map: "expense_types_created_by_foreign")
  @@index([deleted_by], map: "expense_types_deleted_by_foreign")
  @@index([updated_by], map: "expense_types_updated_by_foreign")
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model general_expenses {
  id                     BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  bills_and_allowance_id BigInt               @db.UnsignedBigInt
  expense_type           String               @db.VarChar(255)
  expense_description    String               @db.Text
  amount                 Decimal              @db.Decimal(10, 2)
  settlement_amount      Decimal              @db.Decimal(10, 2)
  receipts_invoices      String?              @db.VarChar(255)
  supporting_documents   String?              @db.VarChar(255)
  expense_date           DateTime?            @db.Date
  created_at             DateTime?            @db.Timestamp(0)
  updated_at             DateTime?            @db.Timestamp(0)
  bills_and_allowances   bills_and_allowances @relation(fields: [bills_and_allowance_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "general_expenses_bills_and_allowance_id_foreign")

  @@index([bills_and_allowance_id], map: "general_expenses_bills_and_allowance_id_foreign")
}

model general_notifications {
  id                        BigInt                      @id @default(autoincrement()) @db.UnsignedBigInt
  title                     String                      @db.VarChar(255)
  description               String                      @db.Text
  status                    Int                         @default(1) @db.TinyInt
  action                    String?                     @db.VarChar(255)
  created_at                DateTime?                   @db.Timestamp(0)
  updated_at                DateTime?                   @db.Timestamp(0)
  user_general_notification user_general_notification[]
}

model geo_locations {
  id                                                             BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  name                                                           String              @db.VarChar(255)
  type                                                           String              @db.VarChar(255)
  parent_id                                                      BigInt?             @db.UnsignedBigInt
  deleted_at                                                     DateTime?           @db.Timestamp(0)
  created_by                                                     BigInt?             @db.UnsignedBigInt
  updated_by                                                     BigInt?             @db.UnsignedBigInt
  deleted_by                                                     BigInt?             @db.UnsignedBigInt
  created_at                                                     DateTime?           @db.Timestamp(0)
  updated_at                                                     DateTime?           @db.Timestamp(0)
  areas_areas_district_idTogeo_locations                         areas[]             @relation("areas_district_idTogeo_locations")
  areas_areas_division_idTogeo_locations                         areas[]             @relation("areas_division_idTogeo_locations")
  areas_areas_thana_idTogeo_locations                            areas[]             @relation("areas_thana_idTogeo_locations")
  areas_areas_union_idTogeo_locations                            areas[]             @relation("areas_union_idTogeo_locations")
  areas_areas_village_idTogeo_locations                          areas[]             @relation("areas_village_idTogeo_locations")
  users_geo_locations_created_byTousers                          users?              @relation("geo_locations_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "geo_locations_created_by_foreign")
  users_geo_locations_deleted_byTousers                          users?              @relation("geo_locations_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "geo_locations_deleted_by_foreign")
  geo_locations                                                  geo_locations?      @relation("geo_locationsTogeo_locations", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "geo_locations_parent_id_foreign")
  other_geo_locations                                            geo_locations[]     @relation("geo_locationsTogeo_locations")
  users_geo_locations_updated_byTousers                          users?              @relation("geo_locations_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "geo_locations_updated_by_foreign")
  territory_details_territory_details_district_idTogeo_locations territory_details[] @relation("territory_details_district_idTogeo_locations")
  territory_details_territory_details_division_idTogeo_locations territory_details[] @relation("territory_details_division_idTogeo_locations")
  territory_details_territory_details_thana_idTogeo_locations    territory_details[] @relation("territory_details_thana_idTogeo_locations")
  territory_details_territory_details_union_idTogeo_locations    territory_details[] @relation("territory_details_union_idTogeo_locations")

  @@index([created_by], map: "geo_locations_created_by_foreign")
  @@index([deleted_by], map: "geo_locations_deleted_by_foreign")
  @@index([parent_id], map: "geo_locations_parent_id_foreign")
  @@index([updated_by], map: "geo_locations_updated_by_foreign")
}

model gift_offer_products {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  offer_detail_id  BigInt           @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  quantity         Int
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  offer_details    offer_details    @relation(fields: [offer_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "gift_offer_products_offer_detail_id_foreign")
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "gift_offer_products_product_id_foreign")

  @@index([offer_detail_id], map: "gift_offer_products_offer_detail_id_foreign")
  @@index([product_id], map: "gift_offer_products_product_id_foreign")
}

model gift_sales_products {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  offer_detail_id  BigInt           @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  quantity         Int
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  offer_details    offer_details    @relation(fields: [offer_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "gift_sales_products_offer_detail_id_foreign")
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "gift_sales_products_product_id_foreign")

  @@index([offer_detail_id], map: "gift_sales_products_offer_detail_id_foreign")
  @@index([product_id], map: "gift_sales_products_product_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model holidays {
  id                               BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                             String    @db.VarChar(255)
  start_date                       DateTime? @db.DateTime(0)
  end_date                         DateTime? @db.DateTime(0)
  every_year                       Boolean?
  deleted_at                       DateTime? @db.Timestamp(0)
  created_by                       BigInt?   @db.UnsignedBigInt
  updated_by                       BigInt?   @db.UnsignedBigInt
  deleted_by                       BigInt?   @db.UnsignedBigInt
  created_at                       DateTime? @db.Timestamp(0)
  updated_at                       DateTime? @db.Timestamp(0)
  users_holidays_created_byTousers users?    @relation("holidays_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "holidays_created_by_foreign")
  users_holidays_deleted_byTousers users?    @relation("holidays_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "holidays_deleted_by_foreign")
  users_holidays_updated_byTousers users?    @relation("holidays_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "holidays_updated_by_foreign")

  @@index([created_by], map: "holidays_created_by_foreign")
  @@index([deleted_by], map: "holidays_deleted_by_foreign")
  @@index([updated_by], map: "holidays_updated_by_foreign")
}

model invoice_details {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  sales_invoice_id BigInt           @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  quantity         Float
  price            Float
  unit_discount    Float?
  total_discount   Float?
  amount           Float
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "invoice_details_product_id_foreign")
  sale_invoices    sale_invoices    @relation(fields: [sales_invoice_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "invoice_details_sales_invoice_id_foreign")

  @@index([product_id], map: "invoice_details_product_id_foreign")
  @@index([sales_invoice_id], map: "invoice_details_sales_invoice_id_foreign")
}

model issue_product_details {
  id                 BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  issue_product_id   BigInt         @db.UnsignedBigInt
  product_catalog_id BigInt         @db.UnsignedBigInt
  product_name       String?        @db.VarChar(255)
  sku                String?        @db.VarChar(255)
  unit_type_id       BigInt?        @db.UnsignedBigInt
  quantity           Decimal?       @db.Decimal(8, 2)
  created_at         DateTime?      @db.Timestamp(0)
  updated_at         DateTime?      @db.Timestamp(0)
  issue_products     issue_products @relation(fields: [issue_product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "issue_product_details_issue_product_id_foreign")
  products           products       @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "issue_product_details_product_catalog_id_foreign")
  units              units?         @relation(fields: [unit_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "issue_product_details_unit_type_id_foreign")

  @@index([issue_product_id], map: "issue_product_details_issue_product_id_foreign")
  @@index([product_catalog_id], map: "issue_product_details_product_catalog_id_foreign")
  @@index([unit_type_id], map: "issue_product_details_unit_type_id_foreign")
}

model issue_products {
  id                                     BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  issue_date                             String?                 @db.VarChar(255)
  warehouse_id                           BigInt                  @db.UnsignedBigInt
  purpose_id                             BigInt                  @db.UnsignedBigInt
  customer_id                            BigInt?                 @db.UnsignedBigInt
  machine_id                             BigInt?                 @db.UnsignedBigInt
  order_number                           String?                 @db.VarChar(255)
  remarks                                String?                 @db.Text
  created_at                             DateTime?               @db.Timestamp(0)
  updated_at                             DateTime?               @db.Timestamp(0)
  deleted_at                             DateTime?               @db.Timestamp(0)
  created_by                             BigInt?                 @db.UnsignedBigInt
  updated_by                             BigInt?                 @db.UnsignedBigInt
  deleted_by                             BigInt?                 @db.UnsignedBigInt
  issue_product_details                  issue_product_details[]
  users_issue_products_created_byTousers users?                  @relation("issue_products_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "issue_products_created_by_foreign")
  users_issue_products_deleted_byTousers users?                  @relation("issue_products_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "issue_products_deleted_by_foreign")
  users_issue_products_updated_byTousers users?                  @relation("issue_products_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "issue_products_updated_by_foreign")

  @@index([created_by], map: "issue_products_created_by_foreign")
  @@index([deleted_by], map: "issue_products_deleted_by_foreign")
  @@index([updated_by], map: "issue_products_updated_by_foreign")
}

model job_application_educations {
  id                 BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  job_application_id BigInt           @db.UnsignedBigInt
  institute          String           @db.VarChar(255)
  examination        String           @db.VarChar(255)
  result             String           @db.VarChar(255)
  passing_year       String           @db.VarChar(255)
  created_at         DateTime?        @db.Timestamp(0)
  updated_at         DateTime?        @db.Timestamp(0)
  job_applications   job_applications @relation(fields: [job_application_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "job_application_educations_job_application_id_foreign")

  @@index([job_application_id], map: "job_application_educations_job_application_id_foreign")
}

model job_application_experienes {
  id                 BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  job_application_id BigInt           @db.UnsignedBigInt
  company_name       String           @db.VarChar(255)
  designations       String           @db.VarChar(255)
  duration           String           @db.VarChar(255)
  created_at         DateTime?        @db.Timestamp(0)
  updated_at         DateTime?        @db.Timestamp(0)
  job_applications   job_applications @relation(fields: [job_application_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "job_application_experienes_job_application_id_foreign")

  @@index([job_application_id], map: "job_application_experienes_job_application_id_foreign")
}

model job_applications {
  id                         BigInt                       @id @default(autoincrement()) @db.UnsignedBigInt
  job_id                     BigInt                       @db.UnsignedBigInt
  name                       String                       @db.VarChar(255)
  mobile                     String                       @db.VarChar(255)
  national_id                String?                      @db.VarChar(255)
  email                      String                       @db.VarChar(255)
  image                      String?                      @db.VarChar(255)
  cv                         String?                      @db.VarChar(255)
  father_or_husband_name     String                       @db.VarChar(255)
  mother_name                String                       @db.VarChar(255)
  present_address            String?                      @db.VarChar(255)
  permanent_address          String?                      @db.VarChar(255)
  status                     String                       @default("0") @db.VarChar(255)
  remark                     String?                      @db.VarChar(255)
  deleted_at                 DateTime?                    @db.Timestamp(0)
  created_at                 DateTime?                    @db.Timestamp(0)
  updated_at                 DateTime?                    @db.Timestamp(0)
  job_application_educations job_application_educations[]
  job_application_experienes job_application_experienes[]
  jobs                       jobs                         @relation(fields: [job_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "job_applications_job_id_foreign")

  @@index([job_id], map: "job_applications_job_id_foreign")
}

model job_templates {
  id                                    BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  title                                 String       @db.VarChar(255)
  branch_id                             BigInt?      @db.UnsignedBigInt
  designation_id                        BigInt       @db.UnsignedBigInt
  department_id                         BigInt       @db.UnsignedBigInt
  office_hours                          String?      @db.VarChar(255)
  weekend                               String?      @db.VarChar(255)
  description                           String?      @db.LongText
  responsibility                        String?      @db.LongText
  educational_requirement               String?      @db.LongText
  experience                            String?      @db.LongText
  company_overview                      String?      @db.LongText
  location                              String?      @db.VarChar(255)
  salary                                String?      @db.VarChar(255)
  employee_centric_policy               String?      @db.LongText
  status                                Int          @default(1) @db.TinyInt
  deleted_at                            DateTime?    @db.Timestamp(0)
  created_by                            BigInt?      @db.UnsignedBigInt
  updated_by                            BigInt?      @db.UnsignedBigInt
  deleted_by                            BigInt?      @db.UnsignedBigInt
  created_at                            DateTime?    @db.Timestamp(0)
  updated_at                            DateTime?    @db.Timestamp(0)
  branches                              branches?    @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "job_templates_branch_id_foreign")
  users_job_templates_created_byTousers users?       @relation("job_templates_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "job_templates_created_by_foreign")
  users_job_templates_deleted_byTousers users?       @relation("job_templates_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "job_templates_deleted_by_foreign")
  departments                           departments  @relation(fields: [department_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "job_templates_department_id_foreign")
  designations                          designations @relation(fields: [designation_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "job_templates_designation_id_foreign")
  users_job_templates_updated_byTousers users?       @relation("job_templates_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "job_templates_updated_by_foreign")

  @@index([branch_id], map: "job_templates_branch_id_foreign")
  @@index([created_by], map: "job_templates_created_by_foreign")
  @@index([deleted_by], map: "job_templates_deleted_by_foreign")
  @@index([department_id], map: "job_templates_department_id_foreign")
  @@index([designation_id], map: "job_templates_designation_id_foreign")
  @@index([updated_by], map: "job_templates_updated_by_foreign")
}

model jobs {
  id                           BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  branch_id                    BigInt             @db.UnsignedBigInt
  department_id                BigInt             @db.UnsignedBigInt
  designation_id               BigInt             @db.UnsignedBigInt
  title                        String             @db.VarChar(255)
  job_type                     String?            @db.VarChar(255)
  gender                       String?            @db.VarChar(255)
  office_hours                 String             @db.VarChar(255)
  weekend                      String             @db.VarChar(255)
  start_at                     DateTime           @db.Date
  deadline_at                  DateTime           @db.Date
  salary                       String?            @db.VarChar(255)
  location                     String             @db.VarChar(255)
  description                  String             @db.LongText
  company_overview             String             @db.LongText
  experience                   String             @db.LongText
  employee_centric_policy      String             @db.LongText
  educational_requirement      String             @db.LongText
  responsibility               String             @db.LongText
  status                       Int                @default(1) @db.TinyInt
  deleted_at                   DateTime?          @db.Timestamp(0)
  created_by                   BigInt?            @db.UnsignedBigInt
  updated_by                   BigInt?            @db.UnsignedBigInt
  deleted_by                   BigInt?            @db.UnsignedBigInt
  created_at                   DateTime?          @db.Timestamp(0)
  updated_at                   DateTime?          @db.Timestamp(0)
  job_applications             job_applications[]
  branches                     branches           @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "jobs_branch_id_foreign")
  users_jobs_created_byTousers users?             @relation("jobs_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "jobs_created_by_foreign")
  users_jobs_deleted_byTousers users?             @relation("jobs_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "jobs_deleted_by_foreign")
  departments                  departments        @relation(fields: [department_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "jobs_department_id_foreign")
  designations                 designations       @relation(fields: [designation_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "jobs_designation_id_foreign")
  users_jobs_updated_byTousers users?             @relation("jobs_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "jobs_updated_by_foreign")

  @@index([branch_id], map: "jobs_branch_id_foreign")
  @@index([created_by], map: "jobs_created_by_foreign")
  @@index([deleted_by], map: "jobs_deleted_by_foreign")
  @@index([department_id], map: "jobs_department_id_foreign")
  @@index([designation_id], map: "jobs_designation_id_foreign")
  @@index([updated_by], map: "jobs_updated_by_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model leave_applications {
  id                                             BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                                    BigInt      @db.UnsignedBigInt
  leave_type_id                                  BigInt      @db.UnsignedBigInt
  day_count                                      Int
  from_date                                      DateTime    @db.Date
  to_date                                        DateTime    @db.Date
  from_date_leave_count                          String      @default("full_day") @db.VarChar(255)
  to_date_leave_count                            String      @default("full_day") @db.VarChar(255)
  remarks                                        String?     @db.VarChar(255)
  status                                         String      @default("pending") @db.VarChar(255)
  file_uploads                                   String?     @db.LongText
  approved_by                                    BigInt?     @db.UnsignedBigInt
  approved_comments                              String?     @db.VarChar(255)
  rejected_by                                    BigInt?     @db.UnsignedBigInt
  rejected_comments                              String?     @db.VarChar(255)
  recommended_by                                 BigInt?     @db.UnsignedBigInt
  recommended_comments                           String?     @db.VarChar(255)
  deleted_at                                     DateTime?   @db.Timestamp(0)
  created_by                                     BigInt?     @db.UnsignedBigInt
  updated_by                                     BigInt?     @db.UnsignedBigInt
  deleted_by                                     BigInt?     @db.UnsignedBigInt
  created_at                                     DateTime?   @db.Timestamp(0)
  updated_at                                     DateTime?   @db.Timestamp(0)
  users_leave_applications_approved_byTousers    users?      @relation("leave_applications_approved_byTousers", fields: [approved_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "leave_applications_approved_by_foreign")
  users_leave_applications_created_byTousers     users?      @relation("leave_applications_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "leave_applications_created_by_foreign")
  users_leave_applications_deleted_byTousers     users?      @relation("leave_applications_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "leave_applications_deleted_by_foreign")
  employees                                      employees   @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "leave_applications_employee_id_foreign")
  leave_types                                    leave_types @relation(fields: [leave_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "leave_applications_leave_type_id_foreign")
  users_leave_applications_recommended_byTousers users?      @relation("leave_applications_recommended_byTousers", fields: [recommended_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "leave_applications_recommended_by_foreign")
  users_leave_applications_rejected_byTousers    users?      @relation("leave_applications_rejected_byTousers", fields: [rejected_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "leave_applications_rejected_by_foreign")
  users_leave_applications_updated_byTousers     users?      @relation("leave_applications_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "leave_applications_updated_by_foreign")

  @@index([approved_by], map: "leave_applications_approved_by_foreign")
  @@index([created_by], map: "leave_applications_created_by_foreign")
  @@index([deleted_by], map: "leave_applications_deleted_by_foreign")
  @@index([employee_id], map: "leave_applications_employee_id_foreign")
  @@index([leave_type_id], map: "leave_applications_leave_type_id_foreign")
  @@index([recommended_by], map: "leave_applications_recommended_by_foreign")
  @@index([rejected_by], map: "leave_applications_rejected_by_foreign")
  @@index([updated_by], map: "leave_applications_updated_by_foreign")
}

model leave_types {
  id                                  BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  leave_type_name                     String               @db.VarChar(255)
  payment_mode                        String               @db.VarChar(255)
  total_day                           Int?
  simultaneously_limit                Int?
  deleted_at                          DateTime?            @db.Timestamp(0)
  created_by                          BigInt?              @db.UnsignedBigInt
  updated_by                          BigInt?              @db.UnsignedBigInt
  deleted_by                          BigInt?              @db.UnsignedBigInt
  created_at                          DateTime?            @db.Timestamp(0)
  updated_at                          DateTime?            @db.Timestamp(0)
  leave_applications                  leave_applications[]
  users_leave_types_created_byTousers users?               @relation("leave_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "leave_types_created_by_foreign")
  users_leave_types_deleted_byTousers users?               @relation("leave_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "leave_types_deleted_by_foreign")
  users_leave_types_updated_byTousers users?               @relation("leave_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "leave_types_updated_by_foreign")

  @@index([created_by], map: "leave_types_created_by_foreign")
  @@index([deleted_by], map: "leave_types_deleted_by_foreign")
  @@index([updated_by], map: "leave_types_updated_by_foreign")
}

model location_types {
  id                                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                   String    @db.VarChar(255)
  code                                   String    @db.VarChar(255)
  status                                 Int       @default(1) @db.TinyInt
  deleted_at                             DateTime? @db.Timestamp(0)
  created_by                             BigInt?   @db.UnsignedBigInt
  updated_by                             BigInt?   @db.UnsignedBigInt
  deleted_by                             BigInt?   @db.UnsignedBigInt
  created_at                             DateTime? @db.Timestamp(0)
  updated_at                             DateTime? @db.Timestamp(0)
  users_location_types_created_byTousers users?    @relation("location_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "location_types_created_by_foreign")
  users_location_types_deleted_byTousers users?    @relation("location_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "location_types_deleted_by_foreign")
  users_location_types_updated_byTousers users?    @relation("location_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "location_types_updated_by_foreign")

  @@index([created_by], map: "location_types_created_by_foreign")
  @@index([deleted_by], map: "location_types_deleted_by_foreign")
  @@index([updated_by], map: "location_types_updated_by_foreign")
}

model locations {
  id                                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  location_type_id                  BigInt    @db.UnsignedBigInt
  name                              String    @db.VarChar(255)
  address                           String    @db.Text
  lat                               String?   @db.VarChar(255)
  long                              String?   @db.VarChar(255)
  map_link                          String?   @db.VarChar(255)
  map_iframe                        String?   @db.VarChar(255)
  contact_person_name               String    @db.VarChar(255)
  contact_person_mobile             String    @db.VarChar(255)
  contact_person_email              String    @db.VarChar(255)
  operational_hours                 String    @db.VarChar(255)
  status                            Int       @default(1) @db.TinyInt
  deleted_at                        DateTime? @db.Timestamp(0)
  created_by                        BigInt?   @db.UnsignedBigInt
  updated_by                        BigInt?   @db.UnsignedBigInt
  deleted_by                        BigInt?   @db.UnsignedBigInt
  created_at                        DateTime? @db.Timestamp(0)
  updated_at                        DateTime? @db.Timestamp(0)
  users_locations_created_byTousers users?    @relation("locations_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "locations_created_by_foreign")
  users_locations_deleted_byTousers users?    @relation("locations_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "locations_deleted_by_foreign")
  users_locations_updated_byTousers users?    @relation("locations_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "locations_updated_by_foreign")

  @@index([created_by], map: "locations_created_by_foreign")
  @@index([deleted_by], map: "locations_deleted_by_foreign")
  @@index([updated_by], map: "locations_updated_by_foreign")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model notice_boards {
  id                                    BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  title                                 String       @db.VarChar(255)
  notice_type_id                        BigInt       @db.UnsignedBigInt
  publish_date                          DateTime     @db.Date
  publish_time                          DateTime?    @db.Time(0)
  expire_date                           DateTime     @db.Date
  description                           String       @db.Text
  status                                String       @db.VarChar(255)
  deleted_at                            DateTime?    @db.Timestamp(0)
  created_by                            BigInt?      @db.UnsignedBigInt
  updated_by                            BigInt?      @db.UnsignedBigInt
  deleted_by                            BigInt?      @db.UnsignedBigInt
  created_at                            DateTime?    @db.Timestamp(0)
  updated_at                            DateTime?    @db.Timestamp(0)
  users_notice_boards_created_byTousers users?       @relation("notice_boards_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notice_boards_created_by_foreign")
  users_notice_boards_deleted_byTousers users?       @relation("notice_boards_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notice_boards_deleted_by_foreign")
  notice_types                          notice_types @relation(fields: [notice_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "notice_boards_notice_type_id_foreign")
  users_notice_boards_updated_byTousers users?       @relation("notice_boards_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notice_boards_updated_by_foreign")

  @@index([created_by], map: "notice_boards_created_by_foreign")
  @@index([deleted_by], map: "notice_boards_deleted_by_foreign")
  @@index([notice_type_id], map: "notice_boards_notice_type_id_foreign")
  @@index([updated_by], map: "notice_boards_updated_by_foreign")
}

model notice_types {
  id                                   BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name                                 String          @db.VarChar(255)
  code                                 String          @db.VarChar(255)
  description                          String?         @db.VarChar(255)
  deleted_at                           DateTime?       @db.Timestamp(0)
  created_by                           BigInt?         @db.UnsignedBigInt
  updated_by                           BigInt?         @db.UnsignedBigInt
  deleted_by                           BigInt?         @db.UnsignedBigInt
  created_at                           DateTime?       @db.Timestamp(0)
  updated_at                           DateTime?       @db.Timestamp(0)
  notice_boards                        notice_boards[]
  users_notice_types_created_byTousers users?          @relation("notice_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notice_types_created_by_foreign")
  users_notice_types_deleted_byTousers users?          @relation("notice_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notice_types_deleted_by_foreign")
  users_notice_types_updated_byTousers users?          @relation("notice_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "notice_types_updated_by_foreign")

  @@index([created_by], map: "notice_types_created_by_foreign")
  @@index([deleted_by], map: "notice_types_deleted_by_foreign")
  @@index([updated_by], map: "notice_types_updated_by_foreign")
}

model offer_details {
  id                      BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  offer_id                BigInt                    @db.UnsignedBigInt
  created_at              DateTime?                 @db.Timestamp(0)
  updated_at              DateTime?                 @db.Timestamp(0)
  clearance_offer_ranges  clearance_offer_ranges[]
  discount_sales_products discount_sales_products[]
  gift_offer_products     gift_offer_products[]
  gift_sales_products     gift_sales_products[]
  offers                  offers                    @relation(fields: [offer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "offer_details_offer_id_foreign")
  offer_discounts         offer_discounts[]

  @@index([offer_id], map: "offer_details_offer_id_foreign")
}

model offer_discounts {
  id                BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  offer_detail_id   BigInt        @db.UnsignedBigInt
  discount_type     String        @db.VarChar(255)
  discount_quentity Decimal       @db.Decimal(8, 2)
  created_at        DateTime?     @db.Timestamp(0)
  updated_at        DateTime?     @db.Timestamp(0)
  offer_details     offer_details @relation(fields: [offer_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "offer_discounts_offer_detail_id_foreign")

  @@index([offer_detail_id], map: "offer_discounts_offer_detail_id_foreign")
}

model offers {
  id                             BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  title                          String          @db.VarChar(255)
  applied_date                   String?         @db.VarChar(255)
  stop_date                      String?         @db.VarChar(255)
  times                          Int?
  offer_type                     String?         @db.VarChar(255)
  invoice_type                   String?         @db.VarChar(255)
  rule_status                    String?         @db.VarChar(255)
  rule_type                      String?         @db.VarChar(255)
  created_at                     DateTime?       @db.Timestamp(0)
  updated_at                     DateTime?       @db.Timestamp(0)
  deleted_at                     DateTime?       @db.Timestamp(0)
  deleted_by                     BigInt?         @db.UnsignedBigInt
  created_by                     BigInt?         @db.UnsignedBigInt
  updated_by                     BigInt?         @db.UnsignedBigInt
  offer_details                  offer_details[]
  users_offers_created_byTousers users?          @relation("offers_created_byTousers", fields: [created_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "offers_created_by_foreign")
  users_offers_deleted_byTousers users?          @relation("offers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "offers_deleted_by_foreign")
  users_offers_updated_byTousers users?          @relation("offers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "offers_updated_by_foreign")

  @@index([created_by], map: "offers_created_by_foreign")
  @@index([deleted_by], map: "offers_deleted_by_foreign")
  @@index([updated_by], map: "offers_updated_by_foreign")
}

model office_purchases {
  id                                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  vendor_id                                 BigInt    @db.UnsignedBigInt
  date                                      DateTime  @db.Date
  invoice_no                                String    @db.VarChar(255)
  reference_bill                            String    @db.VarChar(255)
  particular                                String    @db.VarChar(255)
  bill_amount                               Float
  remarks                                   String?   @db.VarChar(255)
  file_upload                               String?   @db.VarChar(255)
  status                                    Int?      @db.TinyInt
  approved_by                               BigInt?   @db.UnsignedBigInt
  deleted_at                                DateTime? @db.Timestamp(0)
  deleted_by                                BigInt?   @db.UnsignedBigInt
  created_by                                BigInt?   @db.UnsignedBigInt
  updated_by                                BigInt?   @db.UnsignedBigInt
  created_at                                DateTime? @db.Timestamp(0)
  updated_at                                DateTime? @db.Timestamp(0)
  users_office_purchases_approved_byTousers users?    @relation("office_purchases_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "office_purchases_approved_by_foreign")
  users_office_purchases_created_byTousers  users?    @relation("office_purchases_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "office_purchases_created_by_foreign")
  users_office_purchases_deleted_byTousers  users?    @relation("office_purchases_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "office_purchases_deleted_by_foreign")
  users_office_purchases_updated_byTousers  users?    @relation("office_purchases_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "office_purchases_updated_by_foreign")
  vendors                                   vendors   @relation(fields: [vendor_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "office_purchases_vendor_id_foreign")

  @@index([approved_by], map: "office_purchases_approved_by_foreign")
  @@index([created_by], map: "office_purchases_created_by_foreign")
  @@index([deleted_by], map: "office_purchases_deleted_by_foreign")
  @@index([updated_by], map: "office_purchases_updated_by_foreign")
  @@index([vendor_id], map: "office_purchases_vendor_id_foreign")
}

model opening_product_details {
  id                    BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  opening_stock_id      BigInt                  @db.UnsignedBigInt
  product_id            BigInt                  @db.UnsignedBigInt
  quantity              Int                     @default(0)
  created_at            DateTime?               @db.Timestamp(0)
  updated_at            DateTime?               @db.Timestamp(0)
  opening_stocks        opening_stocks          @relation(fields: [opening_stock_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "opening_product_details_opening_stock_id_foreign")
  product_catalogs      product_catalogs        @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "opening_product_details_product_id_foreign")
  product_stock_details product_stock_details[]

  @@index([opening_stock_id], map: "opening_product_details_opening_stock_id_foreign")
  @@index([product_id], map: "opening_product_details_product_id_foreign")
}

model opening_stocks {
  id                      BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  opening_date            DateTime                  @db.Date
  branch_id               BigInt                    @db.UnsignedBigInt
  created_at              DateTime?                 @db.Timestamp(0)
  updated_at              DateTime?                 @db.Timestamp(0)
  opening_product_details opening_product_details[]
  branches                branches                  @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "opening_stocks_branch_id_foreign")

  @@index([branch_id], map: "opening_stocks_branch_id_foreign")
}

model password_reset_tokens {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model password_resets {
  email      String    @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)

  @@index([email], map: "password_resets_email_index")
  @@ignore
}

model percentage_types {
  id                                       BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                     String    @db.VarChar(255)
  code                                     String?   @db.VarChar(255)
  deleted_at                               DateTime? @db.Timestamp(0)
  deleted_by                               BigInt?   @db.UnsignedBigInt
  created_by                               BigInt?   @db.UnsignedBigInt
  updated_by                               BigInt?   @db.UnsignedBigInt
  created_at                               DateTime? @db.Timestamp(0)
  updated_at                               DateTime? @db.Timestamp(0)
  users_percentage_types_created_byTousers users?    @relation("percentage_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "percentage_types_created_by_foreign")
  users_percentage_types_deleted_byTousers users?    @relation("percentage_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "percentage_types_deleted_by_foreign")
  users_percentage_types_updated_byTousers users?    @relation("percentage_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "percentage_types_updated_by_foreign")

  @@index([created_by], map: "percentage_types_created_by_foreign")
  @@index([deleted_by], map: "percentage_types_deleted_by_foreign")
  @@index([updated_by], map: "percentage_types_updated_by_foreign")
}

model permission_masters {
  id                       BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  title                    String               @db.VarChar(255)
  description              String?              @db.VarChar(255)
  key                      String               @unique(map: "permission_masters_key_unique") @db.VarChar(255)
  parent_id                BigInt?              @db.UnsignedBigInt
  created_at               DateTime?            @db.Timestamp(0)
  updated_at               DateTime?            @db.Timestamp(0)
  permission_masters       permission_masters?  @relation("permission_mastersTopermission_masters", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "permission_masters_parent_id_foreign")
  other_permission_masters permission_masters[] @relation("permission_mastersTopermission_masters")
  permissions              permissions[]

  @@index([parent_id], map: "permission_masters_parent_id_foreign")
}

model permission_role {
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  permission_id BigInt      @db.UnsignedBigInt
  role_id       BigInt      @db.UnsignedBigInt
  created_at    DateTime?   @db.Timestamp(0)
  updated_at    DateTime?   @db.Timestamp(0)
  permissions   permissions @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "permission_role_permission_id_foreign")
  roles         roles       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "permission_role_role_id_foreign")

  @@index([permission_id], map: "permission_role_permission_id_foreign")
  @@index([role_id], map: "permission_role_role_id_foreign")
}

model permissions {
  id                   BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  name                 String             @db.VarChar(255)
  slug                 String             @unique(map: "permissions_slug_unique") @db.VarChar(255)
  description          String?            @db.VarChar(255)
  permission_master_id BigInt             @db.UnsignedBigInt
  created_at           DateTime?          @db.Timestamp(0)
  updated_at           DateTime?          @db.Timestamp(0)
  permission_role      permission_role[]
  permission_masters   permission_masters @relation(fields: [permission_master_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "permissions_permission_master_id_foreign")

  @@index([permission_master_id], map: "permissions_permission_master_id_foreign")
}

model personal_access_tokens {
  id             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  tokenable_type String    @db.VarChar(255)
  tokenable_id   BigInt    @db.UnsignedBigInt
  name           String    @db.VarChar(255)
  token          String    @unique(map: "personal_access_tokens_token_unique") @db.VarChar(64)
  abilities      String?   @db.Text
  last_used_at   DateTime? @db.Timestamp(0)
  expires_at     DateTime? @db.Timestamp(0)
  created_at     DateTime? @db.Timestamp(0)
  updated_at     DateTime? @db.Timestamp(0)

  @@index([tokenable_type, tokenable_id], map: "personal_access_tokens_tokenable_type_tokenable_id_index")
}

model product_barcodes {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  product_id BigInt    @db.UnsignedBigInt
  barcode    String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  products   products  @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_barcodes_product_id_foreign")

  @@index([product_id], map: "product_barcodes_product_id_foreign")
}

model product_catalog_barcodes {
  id                 BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  product_catalog_id BigInt           @db.UnsignedBigInt
  barcode            String           @db.VarChar(255)
  created_at         DateTime?        @db.Timestamp(0)
  updated_at         DateTime?        @db.Timestamp(0)
  product_catalogs   product_catalogs @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalog_barcodes_product_catalog_id_foreign")

  @@index([product_catalog_id], map: "product_catalog_barcodes_product_catalog_id_foreign")
}

model product_catalogs {
  id                                       BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  product_type_id                          BigInt                             @db.UnsignedBigInt
  product_brand_id                         BigInt?                            @db.UnsignedBigInt
  name                                     String                             @db.VarChar(255)
  model                                    String?                            @db.VarChar(255)
  mrp                                      Decimal                            @db.Decimal(10, 2)
  unit_type_id                             BigInt                             @db.UnsignedBigInt
  product_tag_id                           BigInt?                            @db.UnsignedBigInt
  product_origin                           String?                            @db.VarChar(255)
  status                                   String?                            @db.VarChar(255)
  is_serial                                String?                            @db.VarChar(255)
  is_expire_date                           String?                            @db.VarChar(255)
  is_warranty                              String?                            @db.VarChar(255)
  warranty_period                          String?                            @db.VarChar(255)
  warranty_period_input                    Int?
  force_barcode_scan                       String?                            @db.VarChar(255)
  ecommerce_product                        String?                            @db.VarChar(255)
  description                              String?                            @db.Text
  image_uploads                            String?                            @db.LongText
  catalog_file                             String?                            @db.VarChar(255)
  price_list_file                          String?                            @db.VarChar(255)
  profile_image_upload                     String?                            @db.VarChar(255)
  product_sub_type_id                      BigInt?                            @db.UnsignedBigInt
  product_power_size_id                    BigInt?                            @db.UnsignedBigInt
  created_at                               DateTime?                          @db.Timestamp(0)
  updated_at                               DateTime?                          @db.Timestamp(0)
  created_by                               BigInt?                            @db.UnsignedBigInt
  updated_by                               BigInt?                            @db.UnsignedBigInt
  deleted_at                               DateTime?                          @db.Timestamp(0)
  deleted_by                               BigInt?                            @db.UnsignedBigInt
  category_id                              BigInt?                            @db.UnsignedBigInt
  backup_challan_delivery_details          backup_challan_delivery_details[]
  backup_challan_delivery_stocks           backup_challan_delivery_stocks[]
  challan_product_details                  challan_product_details[]
  challan_stock_details                    challan_stock_details[]
  customer_stocks                          customer_stocks[]
  delivery_details                         delivery_details[]
  delivery_stocks                          delivery_stocks[]
  discount_sales_products                  discount_sales_products[]
  dongle_or_serial_entries                 dongle_or_serial_entries[]
  gift_offer_products                      gift_offer_products[]
  gift_sales_products                      gift_sales_products[]
  invoice_details                          invoice_details[]
  opening_product_details                  opening_product_details[]
  product_catalog_barcodes                 product_catalog_barcodes[]
  categories                               categories?                        @relation(fields: [category_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_catalogs_category_id_foreign")
  users_product_catalogs_created_byTousers users?                             @relation("product_catalogs_created_byTousers", fields: [created_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalogs_created_by_foreign")
  users_product_catalogs_deleted_byTousers users?                             @relation("product_catalogs_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_catalogs_deleted_by_foreign")
  brands                                   brands?                            @relation(fields: [product_brand_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalogs_product_brand_id_foreign")
  tags                                     tags?                              @relation(fields: [product_tag_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalogs_product_tag_id_foreign")
  product_types                            product_types                      @relation(fields: [product_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalogs_product_type_id_foreign")
  units                                    units                              @relation(fields: [unit_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalogs_unit_type_id_foreign")
  users_product_catalogs_updated_byTousers users?                             @relation("product_catalogs_updated_byTousers", fields: [updated_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_catalogs_updated_by_foreign")
  product_stock_details                    product_stock_details[]
  product_transfer_details                 product_transfer_details[]
  product_transfer_request_details         product_transfer_request_details[]
  products                                 products[]
  purchase_order_details                   purchase_order_details[]
  purchase_order_receive_batches           purchase_order_receive_batches[]
  purchase_order_receive_details           purchase_order_receive_details[]
  purchase_order_receive_serials           purchase_order_receive_serials[]
  purchase_return_approve_details          purchase_return_approve_details[]
  purchase_return_approve_stocks           purchase_return_approve_stocks[]
  purchase_return_details                  purchase_return_details[]
  quotation_details                        quotation_details[]
  requisition_receive_batches              requisition_receive_batches[]
  requisition_receive_details              requisition_receive_details[]
  requisition_receive_serials              requisition_receive_serials[]
  sales_order_delivery_details             sales_order_delivery_details[]
  sales_order_delivery_stocks              sales_order_delivery_stocks[]
  sales_order_details                      sales_order_details[]
  sales_requisition_details                sales_requisition_details[]
  stocks                                   stocks[]

  @@index([category_id], map: "product_catalogs_category_id_foreign")
  @@index([created_by], map: "product_catalogs_created_by_foreign")
  @@index([deleted_by], map: "product_catalogs_deleted_by_foreign")
  @@index([product_brand_id], map: "product_catalogs_product_brand_id_foreign")
  @@index([product_tag_id], map: "product_catalogs_product_tag_id_foreign")
  @@index([product_type_id], map: "product_catalogs_product_type_id_foreign")
  @@index([unit_type_id], map: "product_catalogs_unit_type_id_foreign")
  @@index([updated_by], map: "product_catalogs_updated_by_foreign")
}

model product_power_sizes {
  id                                          BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                        String    @db.VarChar(255)
  code                                        String    @db.VarChar(255)
  status                                      Int       @default(1) @db.TinyInt
  created_at                                  DateTime? @db.Timestamp(0)
  updated_at                                  DateTime? @db.Timestamp(0)
  deleted_at                                  DateTime? @db.Timestamp(0)
  created_by                                  BigInt?   @db.UnsignedBigInt
  updated_by                                  BigInt?   @db.UnsignedBigInt
  deleted_by                                  BigInt?   @db.UnsignedBigInt
  users_product_power_sizes_created_byTousers users?    @relation("product_power_sizes_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_power_sizes_created_by_foreign")
  users_product_power_sizes_deleted_byTousers users?    @relation("product_power_sizes_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_power_sizes_deleted_by_foreign")
  users_product_power_sizes_updated_byTousers users?    @relation("product_power_sizes_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_power_sizes_updated_by_foreign")

  @@index([created_by], map: "product_power_sizes_created_by_foreign")
  @@index([deleted_by], map: "product_power_sizes_deleted_by_foreign")
  @@index([updated_by], map: "product_power_sizes_updated_by_foreign")
}

model product_stock_details {
  id                        BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  opening_product_detail_id BigInt                  @db.UnsignedBigInt
  product_id                BigInt                  @db.UnsignedBigInt
  serials                   String?                 @db.VarChar(255)
  batches                   String?                 @db.VarChar(255)
  manufacture_date          DateTime?               @db.Date
  expired_date              DateTime?               @db.Date
  quantity                  Int?
  created_at                DateTime?               @db.Timestamp(0)
  updated_at                DateTime?               @db.Timestamp(0)
  manufacture_no            String?                 @db.VarChar(255)
  opening_product_details   opening_product_details @relation(fields: [opening_product_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_stock_details_opening_product_detail_id_foreign")
  product_catalogs          product_catalogs        @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_stock_details_product_id_foreign")

  @@index([opening_product_detail_id], map: "product_stock_details_opening_product_detail_id_foreign")
  @@index([product_id], map: "product_stock_details_product_id_foreign")
}

model product_sub_types {
  id                                        BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  product_type_id                           BigInt        @db.UnsignedBigInt
  name                                      String        @db.VarChar(255)
  code                                      String        @db.VarChar(255)
  status                                    Int           @default(1) @db.TinyInt
  created_at                                DateTime?     @db.Timestamp(0)
  updated_at                                DateTime?     @db.Timestamp(0)
  deleted_at                                DateTime?     @db.Timestamp(0)
  created_by                                BigInt?       @db.UnsignedBigInt
  updated_by                                BigInt?       @db.UnsignedBigInt
  deleted_by                                BigInt?       @db.UnsignedBigInt
  users_product_sub_types_created_byTousers users?        @relation("product_sub_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_sub_types_created_by_foreign")
  users_product_sub_types_deleted_byTousers users?        @relation("product_sub_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_sub_types_deleted_by_foreign")
  product_types                             product_types @relation(fields: [product_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_sub_types_product_type_id_foreign")
  users_product_sub_types_updated_byTousers users?        @relation("product_sub_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_sub_types_updated_by_foreign")

  @@index([created_by], map: "product_sub_types_created_by_foreign")
  @@index([deleted_by], map: "product_sub_types_deleted_by_foreign")
  @@index([product_type_id], map: "product_sub_types_product_type_id_foreign")
  @@index([updated_by], map: "product_sub_types_updated_by_foreign")
}

model product_transfer_details {
  id                  BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  product_transfer_id BigInt            @db.UnsignedBigInt
  product_id          BigInt            @db.UnsignedBigInt
  quantity            Float
  created_at          DateTime?         @db.Timestamp(0)
  updated_at          DateTime?         @db.Timestamp(0)
  product_catalogs    product_catalogs  @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "product_transfer_details_product_id_foreign")
  product_transfers   product_transfers @relation(fields: [product_transfer_id], references: [id], onUpdate: Restrict, map: "product_transfer_details_product_transfer_id_foreign")

  @@index([product_id], map: "product_transfer_details_product_id_foreign")
  @@index([product_transfer_id], map: "product_transfer_details_product_transfer_id_foreign")
}

model product_transfer_request_details {
  id                          BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  product_transfer_request_id BigInt                    @db.UnsignedBigInt
  product_catalog_id          BigInt                    @db.UnsignedBigInt
  quantity                    Decimal?                  @db.Decimal(12, 4)
  created_at                  DateTime?                 @db.Timestamp(0)
  updated_at                  DateTime?                 @db.Timestamp(0)
  product_catalogs            product_catalogs          @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_transfer_request_details_product_catalog_id_foreign")
  product_transfer_requests   product_transfer_requests @relation(fields: [product_transfer_request_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_transfer_request_id_foreign")

  @@index([product_catalog_id], map: "product_transfer_request_details_product_catalog_id_foreign")
  @@index([product_transfer_request_id], map: "product_transfer_request_id_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model product_transfer_requests {
  id                                                                 BigInt                             @id @default(autoincrement()) @db.UnsignedBigInt
  request_date                                                       DateTime                           @db.Date
  remarks                                                            String?                            @db.Text
  source_branch_id                                                   BigInt                             @db.UnsignedBigInt
  destination_branch_id                                              BigInt                             @db.UnsignedBigInt
  status                                                             String                             @default("pending") @db.VarChar(255)
  created_at                                                         DateTime?                          @db.Timestamp(0)
  updated_at                                                         DateTime?                          @db.Timestamp(0)
  deleted_at                                                         DateTime?                          @db.Timestamp(0)
  created_by                                                         BigInt?                            @db.UnsignedBigInt
  updated_by                                                         BigInt?                            @db.UnsignedBigInt
  deleted_by                                                         BigInt?                            @db.UnsignedBigInt
  product_transfer_request_details                                   product_transfer_request_details[]
  users_product_transfer_requests_created_byTousers                  users?                             @relation("product_transfer_requests_created_byTousers", fields: [created_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_transfer_requests_created_by_foreign")
  users_product_transfer_requests_deleted_byTousers                  users?                             @relation("product_transfer_requests_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_transfer_requests_deleted_by_foreign")
  branches_product_transfer_requests_destination_branch_idTobranches branches                           @relation("product_transfer_requests_destination_branch_idTobranches", fields: [destination_branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_transfer_requests_destination_branch_id_foreign")
  branches_product_transfer_requests_source_branch_idTobranches      branches                           @relation("product_transfer_requests_source_branch_idTobranches", fields: [source_branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_transfer_requests_source_branch_id_foreign")
  users_product_transfer_requests_updated_byTousers                  users?                             @relation("product_transfer_requests_updated_byTousers", fields: [updated_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "product_transfer_requests_updated_by_foreign")
  product_transfers                                                  product_transfers[]

  @@index([created_by], map: "product_transfer_requests_created_by_foreign")
  @@index([deleted_by], map: "product_transfer_requests_deleted_by_foreign")
  @@index([destination_branch_id], map: "product_transfer_requests_destination_branch_id_foreign")
  @@index([source_branch_id], map: "product_transfer_requests_source_branch_id_foreign")
  @@index([updated_by], map: "product_transfer_requests_updated_by_foreign")
}

model product_transfer_stock_details {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  details_id BigInt    @db.UnsignedBigInt
  product_id BigInt    @db.UnsignedBigInt
  lot_no     String?   @db.VarChar(255)
  serial_no  String?   @db.VarChar(255)
  quantity   Int
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model product_transfers {
  id                                        BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_no                                String                     @db.VarChar(255)
  transfer_date                             String                     @db.VarChar(255)
  source_warehouse_id                       BigInt                     @db.UnsignedBigInt
  destination_warehouse_id                  BigInt                     @db.UnsignedBigInt
  transfer_description                      String?                    @db.VarChar(255)
  product_transfer_request_id               BigInt?                    @db.UnsignedBigInt
  created_at                                DateTime?                  @db.Timestamp(0)
  updated_at                                DateTime?                  @db.Timestamp(0)
  deleted_at                                DateTime?                  @db.Timestamp(0)
  created_by                                BigInt?                    @db.UnsignedBigInt
  updated_by                                BigInt?                    @db.UnsignedBigInt
  deleted_by                                BigInt?                    @db.UnsignedBigInt
  product_transfer_details                  product_transfer_details[]
  users_product_transfers_created_byTousers users?                     @relation("product_transfers_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_transfers_created_by_foreign")
  users_product_transfers_deleted_byTousers users?                     @relation("product_transfers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_transfers_deleted_by_foreign")
  product_transfer_requests                 product_transfer_requests? @relation(fields: [product_transfer_request_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_transfers_product_transfer_request_id_foreign")
  users_product_transfers_updated_byTousers users?                     @relation("product_transfers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_transfers_updated_by_foreign")

  @@index([created_by], map: "product_transfers_created_by_foreign")
  @@index([deleted_by], map: "product_transfers_deleted_by_foreign")
  @@index([product_transfer_request_id], map: "product_transfers_product_transfer_request_id_foreign")
  @@index([updated_by], map: "product_transfers_updated_by_foreign")
}

model product_types {
  id                                    BigInt                    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                  String                    @db.VarChar(255)
  code                                  String                    @db.VarChar(255)
  status                                Int                       @default(1) @db.TinyInt
  created_at                            DateTime?                 @db.Timestamp(0)
  updated_at                            DateTime?                 @db.Timestamp(0)
  deleted_at                            DateTime?                 @db.Timestamp(0)
  created_by                            BigInt?                   @db.UnsignedBigInt
  updated_by                            BigInt?                   @db.UnsignedBigInt
  deleted_by                            BigInt?                   @db.UnsignedBigInt
  customer_setting_prices               customer_setting_prices[]
  product_catalogs                      product_catalogs[]
  product_sub_types                     product_sub_types[]
  users_product_types_created_byTousers users?                    @relation("product_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_types_created_by_foreign")
  users_product_types_deleted_byTousers users?                    @relation("product_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_types_deleted_by_foreign")
  users_product_types_updated_byTousers users?                    @relation("product_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "product_types_updated_by_foreign")
  products                              products[]

  @@index([created_by], map: "product_types_created_by_foreign")
  @@index([deleted_by], map: "product_types_deleted_by_foreign")
  @@index([updated_by], map: "product_types_updated_by_foreign")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model products {
  id                               BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  product_type_id                  BigInt?                 @db.UnsignedBigInt
  mrp                              String?                 @db.VarChar(255)
  remainder_quantity               String?                 @db.VarChar(255)
  description                      String?                 @db.VarChar(255)
  product_catalog_id               BigInt?                 @db.UnsignedBigInt
  type                             String?                 @db.VarChar(255)
  cost_price                       Decimal?                @db.Decimal(8, 2)
  stock_quantity                   Int?
  landed_price                     Decimal?                @db.Decimal(16, 3)
  transportation_cost              Decimal?                @db.Decimal(8, 2)
  vat                              Decimal?                @db.Decimal(8, 2)
  tax                              Decimal?                @db.Decimal(8, 2)
  misc                             Decimal?                @db.Decimal(8, 2)
  total_price                      Decimal?                @db.Decimal(8, 2)
  max_sales_qty                    Int?
  total_sales_qty                  Int?
  applied_type                     String?                 @db.VarChar(100)
  inv_no                           String?                 @db.VarChar(255)
  start_date                       String?                 @db.VarChar(255)
  stop_date                        String?                 @db.VarChar(255)
  max_purchase_qty                 Int?                    @db.UnsignedInt
  total_purchase_qty               Int?                    @db.UnsignedInt
  last_purchase_price              Int?                    @db.UnsignedInt
  stock_status                     Int?                    @db.UnsignedInt
  remarks                          String?                 @db.Text
  discount_type                    String?                 @db.VarChar(100)
  product_tag_id                   BigInt?                 @db.UnsignedBigInt
  hs_code                          String?                 @db.VarChar(255)
  last_cost_price                  Float?
  product_status                   String?                 @db.VarChar(255)
  max_sales_quantity               Float?
  status                           String?                 @db.VarChar(255)
  max_purchase_quantity            String?                 @db.VarChar(255)
  stock_info                       String?                 @db.VarChar(255)
  min_discount                     Decimal                 @default(0.00) @db.Decimal(8, 2)
  max_discount                     Decimal                 @default(0.00) @db.Decimal(8, 2)
  dollar_price                     Decimal?                @db.Decimal(10, 5)
  created_at                       DateTime?               @db.Timestamp(0)
  updated_at                       DateTime?               @db.Timestamp(0)
  deleted_at                       DateTime?               @db.Timestamp(0)
  created_by                       BigInt?                 @db.UnsignedBigInt
  updated_by                       BigInt?                 @db.UnsignedBigInt
  deleted_by                       BigInt?                 @db.UnsignedBigInt
  dp_price_currency_id             BigInt?                 @db.UnsignedBigInt
  dp_price                         Decimal?                @db.Decimal(16, 3)
  customs_duty                     Decimal?                @db.Decimal(16, 3)
  c_and_f                          Decimal?                @db.Decimal(16, 3)
  ait                              Decimal?                @db.Decimal(16, 3)
  atn                              Decimal?                @db.Decimal(16, 3)
  issue_product_details            issue_product_details[]
  product_barcodes                 product_barcodes[]
  users_products_created_byTousers users?                  @relation("products_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "products_created_by_foreign")
  users_products_deleted_byTousers users?                  @relation("products_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "products_deleted_by_foreign")
  product_catalogs                 product_catalogs?       @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "products_product_catalog_id_foreign")
  tags                             tags?                   @relation(fields: [product_tag_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "products_product_tag_id_foreign")
  product_types                    product_types?          @relation(fields: [product_type_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "products_product_type_id_foreign")
  users_products_updated_byTousers users?                  @relation("products_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "products_updated_by_foreign")

  @@index([created_by], map: "products_created_by_foreign")
  @@index([deleted_by], map: "products_deleted_by_foreign")
  @@index([product_catalog_id], map: "products_product_catalog_id_foreign")
  @@index([product_tag_id], map: "products_product_tag_id_foreign")
  @@index([product_type_id], map: "products_product_type_id_foreign")
  @@index([updated_by], map: "products_updated_by_foreign")
}

model purchase_order_details {
  id                BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_order_id BigInt?           @db.UnsignedBigInt
  product_id        BigInt?           @db.UnsignedBigInt
  quantity          String            @db.VarChar(255)
  price             String            @db.VarChar(255)
  sales_price       Float?
  amount            String            @db.VarChar(255)
  created_at        DateTime?         @db.Timestamp(0)
  updated_at        DateTime?         @db.Timestamp(0)
  hs_code           String?           @db.VarChar(255)
  product_catalogs  product_catalogs? @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_details_product_id_foreign")
  purchase_orders   purchase_orders?  @relation(fields: [purchase_order_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_details_purchase_order_id_foreign")

  @@index([product_id], map: "purchase_order_details_product_id_foreign")
  @@index([purchase_order_id], map: "purchase_order_details_purchase_order_id_foreign")
}

model purchase_order_receive_batches {
  id                                                     BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_order_receive_id                              BigInt?                  @db.UnsignedBigInt
  purchase_order_id                                      BigInt?                  @db.UnsignedBigInt
  product_id                                             BigInt                   @db.UnsignedBigInt
  batch_no                                               String?                  @db.VarChar(255)
  manufacture_no                                         String?                  @db.VarChar(255)
  expired_date                                           String?                  @db.VarChar(255)
  quantity                                               String?                  @db.VarChar(255)
  deleted_at                                             DateTime?                @db.Timestamp(0)
  created_by                                             BigInt?                  @db.UnsignedBigInt
  updated_by                                             BigInt?                  @db.UnsignedBigInt
  deleted_by                                             BigInt?                  @db.UnsignedBigInt
  created_at                                             DateTime?                @db.Timestamp(0)
  updated_at                                             DateTime?                @db.Timestamp(0)
  users_purchase_order_receive_batches_created_byTousers users?                   @relation("purchase_order_receive_batches_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_batches_created_by_foreign")
  users_purchase_order_receive_batches_deleted_byTousers users?                   @relation("purchase_order_receive_batches_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_batches_deleted_by_foreign")
  product_catalogs                                       product_catalogs         @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_batches_product_id_foreign")
  purchase_orders                                        purchase_orders?         @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_batches_purchase_order_id_foreign")
  purchase_order_receives                                purchase_order_receives? @relation(fields: [purchase_order_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_batches_purchase_order_receive_id_foreign")
  users_purchase_order_receive_batches_updated_byTousers users?                   @relation("purchase_order_receive_batches_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_batches_updated_by_foreign")

  @@index([created_by], map: "purchase_order_receive_batches_created_by_foreign")
  @@index([deleted_by], map: "purchase_order_receive_batches_deleted_by_foreign")
  @@index([product_id], map: "purchase_order_receive_batches_product_id_foreign")
  @@index([purchase_order_id], map: "purchase_order_receive_batches_purchase_order_id_foreign")
  @@index([purchase_order_receive_id], map: "purchase_order_receive_batches_purchase_order_receive_id_foreign")
  @@index([updated_by], map: "purchase_order_receive_batches_updated_by_foreign")
}

model purchase_order_receive_details {
  id                                                     BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_order_receive_id                              BigInt                  @db.UnsignedBigInt
  purchase_order_id                                      BigInt                  @db.UnsignedBigInt
  product_id                                             BigInt                  @db.UnsignedBigInt
  approved_quantity                                      String?                 @db.VarChar(255)
  received_quantity                                      String?                 @db.VarChar(255)
  deleted_at                                             DateTime?               @db.Timestamp(0)
  created_by                                             BigInt?                 @db.UnsignedBigInt
  updated_by                                             BigInt?                 @db.UnsignedBigInt
  deleted_by                                             BigInt?                 @db.UnsignedBigInt
  created_at                                             DateTime?               @db.Timestamp(0)
  updated_at                                             DateTime?               @db.Timestamp(0)
  landed_cost                                            Float?
  total_landed_cost                                      Float?
  users_purchase_order_receive_details_created_byTousers users?                  @relation("purchase_order_receive_details_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_details_created_by_foreign")
  users_purchase_order_receive_details_deleted_byTousers users?                  @relation("purchase_order_receive_details_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_details_deleted_by_foreign")
  product_catalogs                                       product_catalogs        @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_details_product_id_foreign")
  purchase_orders                                        purchase_orders         @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_details_purchase_order_id_foreign")
  purchase_order_receives                                purchase_order_receives @relation(fields: [purchase_order_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_details_purchase_order_receive_id_foreign")
  users_purchase_order_receive_details_updated_byTousers users?                  @relation("purchase_order_receive_details_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_details_updated_by_foreign")

  @@index([created_by], map: "purchase_order_receive_details_created_by_foreign")
  @@index([deleted_by], map: "purchase_order_receive_details_deleted_by_foreign")
  @@index([product_id], map: "purchase_order_receive_details_product_id_foreign")
  @@index([purchase_order_id], map: "purchase_order_receive_details_purchase_order_id_foreign")
  @@index([purchase_order_receive_id], map: "purchase_order_receive_details_purchase_order_receive_id_foreign")
  @@index([updated_by], map: "purchase_order_receive_details_updated_by_foreign")
}

model purchase_order_receive_serials {
  id                                                     BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_order_receive_id                              BigInt?                  @db.UnsignedBigInt
  purchase_order_id                                      BigInt?                  @db.UnsignedBigInt
  product_id                                             BigInt                   @db.UnsignedBigInt
  serial_no                                              String?                  @db.VarChar(255)
  manufacture_date                                       DateTime?                @db.Date
  expired_date                                           DateTime?                @db.Date
  quantity                                               String?                  @db.VarChar(255)
  deleted_at                                             DateTime?                @db.Timestamp(0)
  created_by                                             BigInt?                  @db.UnsignedBigInt
  updated_by                                             BigInt?                  @db.UnsignedBigInt
  deleted_by                                             BigInt?                  @db.UnsignedBigInt
  created_at                                             DateTime?                @db.Timestamp(0)
  updated_at                                             DateTime?                @db.Timestamp(0)
  users_purchase_order_receive_serials_created_byTousers users?                   @relation("purchase_order_receive_serials_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_serials_created_by_foreign")
  users_purchase_order_receive_serials_deleted_byTousers users?                   @relation("purchase_order_receive_serials_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_serials_deleted_by_foreign")
  product_catalogs                                       product_catalogs         @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_serials_product_id_foreign")
  purchase_orders                                        purchase_orders?         @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_serials_purchase_order_id_foreign")
  purchase_order_receives                                purchase_order_receives? @relation(fields: [purchase_order_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receive_serials_purchase_order_receive_id_foreign")
  users_purchase_order_receive_serials_updated_byTousers users?                   @relation("purchase_order_receive_serials_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receive_serials_updated_by_foreign")

  @@index([created_by], map: "purchase_order_receive_serials_created_by_foreign")
  @@index([deleted_by], map: "purchase_order_receive_serials_deleted_by_foreign")
  @@index([product_id], map: "purchase_order_receive_serials_product_id_foreign")
  @@index([purchase_order_id], map: "purchase_order_receive_serials_purchase_order_id_foreign")
  @@index([purchase_order_receive_id], map: "purchase_order_receive_serials_purchase_order_receive_id_foreign")
  @@index([updated_by], map: "purchase_order_receive_serials_updated_by_foreign")
}

model purchase_order_receives {
  id                                               BigInt                           @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_order_id                                BigInt                           @db.UnsignedBigInt
  purchase_invoice                                 String?                          @db.VarChar(255)
  po_receive_number                                String?                          @db.VarChar(255)
  deleted_at                                       DateTime?                        @db.Timestamp(0)
  created_by                                       BigInt?                          @db.UnsignedBigInt
  updated_by                                       BigInt?                          @db.UnsignedBigInt
  deleted_by                                       BigInt?                          @db.UnsignedBigInt
  created_at                                       DateTime?                        @db.Timestamp(0)
  updated_at                                       DateTime?                        @db.Timestamp(0)
  status                                           Int                              @default(0) @db.TinyInt
  approved_by                                      BigInt?                          @db.UnsignedBigInt
  net_landed_cost                                  Float?
  lc_number                                        String?                          @db.VarChar(255)
  lc_date                                          DateTime?                        @db.Date
  bank_id                                          BigInt?                          @db.UnsignedBigInt
  po_invoice_number                                String?                          @db.VarChar(255)
  po_invoice_date                                  DateTime?                        @db.Date
  purchase_order_receive_batches                   purchase_order_receive_batches[]
  purchase_order_receive_details                   purchase_order_receive_details[]
  purchase_order_receive_serials                   purchase_order_receive_serials[]
  users_purchase_order_receives_approved_byTousers users?                           @relation("purchase_order_receives_approved_byTousers", fields: [approved_by], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receives_approved_by_foreign")
  users_purchase_order_receives_created_byTousers  users?                           @relation("purchase_order_receives_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receives_created_by_foreign")
  users_purchase_order_receives_deleted_byTousers  users?                           @relation("purchase_order_receives_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receives_deleted_by_foreign")
  purchase_orders                                  purchase_orders                  @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_order_receives_purchase_order_id_foreign")
  users_purchase_order_receives_updated_byTousers  users?                           @relation("purchase_order_receives_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_order_receives_updated_by_foreign")
  purchase_returns                                 purchase_returns[]

  @@index([approved_by], map: "purchase_order_receives_approved_by_foreign")
  @@index([created_by], map: "purchase_order_receives_created_by_foreign")
  @@index([deleted_by], map: "purchase_order_receives_deleted_by_foreign")
  @@index([purchase_order_id], map: "purchase_order_receives_purchase_order_id_foreign")
  @@index([updated_by], map: "purchase_order_receives_updated_by_foreign")
}

model purchase_orders {
  id                                       BigInt                           @id @default(autoincrement()) @db.UnsignedBigInt
  po_date                                  DateTime?                        @db.Date
  po_number                                String?                          @db.VarChar(255)
  supplier_id                              BigInt?                          @db.UnsignedBigInt
  search_by_brand_id                       BigInt?                          @db.UnsignedBigInt
  transport_title                          String?                          @db.VarChar(255)
  remarks                                  String?                          @db.VarChar(255)
  shipping_method                          String?                          @db.VarChar(255)
  shipping_terms                           String?                          @db.VarChar(255)
  delivery_date                            DateTime?                        @db.Date
  total_amount                             Float?
  transport_cost                           Float?
  net_amount                               Float?
  discount                                 Float?
  approved_by                              BigInt?                          @db.UnsignedBigInt
  branch_id                                BigInt?                          @default(1) @db.UnsignedBigInt
  status                                   Int                              @default(0) @db.TinyInt
  deleted_at                               DateTime?                        @db.Timestamp(0)
  deleted_by                               BigInt?                          @db.UnsignedBigInt
  created_by                               BigInt?                          @db.UnsignedBigInt
  updated_by                               BigInt?                          @db.UnsignedBigInt
  created_at                               DateTime?                        @db.Timestamp(0)
  updated_at                               DateTime?                        @db.Timestamp(0)
  currency_id                              BigInt?                          @db.UnsignedBigInt
  exchange_rate                            String?                          @db.VarChar(255)
  lc_number                                String?                          @db.VarChar(255)
  total_quantity                           Float?
  purchase_type                            String?                          @db.VarChar(255)
  lc_date                                  DateTime?                        @db.Date
  bank_id                                  BigInt?                          @db.UnsignedBigInt
  vat_amount                               Float?
  vat                                      Float?
  purchase_order_details                   purchase_order_details[]
  purchase_order_receive_batches           purchase_order_receive_batches[]
  purchase_order_receive_details           purchase_order_receive_details[]
  purchase_order_receive_serials           purchase_order_receive_serials[]
  purchase_order_receives                  purchase_order_receives[]
  users_purchase_orders_approved_byTousers users?                           @relation("purchase_orders_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_approved_by_foreign")
  users_purchase_orders_created_byTousers  users?                           @relation("purchase_orders_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_created_by_foreign")
  currencies                               currencies?                      @relation(fields: [currency_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_currency_id_foreign")
  users_purchase_orders_deleted_byTousers  users?                           @relation("purchase_orders_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_deleted_by_foreign")
  brands                                   brands?                          @relation(fields: [search_by_brand_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_search_by_brand_id_foreign")
  suppliers                                suppliers?                       @relation(fields: [supplier_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_supplier_id_foreign")
  users_purchase_orders_updated_byTousers  users?                           @relation("purchase_orders_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_orders_updated_by_foreign")
  purchase_returns                         purchase_returns[]

  @@index([approved_by], map: "purchase_orders_approved_by_foreign")
  @@index([created_by], map: "purchase_orders_created_by_foreign")
  @@index([currency_id], map: "purchase_orders_currency_id_foreign")
  @@index([deleted_by], map: "purchase_orders_deleted_by_foreign")
  @@index([search_by_brand_id], map: "purchase_orders_search_by_brand_id_foreign")
  @@index([supplier_id], map: "purchase_orders_supplier_id_foreign")
  @@index([updated_by], map: "purchase_orders_updated_by_foreign")
}

model purchase_return_approve_details {
  id                             BigInt                           @id @default(autoincrement()) @db.UnsignedBigInt
  p_r_approve_id                 BigInt                           @db.UnsignedBigInt
  product_id                     BigInt                           @db.UnsignedBigInt
  quantity                       Int
  price                          Decimal                          @db.Decimal(10, 2)
  amount                         Decimal                          @db.Decimal(10, 2)
  created_at                     DateTime?                        @db.Timestamp(0)
  updated_at                     DateTime?                        @db.Timestamp(0)
  purchase_return_approves       purchase_return_approves         @relation(fields: [p_r_approve_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_approve_details_p_r_approve_id_foreign")
  product_catalogs               product_catalogs                 @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_approve_details_product_id_foreign")
  purchase_return_approve_stocks purchase_return_approve_stocks[]

  @@index([p_r_approve_id], map: "purchase_return_approve_details_p_r_approve_id_foreign")
  @@index([product_id], map: "purchase_return_approve_details_product_id_foreign")
}

model purchase_return_approve_stocks {
  id                              BigInt                          @id @default(autoincrement()) @db.UnsignedBigInt
  p_r_approve_detail_id           BigInt                          @db.UnsignedBigInt
  product_id                      BigInt                          @db.UnsignedBigInt
  quantity                        Int?
  batch_no                        String?                         @db.VarChar(255)
  serial_no                       String?                         @db.VarChar(255)
  created_at                      DateTime?                       @db.Timestamp(0)
  updated_at                      DateTime?                       @db.Timestamp(0)
  purchase_return_approve_details purchase_return_approve_details @relation(fields: [p_r_approve_detail_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_approve_stocks_p_r_approve_detail_id_foreign")
  product_catalogs                product_catalogs                @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_approve_stocks_product_id_foreign")

  @@index([p_r_approve_detail_id], map: "purchase_return_approve_stocks_p_r_approve_detail_id_foreign")
  @@index([product_id], map: "purchase_return_approve_stocks_product_id_foreign")
}

model purchase_return_approves {
  id                                               BigInt                            @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_return_id                               BigInt                            @db.UnsignedBigInt
  deleted_at                                       DateTime?                         @db.Timestamp(0)
  created_by                                       BigInt?                           @db.UnsignedBigInt
  updated_by                                       BigInt?                           @db.UnsignedBigInt
  deleted_by                                       BigInt?                           @db.UnsignedBigInt
  created_at                                       DateTime?                         @db.Timestamp(0)
  updated_at                                       DateTime?                         @db.Timestamp(0)
  purchase_return_approve_details                  purchase_return_approve_details[]
  users_purchase_return_approves_created_byTousers users?                            @relation("purchase_return_approves_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_return_approves_created_by_foreign")
  users_purchase_return_approves_deleted_byTousers users?                            @relation("purchase_return_approves_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_return_approves_deleted_by_foreign")
  purchase_returns                                 purchase_returns                  @relation(fields: [purchase_return_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_approves_purchase_return_id_foreign")
  users_purchase_return_approves_updated_byTousers users?                            @relation("purchase_return_approves_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_return_approves_updated_by_foreign")

  @@index([created_by], map: "purchase_return_approves_created_by_foreign")
  @@index([deleted_by], map: "purchase_return_approves_deleted_by_foreign")
  @@index([purchase_return_id], map: "purchase_return_approves_purchase_return_id_foreign")
  @@index([updated_by], map: "purchase_return_approves_updated_by_foreign")
}

model purchase_return_details {
  id                 BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_return_id BigInt           @db.UnsignedBigInt
  product_id         BigInt           @db.UnsignedBigInt
  quantity           Int
  recived_quantity   Int
  price              Float
  amount             Float
  created_at         DateTime?        @db.Timestamp(0)
  updated_at         DateTime?        @db.Timestamp(0)
  product_catalogs   product_catalogs @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_details_product_id_foreign")
  purchase_returns   purchase_returns @relation(fields: [purchase_return_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_return_details_purchase_return_id_foreign")

  @@index([product_id], map: "purchase_return_details_product_id_foreign")
  @@index([purchase_return_id], map: "purchase_return_details_purchase_return_id_foreign")
}

model purchase_returns {
  id                                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  purchase_order_id                        BigInt                     @db.UnsignedBigInt
  purchase_order_receive_id                BigInt                     @db.UnsignedBigInt
  supplier_id                              BigInt?                    @db.UnsignedBigInt
  main_inv_discount                        Float                      @default(0.00)
  discount                                 Float                      @default(0.00)
  total_amount                             Float                      @default(0.00)
  net_amount                               Float                      @default(0.00)
  remarks                                  String?                    @db.VarChar(255)
  return_date                              DateTime                   @db.Date
  status                                   String                     @default("Pending") @db.VarChar(255)
  invoice_no                               String?                    @db.VarChar(255)
  reference_invoice                        String?                    @db.VarChar(255)
  deleted_at                               DateTime?                  @db.Timestamp(0)
  created_by                               BigInt?                    @db.UnsignedBigInt
  updated_by                               BigInt?                    @db.UnsignedBigInt
  deleted_by                               BigInt?                    @db.UnsignedBigInt
  created_at                               DateTime?                  @db.Timestamp(0)
  updated_at                               DateTime?                  @db.Timestamp(0)
  purchase_return_approves                 purchase_return_approves[]
  purchase_return_details                  purchase_return_details[]
  users_purchase_returns_created_byTousers users?                     @relation("purchase_returns_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_returns_created_by_foreign")
  users_purchase_returns_deleted_byTousers users?                     @relation("purchase_returns_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_returns_deleted_by_foreign")
  purchase_orders                          purchase_orders            @relation(fields: [purchase_order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_returns_purchase_order_id_foreign")
  purchase_order_receives                  purchase_order_receives    @relation(fields: [purchase_order_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_returns_purchase_order_receive_id_foreign")
  suppliers                                suppliers?                 @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "purchase_returns_supplier_id_foreign")
  users_purchase_returns_updated_byTousers users?                     @relation("purchase_returns_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "purchase_returns_updated_by_foreign")

  @@index([created_by], map: "purchase_returns_created_by_foreign")
  @@index([deleted_by], map: "purchase_returns_deleted_by_foreign")
  @@index([purchase_order_id], map: "purchase_returns_purchase_order_id_foreign")
  @@index([purchase_order_receive_id], map: "purchase_returns_purchase_order_receive_id_foreign")
  @@index([supplier_id], map: "purchase_returns_supplier_id_foreign")
  @@index([updated_by], map: "purchase_returns_updated_by_foreign")
}

model quotation_details {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  quotation_id     BigInt           @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  quantity         Decimal          @db.Decimal(20, 5)
  price            Decimal          @db.Decimal(20, 5)
  unit_discount    Decimal          @default(0.00000) @db.Decimal(20, 5)
  total_discount   Decimal          @default(0.00000) @db.Decimal(20, 5)
  amount           Decimal          @db.Decimal(20, 5)
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "quotation_details_product_id_foreign")
  quotations       quotations       @relation(fields: [quotation_id], references: [id], onUpdate: Restrict, map: "quotation_details_quotation_id_foreign")

  @@index([product_id], map: "quotation_details_product_id_foreign")
  @@index([quotation_id], map: "quotation_details_quotation_id_foreign")
}

model quotation_terms_and_conditions {
  id                    BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  quotation_id          BigInt     @db.UnsignedBigInt
  quotation_to          String?    @db.VarChar(255)
  email                 String?    @db.VarChar(255)
  attn                  String?    @db.VarChar(255)
  attn_cell             String?    @db.VarChar(255)
  payment               String?    @db.Text
  payment_method        String?    @db.Text
  tax_vat               String?    @db.Text
  installation          String?    @db.Text
  training              String?    @db.Text
  warranty              String?    @db.Text
  buyers_responsibility String?    @db.Text
  validity              String?    @db.Text
  delivery_info         String?    @db.Text
  created_at            DateTime?  @db.Timestamp(0)
  updated_at            DateTime?  @db.Timestamp(0)
  quotations            quotations @relation(fields: [quotation_id], references: [id], onUpdate: Restrict, map: "quotation_terms_and_conditions_quotation_id_foreign")

  @@index([quotation_id], map: "quotation_terms_and_conditions_quotation_id_foreign")
}

model quotations {
  id                                  BigInt                           @id @default(autoincrement()) @db.UnsignedBigInt
  quotation_no                        String                           @db.VarChar(255)
  date                                DateTime                         @db.Date
  total_amount                        Decimal                          @db.Decimal(20, 5)
  discount                            Decimal                          @db.Decimal(20, 5)
  percentage                          Decimal                          @db.Decimal(20, 5)
  total                               Decimal                          @db.Decimal(20, 5)
  net_amount                          Decimal                          @db.Decimal(20, 5)
  remarks                             String?                          @db.VarChar(255)
  status                              Int                              @default(0) @db.TinyInt
  customer_name                       String?                          @db.VarChar(255)
  phone                               String?                          @db.VarChar(255)
  area                                String?                          @db.VarChar(255)
  address                             String?                          @db.VarChar(255)
  customer_type                       BigInt?                          @db.UnsignedBigInt
  deleted_at                          DateTime?                        @db.Timestamp(0)
  approved_by                         BigInt?                          @db.UnsignedBigInt
  created_by                          BigInt?                          @db.UnsignedBigInt
  updated_by                          BigInt?                          @db.UnsignedBigInt
  deleted_by                          BigInt?                          @db.UnsignedBigInt
  created_at                          DateTime?                        @db.Timestamp(0)
  updated_at                          DateTime?                        @db.Timestamp(0)
  quotation_details                   quotation_details[]
  quotation_terms_and_conditions      quotation_terms_and_conditions[]
  users_quotations_approved_byTousers users?                           @relation("quotations_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "quotations_approved_by_foreign")
  users_quotations_created_byTousers  users?                           @relation("quotations_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "quotations_created_by_foreign")
  customer_types                      customer_types?                  @relation(fields: [customer_type], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "quotations_customer_type_foreign")
  users_quotations_deleted_byTousers  users?                           @relation("quotations_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "quotations_deleted_by_foreign")
  users_quotations_updated_byTousers  users?                           @relation("quotations_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "quotations_updated_by_foreign")

  @@index([approved_by], map: "quotations_approved_by_foreign")
  @@index([created_by], map: "quotations_created_by_foreign")
  @@index([customer_type], map: "quotations_customer_type_foreign")
  @@index([deleted_by], map: "quotations_deleted_by_foreign")
  @@index([updated_by], map: "quotations_updated_by_foreign")
}

model receivers {
  id                                BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                       BigInt?    @db.UnsignedBigInt
  receiver_type                     String     @db.VarChar(255)
  name                              String     @db.VarChar(255)
  contact_no                        String?    @db.VarChar(255)
  address                           String?    @db.VarChar(255)
  deleted_at                        DateTime?  @db.Timestamp(0)
  created_by                        BigInt?    @db.UnsignedBigInt
  updated_by                        BigInt?    @db.UnsignedBigInt
  deleted_by                        BigInt?    @db.UnsignedBigInt
  created_at                        DateTime?  @db.Timestamp(0)
  updated_at                        DateTime?  @db.Timestamp(0)
  challans                          challans[]
  users_receivers_created_byTousers users?     @relation("receivers_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "receivers_created_by_foreign")
  customers                         customers? @relation(fields: [customer_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "receivers_customer_id_foreign")
  users_receivers_deleted_byTousers users?     @relation("receivers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "receivers_deleted_by_foreign")
  users_receivers_updated_byTousers users?     @relation("receivers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "receivers_updated_by_foreign")

  @@index([created_by], map: "receivers_created_by_foreign")
  @@index([customer_id], map: "receivers_customer_id_foreign")
  @@index([deleted_by], map: "receivers_deleted_by_foreign")
  @@index([updated_by], map: "receivers_updated_by_foreign")
}

model requisition_details {
  id             BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  requisition_id BigInt       @db.UnsignedBigInt
  product_id     BigInt       @db.UnsignedBigInt
  price          Float?
  sales_price    Float?
  quantity       Float?
  amount         Float?
  created_at     DateTime?    @db.Timestamp(0)
  updated_at     DateTime?    @db.Timestamp(0)
  requisitions   requisitions @relation(fields: [requisition_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_details_requisition_id_foreign")

  @@index([requisition_id], map: "requisition_details_requisition_id_foreign")
}

model requisition_receive_batches {
  id                                                  BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  requisition_id                                      BigInt?               @db.UnsignedBigInt
  requisition_receive_id                              BigInt?               @db.UnsignedBigInt
  product_id                                          BigInt                @db.UnsignedBigInt
  batch_no                                            String?               @db.VarChar(255)
  manufacture_no                                      String?               @db.VarChar(255)
  lot_no                                              String?               @db.VarChar(255)
  expired_date                                        String?               @db.VarChar(255)
  quantity                                            String?               @db.VarChar(255)
  deleted_at                                          DateTime?             @db.Timestamp(0)
  created_by                                          BigInt?               @db.UnsignedBigInt
  updated_by                                          BigInt?               @db.UnsignedBigInt
  deleted_by                                          BigInt?               @db.UnsignedBigInt
  created_at                                          DateTime?             @db.Timestamp(0)
  updated_at                                          DateTime?             @db.Timestamp(0)
  users_requisition_receive_batches_created_byTousers users?                @relation("requisition_receive_batches_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_batches_created_by_foreign")
  users_requisition_receive_batches_deleted_byTousers users?                @relation("requisition_receive_batches_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_batches_deleted_by_foreign")
  product_catalogs                                    product_catalogs      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_batches_product_id_foreign")
  requisitions                                        requisitions?         @relation(fields: [requisition_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_batches_requisition_id_foreign")
  requisition_receives                                requisition_receives? @relation(fields: [requisition_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_batches_requisition_receive_id_foreign")
  users_requisition_receive_batches_updated_byTousers users?                @relation("requisition_receive_batches_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_batches_updated_by_foreign")

  @@index([created_by], map: "requisition_receive_batches_created_by_foreign")
  @@index([deleted_by], map: "requisition_receive_batches_deleted_by_foreign")
  @@index([product_id], map: "requisition_receive_batches_product_id_foreign")
  @@index([requisition_id], map: "requisition_receive_batches_requisition_id_foreign")
  @@index([requisition_receive_id], map: "requisition_receive_batches_requisition_receive_id_foreign")
  @@index([updated_by], map: "requisition_receive_batches_updated_by_foreign")
}

model requisition_receive_details {
  id                                                  BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  requisition_receive_id                              BigInt               @db.UnsignedBigInt
  requisition_id                                      BigInt               @db.UnsignedBigInt
  product_id                                          BigInt               @db.UnsignedBigInt
  approved_quantity                                   String?              @db.VarChar(255)
  received_quantity                                   String?              @db.VarChar(255)
  deleted_at                                          DateTime?            @db.Timestamp(0)
  created_by                                          BigInt?              @db.UnsignedBigInt
  updated_by                                          BigInt?              @db.UnsignedBigInt
  deleted_by                                          BigInt?              @db.UnsignedBigInt
  created_at                                          DateTime?            @db.Timestamp(0)
  updated_at                                          DateTime?            @db.Timestamp(0)
  users_requisition_receive_details_created_byTousers users?               @relation("requisition_receive_details_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_details_created_by_foreign")
  users_requisition_receive_details_deleted_byTousers users?               @relation("requisition_receive_details_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_details_deleted_by_foreign")
  product_catalogs                                    product_catalogs     @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_details_product_id_foreign")
  requisitions                                        requisitions         @relation(fields: [requisition_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_details_requisition_id_foreign")
  requisition_receives                                requisition_receives @relation(fields: [requisition_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_details_requisition_receive_id_foreign")
  users_requisition_receive_details_updated_byTousers users?               @relation("requisition_receive_details_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_details_updated_by_foreign")

  @@index([created_by], map: "requisition_receive_details_created_by_foreign")
  @@index([deleted_by], map: "requisition_receive_details_deleted_by_foreign")
  @@index([product_id], map: "requisition_receive_details_product_id_foreign")
  @@index([requisition_id], map: "requisition_receive_details_requisition_id_foreign")
  @@index([requisition_receive_id], map: "requisition_receive_details_requisition_receive_id_foreign")
  @@index([updated_by], map: "requisition_receive_details_updated_by_foreign")
}

model requisition_receive_serials {
  id                                                  BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  requisition_id                                      BigInt?               @db.UnsignedBigInt
  requisition_receive_id                              BigInt?               @db.UnsignedBigInt
  product_id                                          BigInt                @db.UnsignedBigInt
  serial_no                                           String?               @db.VarChar(255)
  dongle_no                                           String?               @db.VarChar(255)
  manufacture_date                                    String?               @db.VarChar(255)
  quantity                                            String?               @db.VarChar(255)
  deleted_at                                          DateTime?             @db.Timestamp(0)
  created_by                                          BigInt?               @db.UnsignedBigInt
  updated_by                                          BigInt?               @db.UnsignedBigInt
  deleted_by                                          BigInt?               @db.UnsignedBigInt
  created_at                                          DateTime?             @db.Timestamp(0)
  updated_at                                          DateTime?             @db.Timestamp(0)
  users_requisition_receive_serials_created_byTousers users?                @relation("requisition_receive_serials_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_serials_created_by_foreign")
  users_requisition_receive_serials_deleted_byTousers users?                @relation("requisition_receive_serials_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_serials_deleted_by_foreign")
  product_catalogs                                    product_catalogs      @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_serials_product_id_foreign")
  requisitions                                        requisitions?         @relation(fields: [requisition_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_serials_requisition_id_foreign")
  requisition_receives                                requisition_receives? @relation(fields: [requisition_receive_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receive_serials_requisition_receive_id_foreign")
  users_requisition_receive_serials_updated_byTousers users?                @relation("requisition_receive_serials_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receive_serials_updated_by_foreign")

  @@index([created_by], map: "requisition_receive_serials_created_by_foreign")
  @@index([deleted_by], map: "requisition_receive_serials_deleted_by_foreign")
  @@index([product_id], map: "requisition_receive_serials_product_id_foreign")
  @@index([requisition_id], map: "requisition_receive_serials_requisition_id_foreign")
  @@index([requisition_receive_id], map: "requisition_receive_serials_requisition_receive_id_foreign")
  @@index([updated_by], map: "requisition_receive_serials_updated_by_foreign")
}

model requisition_receives {
  id                                           BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  requisition_id                               BigInt                        @db.UnsignedBigInt
  purchase_invoice                             String?                       @db.VarChar(255)
  deleted_at                                   DateTime?                     @db.Timestamp(0)
  created_by                                   BigInt?                       @db.UnsignedBigInt
  updated_by                                   BigInt?                       @db.UnsignedBigInt
  deleted_by                                   BigInt?                       @db.UnsignedBigInt
  created_at                                   DateTime?                     @db.Timestamp(0)
  updated_at                                   DateTime?                     @db.Timestamp(0)
  requisition_receive_batches                  requisition_receive_batches[]
  requisition_receive_details                  requisition_receive_details[]
  requisition_receive_serials                  requisition_receive_serials[]
  users_requisition_receives_created_byTousers users?                        @relation("requisition_receives_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receives_created_by_foreign")
  users_requisition_receives_deleted_byTousers users?                        @relation("requisition_receives_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receives_deleted_by_foreign")
  requisitions                                 requisitions                  @relation(fields: [requisition_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisition_receives_requisition_id_foreign")
  users_requisition_receives_updated_byTousers users?                        @relation("requisition_receives_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisition_receives_updated_by_foreign")

  @@index([created_by], map: "requisition_receives_created_by_foreign")
  @@index([deleted_by], map: "requisition_receives_deleted_by_foreign")
  @@index([requisition_id], map: "requisition_receives_requisition_id_foreign")
  @@index([updated_by], map: "requisition_receives_updated_by_foreign")
}

model requisitions {
  id                                    BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  supplier_id                           BigInt?                       @db.UnsignedBigInt
  customer_id                           BigInt?                       @db.UnsignedBigInt
  branch_id                             BigInt?                       @db.UnsignedBigInt
  invoice_date                          String?                       @db.VarChar(255)
  requisition_no                        String?                       @db.VarChar(255)
  description                           String?                       @db.Text
  total_amount                          Float?
  discount                              Float?
  net_amount                            Float?
  status                                Int?                          @db.TinyInt
  file_uploads                          String?                       @db.LongText
  approved_by                           BigInt?                       @db.UnsignedBigInt
  deleted_at                            DateTime?                     @db.Timestamp(0)
  created_by                            BigInt?                       @db.UnsignedBigInt
  updated_by                            BigInt?                       @db.UnsignedBigInt
  deleted_by                            BigInt?                       @db.UnsignedBigInt
  created_at                            DateTime?                     @db.Timestamp(0)
  updated_at                            DateTime?                     @db.Timestamp(0)
  requisition_details                   requisition_details[]
  requisition_receive_batches           requisition_receive_batches[]
  requisition_receive_details           requisition_receive_details[]
  requisition_receive_serials           requisition_receive_serials[]
  requisition_receives                  requisition_receives[]
  users_requisitions_approved_byTousers users?                        @relation("requisitions_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisitions_approved_by_foreign")
  users_requisitions_created_byTousers  users?                        @relation("requisitions_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisitions_created_by_foreign")
  customers                             customers?                    @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisitions_customer_id_foreign")
  users_requisitions_deleted_byTousers  users?                        @relation("requisitions_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisitions_deleted_by_foreign")
  suppliers                             suppliers?                    @relation(fields: [supplier_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "requisitions_supplier_id_foreign")
  users_requisitions_updated_byTousers  users?                        @relation("requisitions_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "requisitions_updated_by_foreign")

  @@index([approved_by], map: "requisitions_approved_by_foreign")
  @@index([created_by], map: "requisitions_created_by_foreign")
  @@index([customer_id], map: "requisitions_customer_id_foreign")
  @@index([deleted_by], map: "requisitions_deleted_by_foreign")
  @@index([supplier_id], map: "requisitions_supplier_id_foreign")
  @@index([updated_by], map: "requisitions_updated_by_foreign")
}

model role_user {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  role_id    BigInt    @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  roles      roles     @relation(fields: [role_id], references: [id], onUpdate: Restrict, map: "role_user_role_id_foreign")
  users      users     @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "role_user_user_id_foreign")

  @@index([role_id], map: "role_user_role_id_foreign")
  @@index([user_id], map: "role_user_user_id_foreign")
}

model roles {
  id              BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  name            String            @db.VarChar(255)
  slug            String            @db.VarChar(255)
  is_default      Boolean           @default(false)
  created_at      DateTime?         @db.Timestamp(0)
  updated_at      DateTime?         @db.Timestamp(0)
  permission_role permission_role[]
  role_user       role_user[]
}

model salary_generate_payments {
  id                 BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  salary_generate_id BigInt           @db.UnsignedBigInt
  amount             Decimal          @db.Decimal(20, 5)
  pay_date           DateTime         @db.Date
  created_at         DateTime?        @db.Timestamp(0)
  updated_at         DateTime?        @db.Timestamp(0)
  salary_generates   salary_generates @relation(fields: [salary_generate_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "salary_generate_payments_salary_generate_id_foreign")

  @@index([salary_generate_id], map: "salary_generate_payments_salary_generate_id_foreign")
}

model salary_generates {
  id                                       BigInt                     @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                              BigInt                     @db.UnsignedBigInt
  department_id                            BigInt?                    @db.UnsignedBigInt
  pay_date                                 DateTime?                  @db.Date
  year_month                               String?                    @db.VarChar(255)
  basic                                    Decimal                    @default(0.00000) @db.Decimal(20, 5)
  house_rent                               Decimal                    @default(0.00000) @db.Decimal(20, 5)
  medical                                  Decimal                    @default(0.00000) @db.Decimal(20, 5)
  conveyance                               Decimal                    @default(0.00000) @db.Decimal(20, 5)
  others                                   Decimal                    @default(0.00000) @db.Decimal(20, 5)
  ot_pay                                   Decimal                    @default(0.00000) @db.Decimal(20, 5)
  double_time_pay                          Decimal                    @default(0.00000) @db.Decimal(20, 5)
  commission                               Decimal                    @default(0.00000) @db.Decimal(20, 5)
  bonus                                    Decimal                    @default(0.00000) @db.Decimal(20, 5)
  leave_encashment                         Decimal                    @default(0.00000) @db.Decimal(20, 5)
  advance                                  Decimal                    @default(0.00000) @db.Decimal(20, 5)
  loan                                     Decimal                    @default(0.00000) @db.Decimal(20, 5)
  no_pay_leave                             Decimal                    @default(0.00000) @db.Decimal(20, 5)
  absence                                  Decimal                    @default(0.00000) @db.Decimal(20, 5)
  tax                                      Decimal                    @default(0.00000) @db.Decimal(20, 5)
  gross                                    Decimal                    @default(0.00000) @db.Decimal(20, 5)
  total_other_earnings                     Decimal                    @default(0.00000) @db.Decimal(20, 5)
  total_earnings                           Decimal                    @default(0.00000) @db.Decimal(20, 5)
  total_deductions                         Decimal                    @default(0.00000) @db.Decimal(20, 5)
  total_tax                                Decimal                    @default(0.00000) @db.Decimal(20, 5)
  net_earning                              Decimal                    @default(0.00000) @db.Decimal(20, 5)
  status                                   String                     @default("Pending") @db.VarChar(255)
  deleted_at                               DateTime?                  @db.Timestamp(0)
  created_by                               BigInt?                    @db.UnsignedBigInt
  updated_by                               BigInt?                    @db.UnsignedBigInt
  deleted_by                               BigInt?                    @db.UnsignedBigInt
  created_at                               DateTime?                  @db.Timestamp(0)
  updated_at                               DateTime?                  @db.Timestamp(0)
  salary_generate_payments                 salary_generate_payments[]
  users_salary_generates_created_byTousers users?                     @relation("salary_generates_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "salary_generates_created_by_foreign")
  users_salary_generates_deleted_byTousers users?                     @relation("salary_generates_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "salary_generates_deleted_by_foreign")
  employees                                employees                  @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "salary_generates_employee_id_foreign")
  users_salary_generates_updated_byTousers users?                     @relation("salary_generates_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "salary_generates_updated_by_foreign")

  @@index([created_by], map: "salary_generates_created_by_foreign")
  @@index([deleted_by], map: "salary_generates_deleted_by_foreign")
  @@index([employee_id], map: "salary_generates_employee_id_foreign")
  @@index([updated_by], map: "salary_generates_updated_by_foreign")
}

model salary_setups {
  id                                    BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  title                                 String              @db.VarChar(255)
  effective_date                        DateTime            @db.Date
  basic                                 Decimal             @default(0.00000) @db.Decimal(20, 5)
  house_rent                            Decimal             @default(0.00000) @db.Decimal(20, 5)
  medical                               Decimal             @default(0.00000) @db.Decimal(20, 5)
  conveyance                            Decimal             @default(0.00000) @db.Decimal(20, 5)
  others                                Decimal             @default(0.00000) @db.Decimal(20, 5)
  is_conveyance_fixed                   Int                 @default(0) @db.TinyInt
  is_medical_fixed                      Int                 @default(0) @db.TinyInt
  is_others_fixed                       Int                 @default(0) @db.TinyInt
  status                                Int                 @default(1) @db.TinyInt
  deleted_at                            DateTime?           @db.Timestamp(0)
  created_by                            BigInt?             @db.UnsignedBigInt
  updated_by                            BigInt?             @db.UnsignedBigInt
  deleted_by                            BigInt?             @db.UnsignedBigInt
  created_at                            DateTime?           @db.Timestamp(0)
  updated_at                            DateTime?           @db.Timestamp(0)
  employee_salaries                     employee_salaries[]
  users_salary_setups_created_byTousers users?              @relation("salary_setups_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "salary_setups_created_by_foreign")
  users_salary_setups_deleted_byTousers users?              @relation("salary_setups_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "salary_setups_deleted_by_foreign")
  users_salary_setups_updated_byTousers users?              @relation("salary_setups_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "salary_setups_updated_by_foreign")

  @@index([created_by], map: "salary_setups_created_by_foreign")
  @@index([deleted_by], map: "salary_setups_deleted_by_foreign")
  @@index([updated_by], map: "salary_setups_updated_by_foreign")
}

model sale_invoices {
  id                                    BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  challan_id                            BigInt            @db.UnsignedBigInt
  invoice_id                            String            @db.VarChar(255)
  invoice_date                          DateTime          @db.Date
  customer_id                           BigInt            @db.UnsignedBigInt
  total_amount                          Float
  discount                              Float?
  commission                            Float?
  total                                 Float
  percentage                            Float?
  vat                                   Float?
  net_amount                            Float
  remarks                               String?           @db.Text
  status                                String            @default("pending") @db.VarChar(255)
  created_at                            DateTime?         @db.Timestamp(0)
  updated_at                            DateTime?         @db.Timestamp(0)
  deleted_at                            DateTime?         @db.Timestamp(0)
  created_by                            BigInt?           @db.UnsignedBigInt
  updated_by                            BigInt?           @db.UnsignedBigInt
  deleted_by                            BigInt?           @db.UnsignedBigInt
  invoice_details                       invoice_details[]
  challans                              challans          @relation(fields: [challan_id], references: [id], onUpdate: Restrict, map: "sale_invoices_challan_id_foreign")
  users_sale_invoices_created_byTousers users?            @relation("sale_invoices_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sale_invoices_created_by_foreign")
  customers                             customers         @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "sale_invoices_customer_id_foreign")
  users_sale_invoices_deleted_byTousers users?            @relation("sale_invoices_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sale_invoices_deleted_by_foreign")
  users_sale_invoices_updated_byTousers users?            @relation("sale_invoices_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sale_invoices_updated_by_foreign")

  @@index([challan_id], map: "sale_invoices_challan_id_foreign")
  @@index([created_by], map: "sale_invoices_created_by_foreign")
  @@index([customer_id], map: "sale_invoices_customer_id_foreign")
  @@index([deleted_by], map: "sale_invoices_deleted_by_foreign")
  @@index([updated_by], map: "sale_invoices_updated_by_foreign")
}

model sale_return_details {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model sale_returns {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model sales_order_deliveries {
  id                                             BigInt                         @id @default(autoincrement()) @db.UnsignedBigInt
  sales_order_id                                 BigInt?                        @db.UnsignedBigInt
  deleted_at                                     DateTime?                      @db.Timestamp(0)
  created_by                                     BigInt?                        @db.UnsignedBigInt
  updated_by                                     BigInt?                        @db.UnsignedBigInt
  deleted_by                                     BigInt?                        @db.UnsignedBigInt
  created_at                                     DateTime?                      @db.Timestamp(0)
  updated_at                                     DateTime?                      @db.Timestamp(0)
  users_sales_order_deliveries_created_byTousers users?                         @relation("sales_order_deliveries_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_order_deliveries_created_by_foreign")
  users_sales_order_deliveries_deleted_byTousers users?                         @relation("sales_order_deliveries_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_order_deliveries_deleted_by_foreign")
  users_sales_order_deliveries_updated_byTousers users?                         @relation("sales_order_deliveries_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_order_deliveries_updated_by_foreign")
  sales_order_delivery_details                   sales_order_delivery_details[]

  @@index([created_by], map: "sales_order_deliveries_created_by_foreign")
  @@index([deleted_by], map: "sales_order_deliveries_deleted_by_foreign")
  @@index([updated_by], map: "sales_order_deliveries_updated_by_foreign")
}

model sales_order_delivery_details {
  id                          BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  sales_order_delivery_id     BigInt                        @db.UnsignedBigInt
  product_id                  BigInt                        @db.UnsignedBigInt
  quantity                    Decimal?                      @db.Decimal(20, 5)
  deleted_at                  DateTime?                     @db.Timestamp(0)
  created_at                  DateTime?                     @db.Timestamp(0)
  updated_at                  DateTime?                     @db.Timestamp(0)
  product_catalogs            product_catalogs              @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sales_order_delivery_details_product_id_foreign")
  sales_order_deliveries      sales_order_deliveries        @relation(fields: [sales_order_delivery_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sales_order_delivery_details_sales_order_delivery_id_foreign")
  sales_order_delivery_stocks sales_order_delivery_stocks[]

  @@index([product_id], map: "sales_order_delivery_details_product_id_foreign")
  @@index([sales_order_delivery_id], map: "sales_order_delivery_details_sales_order_delivery_id_foreign")
}

model sales_order_delivery_stocks {
  id                           BigInt                       @id @default(autoincrement()) @db.UnsignedBigInt
  s_o_d_p_details_id           BigInt                       @db.UnsignedBigInt
  product_catalog_id           BigInt                       @db.UnsignedBigInt
  serial_no                    String?                      @db.VarChar(255)
  quantity                     Float?
  lot_no                       String?                      @db.VarChar(255)
  deleted_at                   DateTime?                    @db.Timestamp(0)
  created_at                   DateTime?                    @db.Timestamp(0)
  updated_at                   DateTime?                    @db.Timestamp(0)
  product_catalogs             product_catalogs             @relation(fields: [product_catalog_id], references: [id], onDelete: Cascade, map: "sales_order_delivery_stocks_product_catalog_id_foreign")
  sales_order_delivery_details sales_order_delivery_details @relation(fields: [s_o_d_p_details_id], references: [id], onDelete: Cascade, map: "sales_order_delivery_stocks_s_o_d_p_details_id_foreign")

  @@index([product_catalog_id], map: "sales_order_delivery_stocks_product_catalog_id_foreign")
  @@index([s_o_d_p_details_id], map: "sales_order_delivery_stocks_s_o_d_p_details_id_foreign")
}

model sales_order_details {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  sales_order_id   BigInt           @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  quantity         Decimal          @db.Decimal(20, 5)
  price            Decimal          @db.Decimal(20, 5)
  unit_discount    Decimal          @default(0.00000) @db.Decimal(20, 5)
  total_discount   Decimal          @default(0.00000) @db.Decimal(20, 5)
  amount           Decimal          @db.Decimal(20, 5)
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "sales_order_details_product_id_foreign")
  sales_orders     sales_orders     @relation(fields: [sales_order_id], references: [id], onUpdate: Restrict, map: "sales_order_details_sales_order_id_foreign")

  @@index([product_id], map: "sales_order_details_product_id_foreign")
  @@index([sales_order_id], map: "sales_order_details_sales_order_id_foreign")
}

model sales_order_shipments {
  id                    BigInt       @id @default(autoincrement()) @db.UnsignedBigInt
  sales_order_id        BigInt       @db.UnsignedBigInt
  courier_id            BigInt?      @db.UnsignedBigInt
  area_id               BigInt?      @db.UnsignedBigInt
  address               String?      @db.VarChar(255)
  contact_person_name   String?      @db.VarChar(255)
  contact_person_number String?      @db.VarChar(255)
  created_at            DateTime?    @db.Timestamp(0)
  updated_at            DateTime?    @db.Timestamp(0)
  sales_orders          sales_orders @relation(fields: [sales_order_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sales_order_shipments_sales_order_id_foreign")

  @@index([sales_order_id], map: "sales_order_shipments_sales_order_id_foreign")
}

model sales_orders {
  id                                   BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                          BigInt                  @db.UnsignedBigInt
  additional_phone                     String?                 @db.VarChar(255)
  invoice_date                         DateTime                @db.Date
  total_amount                         Decimal                 @db.Decimal(20, 5)
  discount                             Decimal                 @db.Decimal(20, 5)
  commission                           Decimal                 @db.Decimal(20, 5)
  total                                Decimal                 @db.Decimal(20, 5)
  vat                                  Decimal                 @db.Decimal(20, 5)
  net_amount                           Decimal                 @db.Decimal(20, 5)
  remarks                              String?                 @db.VarChar(255)
  is_courier                           Boolean                 @default(false)
  status                               String                  @default("pending") @db.VarChar(255)
  source_type                          String?                 @db.VarChar(255)
  source_id                            BigInt?                 @db.UnsignedBigInt
  is_shipment                          Boolean                 @default(false)
  delivery_date                        DateTime?               @db.Date
  sales_order_id                       String?                 @db.VarChar(255)
  deleted_at                           DateTime?               @db.Timestamp(0)
  created_by                           BigInt?                 @db.UnsignedBigInt
  updated_by                           BigInt?                 @db.UnsignedBigInt
  deleted_by                           BigInt?                 @db.UnsignedBigInt
  created_at                           DateTime?               @db.Timestamp(0)
  updated_at                           DateTime?               @db.Timestamp(0)
  sales_order_details                  sales_order_details[]
  sales_order_shipments                sales_order_shipments[]
  users_sales_orders_created_byTousers users?                  @relation("sales_orders_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_orders_created_by_foreign")
  customers                            customers               @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "sales_orders_customer_id_foreign")
  users_sales_orders_deleted_byTousers users?                  @relation("sales_orders_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_orders_deleted_by_foreign")
  users_sales_orders_updated_byTousers users?                  @relation("sales_orders_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_orders_updated_by_foreign")

  @@index([created_by], map: "sales_orders_created_by_foreign")
  @@index([customer_id], map: "sales_orders_customer_id_foreign")
  @@index([deleted_by], map: "sales_orders_deleted_by_foreign")
  @@index([source_type, source_id], map: "sales_orders_source_type_source_id_index")
  @@index([updated_by], map: "sales_orders_updated_by_foreign")
}

model sales_requisition_details {
  id                   BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  sales_requisition_id BigInt             @db.UnsignedBigInt
  product_id           BigInt             @db.UnsignedBigInt
  quantity             Decimal            @db.Decimal(20, 5)
  price                Decimal            @db.Decimal(20, 5)
  unit_discount        Decimal            @default(0.00000) @db.Decimal(20, 5)
  total_discount       Decimal            @default(0.00000) @db.Decimal(20, 5)
  amount               Decimal            @db.Decimal(20, 5)
  created_at           DateTime?          @db.Timestamp(0)
  updated_at           DateTime?          @db.Timestamp(0)
  product_catalogs     product_catalogs   @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "sales_requisition_details_product_id_foreign")
  sales_requisitions   sales_requisitions @relation(fields: [sales_requisition_id], references: [id], onUpdate: Restrict, map: "sales_requisition_details_sales_requisition_id_foreign")

  @@index([product_id], map: "sales_requisition_details_product_id_foreign")
  @@index([sales_requisition_id], map: "sales_requisition_details_sales_requisition_id_foreign")
}

model sales_requisition_shipments {
  id                    BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  sales_requisition_id  BigInt             @db.UnsignedBigInt
  courier_id            BigInt?            @db.UnsignedBigInt
  area_id               BigInt?            @db.UnsignedBigInt
  address               String?            @db.VarChar(255)
  contact_person_name   String?            @db.VarChar(255)
  contact_person_number String?            @db.VarChar(255)
  created_at            DateTime?          @db.Timestamp(0)
  updated_at            DateTime?          @db.Timestamp(0)
  sales_requisitions    sales_requisitions @relation(fields: [sales_requisition_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "sales_requisition_shipments_sales_requisition_id_foreign")

  @@index([sales_requisition_id], map: "sales_requisition_shipments_sales_requisition_id_foreign")
}

model sales_requisitions {
  id                                         BigInt                        @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                                BigInt                        @db.UnsignedBigInt
  additional_phone                           String?                       @db.VarChar(255)
  invoice_date                               DateTime                      @db.Date
  delivery_date                              DateTime                      @db.Date
  total_amount                               Decimal                       @db.Decimal(20, 5)
  discount                                   Decimal                       @db.Decimal(20, 5)
  percentage                                 Decimal                       @db.Decimal(20, 5)
  total                                      Decimal                       @db.Decimal(20, 5)
  net_amount                                 Decimal                       @db.Decimal(20, 5)
  remarks                                    String?                       @db.VarChar(255)
  is_shipment                                Boolean                       @default(false)
  status                                     String                        @default("pending") @db.VarChar(255)
  is_courier                                 Int                           @default(0) @db.TinyInt
  deleted_at                                 DateTime?                     @db.Timestamp(0)
  created_by                                 BigInt?                       @db.UnsignedBigInt
  updated_by                                 BigInt?                       @db.UnsignedBigInt
  deleted_by                                 BigInt?                       @db.UnsignedBigInt
  created_at                                 DateTime?                     @db.Timestamp(0)
  updated_at                                 DateTime?                     @db.Timestamp(0)
  sales_requisition_details                  sales_requisition_details[]
  sales_requisition_shipments                sales_requisition_shipments[]
  users_sales_requisitions_created_byTousers users?                        @relation("sales_requisitions_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_requisitions_created_by_foreign")
  customers                                  customers                     @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "sales_requisitions_customer_id_foreign")
  users_sales_requisitions_deleted_byTousers users?                        @relation("sales_requisitions_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_requisitions_deleted_by_foreign")
  users_sales_requisitions_updated_byTousers users?                        @relation("sales_requisitions_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sales_requisitions_updated_by_foreign")

  @@index([created_by], map: "sales_requisitions_created_by_foreign")
  @@index([customer_id], map: "sales_requisitions_customer_id_foreign")
  @@index([deleted_by], map: "sales_requisitions_deleted_by_foreign")
  @@index([updated_by], map: "sales_requisitions_updated_by_foreign")
}

model service_assigns {
  id                                      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  service_id                              BigInt    @db.UnsignedBigInt
  action                                  String    @default("pending") @db.VarChar(255)
  deleted_at                              DateTime? @db.Timestamp(0)
  created_by                              BigInt?   @db.UnsignedBigInt
  updated_by                              BigInt?   @db.UnsignedBigInt
  deleted_by                              BigInt?   @db.UnsignedBigInt
  created_at                              DateTime? @db.Timestamp(0)
  updated_at                              DateTime? @db.Timestamp(0)
  users_service_assigns_created_byTousers users?    @relation("service_assigns_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_assigns_created_by_foreign")
  users_service_assigns_deleted_byTousers users?    @relation("service_assigns_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_assigns_deleted_by_foreign")
  services                                services  @relation(fields: [service_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "service_assigns_service_id_foreign")
  users_service_assigns_updated_byTousers users?    @relation("service_assigns_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_assigns_updated_by_foreign")

  @@index([created_by], map: "service_assigns_created_by_foreign")
  @@index([deleted_by], map: "service_assigns_deleted_by_foreign")
  @@index([service_id], map: "service_assigns_service_id_foreign")
  @@index([updated_by], map: "service_assigns_updated_by_foreign")
}

model service_bills {
  id                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  service_token_checkbox    Boolean?
  service_token_description String?   @db.VarChar(255)
  created_at                DateTime? @db.Timestamp(0)
  updated_at                DateTime? @db.Timestamp(0)
}

model service_my_tasks {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model service_names {
  id                                    BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  name                                  String          @db.VarChar(255)
  code                                  String?         @db.VarChar(255)
  status                                Int             @default(1) @db.TinyInt
  deleted_at                            DateTime?       @db.Timestamp(0)
  created_by                            BigInt?         @db.UnsignedBigInt
  updated_by                            BigInt?         @db.UnsignedBigInt
  deleted_by                            BigInt?         @db.UnsignedBigInt
  created_at                            DateTime?       @db.Timestamp(0)
  updated_at                            DateTime?       @db.Timestamp(0)
  users_service_names_created_byTousers users?          @relation("service_names_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_names_created_by_foreign")
  users_service_names_deleted_byTousers users?          @relation("service_names_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_names_deleted_by_foreign")
  users_service_names_updated_byTousers users?          @relation("service_names_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_names_updated_by_foreign")
  sms_templates                         sms_templates[]
  trigger_names                         trigger_names[]

  @@index([created_by], map: "service_names_created_by_foreign")
  @@index([deleted_by], map: "service_names_deleted_by_foreign")
  @@index([updated_by], map: "service_names_updated_by_foreign")
}

model service_tokens {
  id                                     BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  service_id                             String?   @db.VarChar(255)
  customer_id                            String?   @db.VarChar(255)
  contact_person_phone                   String?   @db.VarChar(255)
  token_date                             DateTime? @db.Date
  invoice_id                             DateTime? @db.Date
  invoice_date                           DateTime? @db.Date
  expire_date                            DateTime? @db.Date
  product_id                             String?   @db.VarChar(255)
  serial_number                          String?   @db.VarChar(255)
  service_type                           String?   @db.VarChar(255)
  problem_details                        String?   @db.Text
  problem_type                           String?   @db.VarChar(255)
  work_type                              String?   @db.VarChar(255)
  quantity                               String?   @db.VarChar(255)
  deleted_at                             DateTime? @db.Timestamp(0)
  created_by                             BigInt?   @db.UnsignedBigInt
  updated_by                             BigInt?   @db.UnsignedBigInt
  deleted_by                             BigInt?   @db.UnsignedBigInt
  created_at                             DateTime? @db.Timestamp(0)
  updated_at                             DateTime? @db.Timestamp(0)
  users_service_tokens_created_byTousers users?    @relation("service_tokens_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_tokens_created_by_foreign")
  users_service_tokens_deleted_byTousers users?    @relation("service_tokens_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_tokens_deleted_by_foreign")
  users_service_tokens_updated_byTousers users?    @relation("service_tokens_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_tokens_updated_by_foreign")

  @@index([created_by], map: "service_tokens_created_by_foreign")
  @@index([deleted_by], map: "service_tokens_deleted_by_foreign")
  @@index([updated_by], map: "service_tokens_updated_by_foreign")
}

model service_types {
  id                                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name                                  String    @db.VarChar(255)
  code                                  String    @db.VarChar(255)
  status                                Int       @default(1) @db.TinyInt
  deleted_at                            DateTime? @db.Timestamp(0)
  created_by                            BigInt?   @db.UnsignedBigInt
  updated_by                            BigInt?   @db.UnsignedBigInt
  deleted_by                            BigInt?   @db.UnsignedBigInt
  created_at                            DateTime? @db.Timestamp(0)
  updated_at                            DateTime? @db.Timestamp(0)
  users_service_types_created_byTousers users?    @relation("service_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_types_created_by_foreign")
  users_service_types_deleted_byTousers users?    @relation("service_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_types_deleted_by_foreign")
  users_service_types_updated_byTousers users?    @relation("service_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "service_types_updated_by_foreign")

  @@index([created_by], map: "service_types_created_by_foreign")
  @@index([deleted_by], map: "service_types_deleted_by_foreign")
  @@index([updated_by], map: "service_types_updated_by_foreign")
}

model services {
  id                               BigInt            @id @default(autoincrement()) @db.UnsignedBigInt
  assigned_engineer_id             String?           @db.VarChar(255)
  service_date                     DateTime?         @db.Date
  service_unique_id                String?           @db.VarChar(255)
  service_priority                 String?           @db.VarChar(255)
  remarks                          String?           @db.Text
  status                           String?           @db.VarChar(255)
  is_assigned                      Boolean           @default(false)
  action                           String            @default("pending") @db.VarChar(255)
  deleted_at                       DateTime?         @db.Timestamp(0)
  created_by                       BigInt?           @db.UnsignedBigInt
  updated_by                       BigInt?           @db.UnsignedBigInt
  deleted_by                       BigInt?           @db.UnsignedBigInt
  created_at                       DateTime?         @db.Timestamp(0)
  updated_at                       DateTime?         @db.Timestamp(0)
  emergency_notes                  emergency_notes[]
  service_assigns                  service_assigns[]
  users_services_created_byTousers users?            @relation("services_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "services_created_by_foreign")
  users_services_deleted_byTousers users?            @relation("services_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "services_deleted_by_foreign")
  users_services_updated_byTousers users?            @relation("services_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "services_updated_by_foreign")

  @@index([created_by], map: "services_created_by_foreign")
  @@index([deleted_by], map: "services_deleted_by_foreign")
  @@index([updated_by], map: "services_updated_by_foreign")
}

model shifts {
  id                             BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  shift_name                     String    @db.VarChar(255)
  grace_time                     String?   @db.VarChar(255)
  in_time                        DateTime? @db.Time(0)
  out_time                       DateTime? @db.Time(0)
  status                         Boolean   @default(true)
  deleted_at                     DateTime? @db.Timestamp(0)
  created_by                     BigInt?   @db.UnsignedBigInt
  updated_by                     BigInt?   @db.UnsignedBigInt
  deleted_by                     BigInt?   @db.UnsignedBigInt
  created_at                     DateTime? @db.Timestamp(0)
  updated_at                     DateTime? @db.Timestamp(0)
  users_shifts_created_byTousers users?    @relation("shifts_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shifts_created_by_foreign")
  users_shifts_deleted_byTousers users?    @relation("shifts_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shifts_deleted_by_foreign")
  users_shifts_updated_byTousers users?    @relation("shifts_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shifts_updated_by_foreign")

  @@index([created_by], map: "shifts_created_by_foreign")
  @@index([deleted_by], map: "shifts_deleted_by_foreign")
  @@index([updated_by], map: "shifts_updated_by_foreign")
}

model shipment_verifies {
  id                                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  shipment_id                               String    @db.VarChar(255)
  customer_id                               BigInt    @db.UnsignedBigInt
  customer_address                          String    @db.VarChar(255)
  challan_no                                String?   @db.VarChar(255)
  courier_id                                BigInt?   @db.UnsignedBigInt
  courier_date                              DateTime  @db.Date
  source_type                               String    @db.VarChar(255)
  source_id                                 BigInt    @db.UnsignedBigInt
  service_charge                            Decimal?  @db.Decimal(10, 3)
  delivery_charge                           Decimal?  @db.Decimal(10, 3)
  other_charge                              Decimal?  @db.Decimal(10, 3)
  service_type                              String?   @db.VarChar(255)
  delivery_type                             String?   @db.VarChar(255)
  other_type                                String?   @db.VarChar(255)
  receipt_no                                String?   @db.VarChar(255)
  cartoon_no                                String?   @db.VarChar(255)
  receive_date                              DateTime? @db.Date
  status                                    String    @default("pending") @db.VarChar(255)
  deleted_at                                DateTime? @db.Timestamp(0)
  created_by                                BigInt?   @db.UnsignedBigInt
  updated_by                                BigInt?   @db.UnsignedBigInt
  deleted_by                                BigInt?   @db.UnsignedBigInt
  created_at                                DateTime? @db.Timestamp(0)
  updated_at                                DateTime? @db.Timestamp(0)
  couriers                                  couriers? @relation(fields: [courier_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shipment_verifies_courier_id_foreign")
  users_shipment_verifies_created_byTousers users?    @relation("shipment_verifies_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shipment_verifies_created_by_foreign")
  customers                                 customers @relation(fields: [customer_id], references: [id], onUpdate: Restrict, map: "shipment_verifies_customer_id_foreign")
  users_shipment_verifies_deleted_byTousers users?    @relation("shipment_verifies_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shipment_verifies_deleted_by_foreign")
  users_shipment_verifies_updated_byTousers users?    @relation("shipment_verifies_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "shipment_verifies_updated_by_foreign")

  @@index([courier_id], map: "shipment_verifies_courier_id_foreign")
  @@index([created_by], map: "shipment_verifies_created_by_foreign")
  @@index([customer_id], map: "shipment_verifies_customer_id_foreign")
  @@index([deleted_by], map: "shipment_verifies_deleted_by_foreign")
  @@index([source_type, source_id], map: "shipment_verifies_source_type_source_id_index")
  @@index([updated_by], map: "shipment_verifies_updated_by_foreign")
}

model sms_templates {
  id                                    BigInt        @id @default(autoincrement()) @db.UnsignedBigInt
  template_title                        String        @db.VarChar(255)
  service_name_id                       BigInt        @db.UnsignedBigInt
  trigger_name_id                       BigInt        @db.UnsignedBigInt
  template_body                         String        @db.Text
  status                                Int           @default(1) @db.TinyInt
  deleted_at                            DateTime?     @db.Timestamp(0)
  created_by                            BigInt?       @db.UnsignedBigInt
  updated_by                            BigInt?       @db.UnsignedBigInt
  deleted_by                            BigInt?       @db.UnsignedBigInt
  created_at                            DateTime?     @db.Timestamp(0)
  updated_at                            DateTime?     @db.Timestamp(0)
  users_sms_templates_created_byTousers users?        @relation("sms_templates_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sms_templates_created_by_foreign")
  users_sms_templates_deleted_byTousers users?        @relation("sms_templates_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sms_templates_deleted_by_foreign")
  service_names                         service_names @relation(fields: [service_name_id], references: [id], onUpdate: Restrict, map: "sms_templates_service_name_id_foreign")
  trigger_names                         trigger_names @relation(fields: [trigger_name_id], references: [id], onUpdate: Restrict, map: "sms_templates_trigger_name_id_foreign")
  users_sms_templates_updated_byTousers users?        @relation("sms_templates_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "sms_templates_updated_by_foreign")

  @@index([created_by], map: "sms_templates_created_by_foreign")
  @@index([deleted_by], map: "sms_templates_deleted_by_foreign")
  @@index([service_name_id], map: "sms_templates_service_name_id_foreign")
  @@index([trigger_name_id], map: "sms_templates_trigger_name_id_foreign")
  @@index([updated_by], map: "sms_templates_updated_by_foreign")
}

model stocks {
  id               BigInt           @id @default(autoincrement()) @db.UnsignedBigInt
  product_id       BigInt           @db.UnsignedBigInt
  branch_id        BigInt           @db.UnsignedBigInt
  source_type      String           @db.VarChar(255)
  source_id        BigInt           @db.UnsignedBigInt
  stock_type       String           @db.VarChar(3)
  in_qty           Int              @default(0)
  out_qty          Int              @default(0)
  lot_no           String?          @db.VarChar(255)
  serial_no        String?          @db.VarChar(255)
  created_at       DateTime?        @db.Timestamp(0)
  updated_at       DateTime?        @db.Timestamp(0)
  branches         branches         @relation(fields: [branch_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "stocks_branch_id_foreign")
  product_catalogs product_catalogs @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "stocks_product_id_foreign")

  @@index([branch_id], map: "stocks_branch_id_foreign")
  @@index([product_id], map: "stocks_product_id_foreign")
  @@index([source_type, source_id], map: "stocks_source_type_source_id_index")
}

model suppliers {
  id                                BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  company_name                      String             @db.VarChar(255)
  company_place                     String             @db.VarChar(255)
  phone                             String             @db.VarChar(255)
  tnt_number                        String?            @db.VarChar(255)
  email                             String?            @db.VarChar(255)
  contact_for_sms                   String?            @db.VarChar(255)
  customer_id                       BigInt?            @db.UnsignedBigInt
  country                           String?            @db.VarChar(255)
  opening_balance                   Decimal?           @db.Decimal(14, 2)
  address                           String             @db.Text
  profile_picture                   String?            @db.VarChar(255)
  owner_name                        String?            @db.VarChar(255)
  owner_designation                 String?            @db.VarChar(255)
  owner_mobile                      String?            @db.VarChar(255)
  owner_email                       String?            @db.VarChar(255)
  owner_dob                         String?            @db.VarChar(255)
  owner_address                     String?            @db.VarChar(255)
  nid                               String?            @db.VarChar(255)
  front_image                       String?            @db.VarChar(255)
  back_image                        String?            @db.VarChar(255)
  visiting_card_front               String?            @db.VarChar(255)
  visiting_card_back                String?            @db.VarChar(255)
  trade_license                     String?            @db.VarChar(255)
  signature                         String?            @db.VarChar(255)
  remarks                           String?            @db.Text
  status                            Int                @default(1) @db.TinyInt
  country_code                      String?            @db.VarChar(255)
  deleted_at                        DateTime?          @db.Timestamp(0)
  created_by                        BigInt?            @db.UnsignedBigInt
  updated_by                        BigInt?            @db.UnsignedBigInt
  deleted_by                        BigInt?            @db.UnsignedBigInt
  created_at                        DateTime?          @db.Timestamp(0)
  updated_at                        DateTime?          @db.Timestamp(0)
  purchase_orders                   purchase_orders[]
  purchase_returns                  purchase_returns[]
  requisitions                      requisitions[]
  users_suppliers_created_byTousers users?             @relation("suppliers_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "suppliers_created_by_foreign")
  users_suppliers_deleted_byTousers users?             @relation("suppliers_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "suppliers_deleted_by_foreign")
  users_suppliers_updated_byTousers users?             @relation("suppliers_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "suppliers_updated_by_foreign")

  @@index([created_by], map: "suppliers_created_by_foreign")
  @@index([deleted_by], map: "suppliers_deleted_by_foreign")
  @@index([updated_by], map: "suppliers_updated_by_foreign")
}

model tags {
  id                           BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  name                         String             @db.VarChar(255)
  created_at                   DateTime?          @db.Timestamp(0)
  updated_at                   DateTime?          @db.Timestamp(0)
  code                         String?            @unique(map: "tags_code_unique") @db.VarChar(255)
  status                       Int                @default(1) @db.TinyInt
  deleted_at                   DateTime?          @db.Timestamp(0)
  created_by                   BigInt?            @db.UnsignedBigInt
  updated_by                   BigInt?            @db.UnsignedBigInt
  deleted_by                   BigInt?            @db.UnsignedBigInt
  product_catalogs             product_catalogs[]
  products                     products[]
  users_tags_created_byTousers users?             @relation("tags_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tags_created_by_foreign")
  users_tags_deleted_byTousers users?             @relation("tags_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tags_deleted_by_foreign")
  users_tags_updated_byTousers users?             @relation("tags_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "tags_updated_by_foreign")

  @@index([created_by], map: "tags_created_by_foreign")
  @@index([deleted_by], map: "tags_deleted_by_foreign")
  @@index([updated_by], map: "tags_updated_by_foreign")
}

model target_setups {
  id                                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  target_name                           String    @db.VarChar(255)
  product_ids                           String?   @db.LongText
  product_type                          String?   @db.VarChar(255)
  target_type                           String    @db.VarChar(255)
  target_period                         String    @db.VarChar(255)
  period                                DateTime  @db.Date
  target_value                          Int
  territory                             String?   @db.VarChar(255)
  assigned_to                           String    @db.VarChar(255)
  achieved_value                        Int?
  deleted_at                            DateTime? @db.Timestamp(0)
  created_by                            BigInt?   @db.UnsignedBigInt
  updated_by                            BigInt?   @db.UnsignedBigInt
  deleted_by                            BigInt?   @db.UnsignedBigInt
  created_at                            DateTime? @db.Timestamp(0)
  updated_at                            DateTime? @db.Timestamp(0)
  users_target_setups_created_byTousers users?    @relation("target_setups_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "target_setups_created_by_foreign")
  users_target_setups_deleted_byTousers users?    @relation("target_setups_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "target_setups_deleted_by_foreign")
  users_target_setups_updated_byTousers users?    @relation("target_setups_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "target_setups_updated_by_foreign")

  @@index([created_by], map: "target_setups_created_by_foreign")
  @@index([deleted_by], map: "target_setups_deleted_by_foreign")
  @@index([updated_by], map: "target_setups_updated_by_foreign")
}

model territories {
  id                                  BigInt              @id @default(autoincrement()) @db.UnsignedBigInt
  name                                String              @db.VarChar(255)
  code                                String              @db.VarChar(255)
  status                              Int                 @default(1) @db.TinyInt
  deleted_at                          DateTime?           @db.Timestamp(0)
  created_by                          BigInt?             @db.UnsignedBigInt
  updated_by                          BigInt?             @db.UnsignedBigInt
  deleted_by                          BigInt?             @db.UnsignedBigInt
  created_at                          DateTime?           @db.Timestamp(0)
  updated_at                          DateTime?           @db.Timestamp(0)
  users_territories_created_byTousers users?              @relation("territories_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territories_created_by_foreign")
  users_territories_deleted_byTousers users?              @relation("territories_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territories_deleted_by_foreign")
  users_territories_updated_byTousers users?              @relation("territories_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territories_updated_by_foreign")
  territory_details                   territory_details[]

  @@index([created_by], map: "territories_created_by_foreign")
  @@index([deleted_by], map: "territories_deleted_by_foreign")
  @@index([updated_by], map: "territories_updated_by_foreign")
}

model territory_assigns {
  id                                        BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  employee_id                               BigInt    @db.UnsignedBigInt
  territory_ids                             String    @db.LongText
  deleted_at                                DateTime? @db.Timestamp(0)
  created_by                                BigInt?   @db.UnsignedBigInt
  updated_by                                BigInt?   @db.UnsignedBigInt
  deleted_by                                BigInt?   @db.UnsignedBigInt
  created_at                                DateTime? @db.Timestamp(0)
  updated_at                                DateTime? @db.Timestamp(0)
  users_territory_assigns_created_byTousers users?    @relation("territory_assigns_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territory_assigns_created_by_foreign")
  users_territory_assigns_deleted_byTousers users?    @relation("territory_assigns_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territory_assigns_deleted_by_foreign")
  employees                                 employees @relation(fields: [employee_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "territory_assigns_employee_id_foreign")
  users_territory_assigns_updated_byTousers users?    @relation("territory_assigns_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territory_assigns_updated_by_foreign")

  @@index([created_by], map: "territory_assigns_created_by_foreign")
  @@index([deleted_by], map: "territory_assigns_deleted_by_foreign")
  @@index([employee_id], map: "territory_assigns_employee_id_foreign")
  @@index([updated_by], map: "territory_assigns_updated_by_foreign")
}

model territory_details {
  id                                                         BigInt         @id @default(autoincrement()) @db.UnsignedBigInt
  territory_id                                               BigInt         @db.UnsignedBigInt
  division_id                                                BigInt         @db.UnsignedBigInt
  district_id                                                BigInt         @db.UnsignedBigInt
  thana_id                                                   BigInt?        @db.UnsignedBigInt
  union_id                                                   BigInt?        @db.UnsignedBigInt
  area_id                                                    BigInt?        @db.UnsignedBigInt
  created_at                                                 DateTime?      @db.Timestamp(0)
  updated_at                                                 DateTime?      @db.Timestamp(0)
  areas                                                      areas?         @relation(fields: [area_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territory_details_area_id_foreign")
  geo_locations_territory_details_district_idTogeo_locations geo_locations  @relation("territory_details_district_idTogeo_locations", fields: [district_id], references: [id], onUpdate: Restrict, map: "territory_details_district_id_foreign")
  geo_locations_territory_details_division_idTogeo_locations geo_locations  @relation("territory_details_division_idTogeo_locations", fields: [division_id], references: [id], onUpdate: Restrict, map: "territory_details_division_id_foreign")
  territories                                                territories    @relation(fields: [territory_id], references: [id], onUpdate: Restrict, map: "territory_details_territory_id_foreign")
  geo_locations_territory_details_thana_idTogeo_locations    geo_locations? @relation("territory_details_thana_idTogeo_locations", fields: [thana_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territory_details_thana_id_foreign")
  geo_locations_territory_details_union_idTogeo_locations    geo_locations? @relation("territory_details_union_idTogeo_locations", fields: [union_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "territory_details_union_id_foreign")

  @@index([area_id], map: "territory_details_area_id_foreign")
  @@index([district_id], map: "territory_details_district_id_foreign")
  @@index([division_id], map: "territory_details_division_id_foreign")
  @@index([territory_id], map: "territory_details_territory_id_foreign")
  @@index([thana_id], map: "territory_details_thana_id_foreign")
  @@index([union_id], map: "territory_details_union_id_foreign")
}

model transactions {
  id                                   BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  transactionable_type                 String    @db.VarChar(255)
  transactionable_id                   BigInt    @db.UnsignedBigInt
  invoice_no                           String?   @db.VarChar(255)
  redirect_path                        String?   @db.VarChar(255)
  balance_type                         String?   @db.VarChar(255)
  account_id                           BigInt    @db.UnsignedBigInt
  amount                               Decimal   @db.Decimal(15, 2)
  description                          String?   @db.VarChar(255)
  transaction_item_type                String?   @db.VarChar(255)
  batch_id                             String?   @db.VarChar(255)
  debit_amount                         Decimal?  @db.Decimal(16, 4)
  credit_amount                        Decimal?  @db.Decimal(16, 4)
  created_at                           DateTime? @db.Timestamp(0)
  updated_at                           DateTime? @db.Timestamp(0)
  deleted_at                           DateTime? @db.Timestamp(0)
  created_by                           BigInt?   @db.UnsignedBigInt
  updated_by                           BigInt?   @db.UnsignedBigInt
  deleted_by                           BigInt?   @db.UnsignedBigInt
  accounts                             accounts  @relation(fields: [account_id], references: [id], onUpdate: Restrict, map: "transactions_account_id_foreign")
  users_transactions_created_byTousers users?    @relation("transactions_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transactions_created_by_foreign")
  users_transactions_deleted_byTousers users?    @relation("transactions_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transactions_deleted_by_foreign")
  users_transactions_updated_byTousers users?    @relation("transactions_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transactions_updated_by_foreign")

  @@index([account_id], map: "transactions_account_id_foreign")
  @@index([created_by], map: "transactions_created_by_foreign")
  @@index([deleted_by], map: "transactions_deleted_by_foreign")
  @@index([transactionable_type, transactionable_id], map: "transactions_transactionable_type_transactionable_id_index")
  @@index([updated_by], map: "transactions_updated_by_foreign")
}

model transport_expenses {
  id                     BigInt               @id @default(autoincrement()) @db.UnsignedBigInt
  bills_and_allowance_id BigInt               @db.UnsignedBigInt
  date_of_expense        DateTime             @db.Date
  from_location          String               @db.VarChar(255)
  to_location            String               @db.VarChar(255)
  transport_by           String               @db.VarChar(255)
  distance               Int
  expense_description    String               @db.Text
  amount                 Decimal              @db.Decimal(10, 2)
  settlement_amount      Decimal              @db.Decimal(10, 2)
  receipts_invoices      String?              @db.VarChar(255)
  supporting_documents   String?              @db.VarChar(255)
  created_at             DateTime?            @db.Timestamp(0)
  updated_at             DateTime?            @db.Timestamp(0)
  bills_and_allowances   bills_and_allowances @relation(fields: [bills_and_allowance_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "transport_expenses_bills_and_allowance_id_foreign")

  @@index([bills_and_allowance_id], map: "transport_expenses_bills_and_allowance_id_foreign")
}

model transport_types {
  id                                      BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  code                                    String?   @db.VarChar(255)
  name                                    String    @db.VarChar(255)
  description                             String?   @db.Text
  status                                  Boolean   @default(true)
  deleted_at                              DateTime? @db.Timestamp(0)
  created_by                              BigInt?   @db.UnsignedBigInt
  updated_by                              BigInt?   @db.UnsignedBigInt
  deleted_by                              BigInt?   @db.UnsignedBigInt
  created_at                              DateTime? @db.Timestamp(0)
  updated_at                              DateTime? @db.Timestamp(0)
  users_transport_types_created_byTousers users?    @relation("transport_types_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transport_types_created_by_foreign")
  users_transport_types_deleted_byTousers users?    @relation("transport_types_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transport_types_deleted_by_foreign")
  users_transport_types_updated_byTousers users?    @relation("transport_types_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "transport_types_updated_by_foreign")

  @@index([created_by], map: "transport_types_created_by_foreign")
  @@index([deleted_by], map: "transport_types_deleted_by_foreign")
  @@index([updated_by], map: "transport_types_updated_by_foreign")
}

model trigger_names {
  id                                    BigInt          @id @default(autoincrement()) @db.UnsignedBigInt
  service_name_id                       BigInt          @db.UnsignedBigInt
  name                                  String          @db.VarChar(255)
  code                                  String?         @db.VarChar(255)
  status                                Int             @default(1) @db.TinyInt
  deleted_at                            DateTime?       @db.Timestamp(0)
  created_by                            BigInt?         @db.UnsignedBigInt
  updated_by                            BigInt?         @db.UnsignedBigInt
  deleted_by                            BigInt?         @db.UnsignedBigInt
  created_at                            DateTime?       @db.Timestamp(0)
  updated_at                            DateTime?       @db.Timestamp(0)
  sms_templates                         sms_templates[]
  users_trigger_names_created_byTousers users?          @relation("trigger_names_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "trigger_names_created_by_foreign")
  users_trigger_names_deleted_byTousers users?          @relation("trigger_names_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "trigger_names_deleted_by_foreign")
  service_names                         service_names   @relation(fields: [service_name_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "trigger_names_service_name_id_foreign")
  users_trigger_names_updated_byTousers users?          @relation("trigger_names_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "trigger_names_updated_by_foreign")

  @@index([created_by], map: "trigger_names_created_by_foreign")
  @@index([deleted_by], map: "trigger_names_deleted_by_foreign")
  @@index([service_name_id], map: "trigger_names_service_name_id_foreign")
  @@index([updated_by], map: "trigger_names_updated_by_foreign")
}

model u_s_g_or_o_p_g_license_requisition_phones {
  id                                    BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  u_s_g_or_o_p_g_license_requisition_id BigInt    @db.UnsignedBigInt
  multiple_phone_no                     String    @db.VarChar(255)
  created_at                            DateTime? @db.Timestamp(0)
  updated_at                            DateTime? @db.Timestamp(0)
}

model u_s_g_or_o_p_g_license_requisitions {
  id                                                           BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  customer_id                                                  BigInt                   @db.UnsignedBigInt
  address                                                      String?                  @db.VarChar(255)
  phone                                                        String?                  @db.VarChar(255)
  dongle_id                                                    BigInt                   @db.UnsignedBigInt
  product_model                                                String?                  @db.VarChar(255)
  start_date                                                   DateTime?                @db.Date
  expired_date                                                 DateTime?                @db.Date
  valid_period                                                 String?                  @db.VarChar(255)
  valid_period_type                                            String?                  @db.VarChar(255)
  remarks                                                      String?                  @db.VarChar(255)
  license_id                                                   String?                  @db.VarChar(255)
  software_version                                             String?                  @db.VarChar(255)
  approved_by                                                  BigInt?                  @db.UnsignedBigInt
  status                                                       String                   @default("Pending") @db.VarChar(255)
  deleted_at                                                   DateTime?                @db.Timestamp(0)
  created_by                                                   BigInt?                  @db.UnsignedBigInt
  updated_by                                                   BigInt?                  @db.UnsignedBigInt
  deleted_by                                                   BigInt?                  @db.UnsignedBigInt
  created_at                                                   DateTime?                @db.Timestamp(0)
  updated_at                                                   DateTime?                @db.Timestamp(0)
  users_u_s_g_or_o_p_g_license_requisitions_approved_byTousers users?                   @relation("u_s_g_or_o_p_g_license_requisitions_approved_byTousers", fields: [approved_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "u_s_g_or_o_p_g_license_requisitions_approved_by_foreign")
  users_u_s_g_or_o_p_g_license_requisitions_created_byTousers  users?                   @relation("u_s_g_or_o_p_g_license_requisitions_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "u_s_g_or_o_p_g_license_requisitions_created_by_foreign")
  customers                                                    customers                @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "u_s_g_or_o_p_g_license_requisitions_customer_id_foreign")
  users_u_s_g_or_o_p_g_license_requisitions_deleted_byTousers  users?                   @relation("u_s_g_or_o_p_g_license_requisitions_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "u_s_g_or_o_p_g_license_requisitions_deleted_by_foreign")
  dongle_or_serial_entries                                     dongle_or_serial_entries @relation(fields: [dongle_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "u_s_g_or_o_p_g_license_requisitions_dongle_id_foreign")
  users_u_s_g_or_o_p_g_license_requisitions_updated_byTousers  users?                   @relation("u_s_g_or_o_p_g_license_requisitions_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "u_s_g_or_o_p_g_license_requisitions_updated_by_foreign")

  @@index([approved_by], map: "u_s_g_or_o_p_g_license_requisitions_approved_by_foreign")
  @@index([created_by], map: "u_s_g_or_o_p_g_license_requisitions_created_by_foreign")
  @@index([customer_id], map: "u_s_g_or_o_p_g_license_requisitions_customer_id_foreign")
  @@index([deleted_by], map: "u_s_g_or_o_p_g_license_requisitions_deleted_by_foreign")
  @@index([dongle_id], map: "u_s_g_or_o_p_g_license_requisitions_dongle_id_foreign")
  @@index([updated_by], map: "u_s_g_or_o_p_g_license_requisitions_updated_by_foreign")
}

model units {
  id                            BigInt                  @id @default(autoincrement()) @db.UnsignedBigInt
  name                          String                  @db.VarChar(255)
  description                   String?                 @db.VarChar(255)
  created_at                    DateTime?               @db.Timestamp(0)
  updated_at                    DateTime?               @db.Timestamp(0)
  deleted_at                    DateTime?               @db.Timestamp(0)
  created_by                    BigInt?                 @db.UnsignedBigInt
  updated_by                    BigInt?                 @db.UnsignedBigInt
  deleted_by                    BigInt?                 @db.UnsignedBigInt
  issue_product_details         issue_product_details[]
  product_catalogs              product_catalogs[]
  users_units_created_byTousers users?                  @relation("units_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "units_created_by_foreign")
  users_units_deleted_byTousers users?                  @relation("units_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "units_deleted_by_foreign")
  users_units_updated_byTousers users?                  @relation("units_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "units_updated_by_foreign")

  @@index([created_by], map: "units_created_by_foreign")
  @@index([deleted_by], map: "units_deleted_by_foreign")
  @@index([updated_by], map: "units_updated_by_foreign")
}

model user_general_notification {
  id                      BigInt                @id @default(autoincrement()) @db.UnsignedBigInt
  user_id                 BigInt                @db.UnsignedBigInt
  general_notification_id BigInt                @db.UnsignedBigInt
  created_at              DateTime?             @db.Timestamp(0)
  updated_at              DateTime?             @db.Timestamp(0)
  general_notifications   general_notifications @relation(fields: [general_notification_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "user_general_notification_general_notification_id_foreign")
  users                   users                 @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "user_general_notification_user_id_foreign")

  @@index([general_notification_id], map: "user_general_notification_general_notification_id_foreign")
  @@index([user_id], map: "user_general_notification_user_id_foreign")
}

model user_log_histories {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  user_id    BigInt    @db.UnsignedBigInt
  title      String    @db.VarChar(255)
  ref        String?   @db.VarChar(255)
  action     String    @db.VarChar(255)
  from       String?   @db.VarChar(255)
  IP         String?   @db.VarChar(255)
  remarks    String?   @db.VarChar(255)
  data       String?   @db.LongText
  pre_data   String?   @db.LongText
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
  users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "user_log_histories_user_id_foreign")

  @@index([user_id], map: "user_log_histories_user_id_foreign")
}

model users {
  id                                                                                         BigInt                                @id @default(autoincrement()) @db.UnsignedBigInt
  name                                                                                       String                                @db.VarChar(255)
  email                                                                                      String                                @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at                                                                          DateTime?                             @db.Timestamp(0)
  password                                                                                   String                                @db.VarChar(255)
  branch_id                                                                                  BigInt                                @default(1) @db.UnsignedBigInt
  remember_token                                                                             String?                               @db.VarChar(100)
  created_at                                                                                 DateTime?                             @db.Timestamp(0)
  updated_at                                                                                 DateTime?                             @db.Timestamp(0)
  account_controls_account_controls_created_byTousers                                        account_controls[]                    @relation("account_controls_created_byTousers")
  account_controls_account_controls_deleted_byTousers                                        account_controls[]                    @relation("account_controls_deleted_byTousers")
  account_controls_account_controls_updated_byTousers                                        account_controls[]                    @relation("account_controls_updated_byTousers")
  account_groups_account_groups_created_byTousers                                            account_groups[]                      @relation("account_groups_created_byTousers")
  account_groups_account_groups_deleted_byTousers                                            account_groups[]                      @relation("account_groups_deleted_byTousers")
  account_groups_account_groups_updated_byTousers                                            account_groups[]                      @relation("account_groups_updated_byTousers")
  account_subsidiaries_account_subsidiaries_created_byTousers                                account_subsidiaries[]                @relation("account_subsidiaries_created_byTousers")
  account_subsidiaries_account_subsidiaries_deleted_byTousers                                account_subsidiaries[]                @relation("account_subsidiaries_deleted_byTousers")
  account_subsidiaries_account_subsidiaries_updated_byTousers                                account_subsidiaries[]                @relation("account_subsidiaries_updated_byTousers")
  accounts_accounts_created_byTousers                                                        accounts[]                            @relation("accounts_created_byTousers")
  accounts_accounts_deleted_byTousers                                                        accounts[]                            @relation("accounts_deleted_byTousers")
  accounts_accounts_updated_byTousers                                                        accounts[]                            @relation("accounts_updated_byTousers")
  areas_areas_created_byTousers                                                              areas[]                               @relation("areas_created_byTousers")
  areas_areas_deleted_byTousers                                                              areas[]                               @relation("areas_deleted_byTousers")
  areas_areas_updated_byTousers                                                              areas[]                               @relation("areas_updated_byTousers")
  attendances_attendances_approved_byTousers                                                 attendances[]                         @relation("attendances_approved_byTousers")
  attendances_attendances_created_byTousers                                                  attendances[]                         @relation("attendances_created_byTousers")
  attendances_attendances_deleted_byTousers                                                  attendances[]                         @relation("attendances_deleted_byTousers")
  attendances_attendances_updated_byTousers                                                  attendances[]                         @relation("attendances_updated_byTousers")
  backup_challan_deliveries_backup_challan_deliveries_created_byTousers                      backup_challan_deliveries[]           @relation("backup_challan_deliveries_created_byTousers")
  backup_challan_deliveries_backup_challan_deliveries_deleted_byTousers                      backup_challan_deliveries[]           @relation("backup_challan_deliveries_deleted_byTousers")
  backup_challan_deliveries_backup_challan_deliveries_updated_byTousers                      backup_challan_deliveries[]           @relation("backup_challan_deliveries_updated_byTousers")
  backup_challans_backup_challans_approved_byTousers                                         backup_challans[]                     @relation("backup_challans_approved_byTousers")
  backup_challans_backup_challans_created_byTousers                                          backup_challans[]                     @relation("backup_challans_created_byTousers")
  backup_challans_backup_challans_deleted_byTousers                                          backup_challans[]                     @relation("backup_challans_deleted_byTousers")
  backup_challans_backup_challans_updated_byTousers                                          backup_challans[]                     @relation("backup_challans_updated_byTousers")
  bank_accounts_bank_accounts_created_byTousers                                              bank_accounts[]                       @relation("bank_accounts_created_byTousers")
  bank_accounts_bank_accounts_deleted_byTousers                                              bank_accounts[]                       @relation("bank_accounts_deleted_byTousers")
  bank_accounts_bank_accounts_updated_byTousers                                              bank_accounts[]                       @relation("bank_accounts_updated_byTousers")
  bank_branches_bank_branches_created_byTousers                                              bank_branches[]                       @relation("bank_branches_created_byTousers")
  bank_branches_bank_branches_deleted_byTousers                                              bank_branches[]                       @relation("bank_branches_deleted_byTousers")
  bank_branches_bank_branches_updated_byTousers                                              bank_branches[]                       @relation("bank_branches_updated_byTousers")
  banks_banks_created_byTousers                                                              banks[]                               @relation("banks_created_byTousers")
  banks_banks_deleted_byTousers                                                              banks[]                               @relation("banks_deleted_byTousers")
  banks_banks_updated_byTousers                                                              banks[]                               @relation("banks_updated_byTousers")
  bills_and_allowances_bills_and_allowances_approved_byTousers                               bills_and_allowances[]                @relation("bills_and_allowances_approved_byTousers")
  bills_and_allowances_bills_and_allowances_created_byTousers                                bills_and_allowances[]                @relation("bills_and_allowances_created_byTousers")
  bills_and_allowances_bills_and_allowances_deleted_byTousers                                bills_and_allowances[]                @relation("bills_and_allowances_deleted_byTousers")
  bills_and_allowances_bills_and_allowances_recommended_byTousers                            bills_and_allowances[]                @relation("bills_and_allowances_recommended_byTousers")
  bills_and_allowances_bills_and_allowances_rejected_byTousers                               bills_and_allowances[]                @relation("bills_and_allowances_rejected_byTousers")
  bills_and_allowances_bills_and_allowances_updated_byTousers                                bills_and_allowances[]                @relation("bills_and_allowances_updated_byTousers")
  branch_types_branch_types_created_byTousers                                                branch_types[]                        @relation("branch_types_created_byTousers")
  branch_types_branch_types_deleted_byTousers                                                branch_types[]                        @relation("branch_types_deleted_byTousers")
  branch_types_branch_types_updated_byTousers                                                branch_types[]                        @relation("branch_types_updated_byTousers")
  branches_branches_created_byTousers                                                        branches[]                            @relation("branches_created_byTousers")
  branches_branches_deleted_byTousers                                                        branches[]                            @relation("branches_deleted_byTousers")
  branches_branches_updated_byTousers                                                        branches[]                            @relation("branches_updated_byTousers")
  brands_brands_created_byTousers                                                            brands[]                              @relation("brands_created_byTousers")
  brands_brands_deleted_byTousers                                                            brands[]                              @relation("brands_deleted_byTousers")
  brands_brands_updated_byTousers                                                            brands[]                              @relation("brands_updated_byTousers")
  brokers_brokers_created_byTousers                                                          brokers[]                             @relation("brokers_created_byTousers")
  brokers_brokers_deleted_byTousers                                                          brokers[]                             @relation("brokers_deleted_byTousers")
  brokers_brokers_updated_byTousers                                                          brokers[]                             @relation("brokers_updated_byTousers")
  c_b_c_license_requisitions_c_b_c_license_requisitions_approved_byTousers                   c_b_c_license_requisitions[]          @relation("c_b_c_license_requisitions_approved_byTousers")
  c_b_c_license_requisitions_c_b_c_license_requisitions_created_byTousers                    c_b_c_license_requisitions[]          @relation("c_b_c_license_requisitions_created_byTousers")
  c_b_c_license_requisitions_c_b_c_license_requisitions_deleted_byTousers                    c_b_c_license_requisitions[]          @relation("c_b_c_license_requisitions_deleted_byTousers")
  c_b_c_license_requisitions_c_b_c_license_requisitions_updated_byTousers                    c_b_c_license_requisitions[]          @relation("c_b_c_license_requisitions_updated_byTousers")
  categories_categories_created_byTousers                                                    categories[]                          @relation("categories_created_byTousers")
  categories_categories_deleted_byTousers                                                    categories[]                          @relation("categories_deleted_byTousers")
  categories_categories_updated_byTousers                                                    categories[]                          @relation("categories_updated_byTousers")
  cbc_sms_cbc_sms_created_byTousers                                                          cbc_sms[]                             @relation("cbc_sms_created_byTousers")
  cbc_sms_cbc_sms_deleted_byTousers                                                          cbc_sms[]                             @relation("cbc_sms_deleted_byTousers")
  cbc_sms_cbc_sms_updated_byTousers                                                          cbc_sms[]                             @relation("cbc_sms_updated_byTousers")
  challans_challans_created_byTousers                                                        challans[]                            @relation("challans_created_byTousers")
  challans_challans_deleted_byTousers                                                        challans[]                            @relation("challans_deleted_byTousers")
  challans_challans_updated_byTousers                                                        challans[]                            @relation("challans_updated_byTousers")
  company_infos_company_infos_created_byTousers                                              company_infos[]                       @relation("company_infos_created_byTousers")
  company_infos_company_infos_deleted_byTousers                                              company_infos[]                       @relation("company_infos_deleted_byTousers")
  company_infos_company_infos_updated_byTousers                                              company_infos[]                       @relation("company_infos_updated_byTousers")
  couriers_couriers_created_byTousers                                                        couriers[]                            @relation("couriers_created_byTousers")
  couriers_couriers_deleted_byTousers                                                        couriers[]                            @relation("couriers_deleted_byTousers")
  couriers_couriers_updated_byTousers                                                        couriers[]                            @relation("couriers_updated_byTousers")
  currencies_currencies_created_byTousers                                                    currencies[]                          @relation("currencies_created_byTousers")
  currencies_currencies_deleted_byTousers                                                    currencies[]                          @relation("currencies_deleted_byTousers")
  currencies_currencies_updated_byTousers                                                    currencies[]                          @relation("currencies_updated_byTousers")
  customer_departments_customer_departments_created_byTousers                                customer_departments[]                @relation("customer_departments_created_byTousers")
  customer_departments_customer_departments_deleted_byTousers                                customer_departments[]                @relation("customer_departments_deleted_byTousers")
  customer_departments_customer_departments_updated_byTousers                                customer_departments[]                @relation("customer_departments_updated_byTousers")
  customer_ratings_customer_ratings_created_byTousers                                        customer_ratings[]                    @relation("customer_ratings_created_byTousers")
  customer_ratings_customer_ratings_deleted_byTousers                                        customer_ratings[]                    @relation("customer_ratings_deleted_byTousers")
  customer_ratings_customer_ratings_updated_byTousers                                        customer_ratings[]                    @relation("customer_ratings_updated_byTousers")
  customer_types_customer_types_created_byTousers                                            customer_types[]                      @relation("customer_types_created_byTousers")
  customer_types_customer_types_deleted_byTousers                                            customer_types[]                      @relation("customer_types_deleted_byTousers")
  customer_types_customer_types_updated_byTousers                                            customer_types[]                      @relation("customer_types_updated_byTousers")
  customers_customers_created_byTousers                                                      customers[]                           @relation("customers_created_byTousers")
  customers_customers_deleted_byTousers                                                      customers[]                           @relation("customers_deleted_byTousers")
  customers_customers_updated_byTousers                                                      customers[]                           @relation("customers_updated_byTousers")
  daily_calls_daily_calls_created_byTousers                                                  daily_calls[]                         @relation("daily_calls_created_byTousers")
  daily_calls_daily_calls_deleted_byTousers                                                  daily_calls[]                         @relation("daily_calls_deleted_byTousers")
  daily_calls_daily_calls_updated_byTousers                                                  daily_calls[]                         @relation("daily_calls_updated_byTousers")
  deliveries_deliveries_created_byTousers                                                    deliveries[]                          @relation("deliveries_created_byTousers")
  deliveries_deliveries_deleted_byTousers                                                    deliveries[]                          @relation("deliveries_deleted_byTousers")
  deliveries_deliveries_updated_byTousers                                                    deliveries[]                          @relation("deliveries_updated_byTousers")
  departments_departments_created_byTousers                                                  departments[]                         @relation("departments_created_byTousers")
  departments_departments_deleted_byTousers                                                  departments[]                         @relation("departments_deleted_byTousers")
  departments_departments_updated_byTousers                                                  departments[]                         @relation("departments_updated_byTousers")
  designations_designations_created_byTousers                                                designations[]                        @relation("designations_created_byTousers")
  designations_designations_deleted_byTousers                                                designations[]                        @relation("designations_deleted_byTousers")
  designations_designations_updated_byTousers                                                designations[]                        @relation("designations_updated_byTousers")
  doctors_doctors_created_byTousers                                                          doctors[]                             @relation("doctors_created_byTousers")
  doctors_doctors_deleted_byTousers                                                          doctors[]                             @relation("doctors_deleted_byTousers")
  doctors_doctors_updated_byTousers                                                          doctors[]                             @relation("doctors_updated_byTousers")
  dongle_or_serial_entries_dongle_or_serial_entries_created_byTousers                        dongle_or_serial_entries[]            @relation("dongle_or_serial_entries_created_byTousers")
  dongle_or_serial_entries_dongle_or_serial_entries_deleted_byTousers                        dongle_or_serial_entries[]            @relation("dongle_or_serial_entries_deleted_byTousers")
  dongle_or_serial_entries_dongle_or_serial_entries_updated_byTousers                        dongle_or_serial_entries[]            @relation("dongle_or_serial_entries_updated_byTousers")
  emergency_notes_emergency_notes_created_byTousers                                          emergency_notes[]                     @relation("emergency_notes_created_byTousers")
  emergency_notes_emergency_notes_deleted_byTousers                                          emergency_notes[]                     @relation("emergency_notes_deleted_byTousers")
  emergency_notes_emergency_notes_updated_byTousers                                          emergency_notes[]                     @relation("emergency_notes_updated_byTousers")
  employee_salaries_employee_salaries_created_byTousers                                      employee_salaries[]                   @relation("employee_salaries_created_byTousers")
  employee_salaries_employee_salaries_deleted_byTousers                                      employee_salaries[]                   @relation("employee_salaries_deleted_byTousers")
  employee_salaries_employee_salaries_updated_byTousers                                      employee_salaries[]                   @relation("employee_salaries_updated_byTousers")
  employees_employees_created_byTousers                                                      employees[]                           @relation("employees_created_byTousers")
  employees_employees_deleted_byTousers                                                      employees[]                           @relation("employees_deleted_byTousers")
  employees_employees_updated_byTousers                                                      employees[]                           @relation("employees_updated_byTousers")
  employees_employees_user_idTousers                                                         employees[]                           @relation("employees_user_idTousers")
  expense_types_expense_types_created_byTousers                                              expense_types[]                       @relation("expense_types_created_byTousers")
  expense_types_expense_types_deleted_byTousers                                              expense_types[]                       @relation("expense_types_deleted_byTousers")
  expense_types_expense_types_updated_byTousers                                              expense_types[]                       @relation("expense_types_updated_byTousers")
  geo_locations_geo_locations_created_byTousers                                              geo_locations[]                       @relation("geo_locations_created_byTousers")
  geo_locations_geo_locations_deleted_byTousers                                              geo_locations[]                       @relation("geo_locations_deleted_byTousers")
  geo_locations_geo_locations_updated_byTousers                                              geo_locations[]                       @relation("geo_locations_updated_byTousers")
  holidays_holidays_created_byTousers                                                        holidays[]                            @relation("holidays_created_byTousers")
  holidays_holidays_deleted_byTousers                                                        holidays[]                            @relation("holidays_deleted_byTousers")
  holidays_holidays_updated_byTousers                                                        holidays[]                            @relation("holidays_updated_byTousers")
  issue_products_issue_products_created_byTousers                                            issue_products[]                      @relation("issue_products_created_byTousers")
  issue_products_issue_products_deleted_byTousers                                            issue_products[]                      @relation("issue_products_deleted_byTousers")
  issue_products_issue_products_updated_byTousers                                            issue_products[]                      @relation("issue_products_updated_byTousers")
  job_templates_job_templates_created_byTousers                                              job_templates[]                       @relation("job_templates_created_byTousers")
  job_templates_job_templates_deleted_byTousers                                              job_templates[]                       @relation("job_templates_deleted_byTousers")
  job_templates_job_templates_updated_byTousers                                              job_templates[]                       @relation("job_templates_updated_byTousers")
  jobs_jobs_created_byTousers                                                                jobs[]                                @relation("jobs_created_byTousers")
  jobs_jobs_deleted_byTousers                                                                jobs[]                                @relation("jobs_deleted_byTousers")
  jobs_jobs_updated_byTousers                                                                jobs[]                                @relation("jobs_updated_byTousers")
  leave_applications_leave_applications_approved_byTousers                                   leave_applications[]                  @relation("leave_applications_approved_byTousers")
  leave_applications_leave_applications_created_byTousers                                    leave_applications[]                  @relation("leave_applications_created_byTousers")
  leave_applications_leave_applications_deleted_byTousers                                    leave_applications[]                  @relation("leave_applications_deleted_byTousers")
  leave_applications_leave_applications_recommended_byTousers                                leave_applications[]                  @relation("leave_applications_recommended_byTousers")
  leave_applications_leave_applications_rejected_byTousers                                   leave_applications[]                  @relation("leave_applications_rejected_byTousers")
  leave_applications_leave_applications_updated_byTousers                                    leave_applications[]                  @relation("leave_applications_updated_byTousers")
  leave_types_leave_types_created_byTousers                                                  leave_types[]                         @relation("leave_types_created_byTousers")
  leave_types_leave_types_deleted_byTousers                                                  leave_types[]                         @relation("leave_types_deleted_byTousers")
  leave_types_leave_types_updated_byTousers                                                  leave_types[]                         @relation("leave_types_updated_byTousers")
  location_types_location_types_created_byTousers                                            location_types[]                      @relation("location_types_created_byTousers")
  location_types_location_types_deleted_byTousers                                            location_types[]                      @relation("location_types_deleted_byTousers")
  location_types_location_types_updated_byTousers                                            location_types[]                      @relation("location_types_updated_byTousers")
  locations_locations_created_byTousers                                                      locations[]                           @relation("locations_created_byTousers")
  locations_locations_deleted_byTousers                                                      locations[]                           @relation("locations_deleted_byTousers")
  locations_locations_updated_byTousers                                                      locations[]                           @relation("locations_updated_byTousers")
  notice_boards_notice_boards_created_byTousers                                              notice_boards[]                       @relation("notice_boards_created_byTousers")
  notice_boards_notice_boards_deleted_byTousers                                              notice_boards[]                       @relation("notice_boards_deleted_byTousers")
  notice_boards_notice_boards_updated_byTousers                                              notice_boards[]                       @relation("notice_boards_updated_byTousers")
  notice_types_notice_types_created_byTousers                                                notice_types[]                        @relation("notice_types_created_byTousers")
  notice_types_notice_types_deleted_byTousers                                                notice_types[]                        @relation("notice_types_deleted_byTousers")
  notice_types_notice_types_updated_byTousers                                                notice_types[]                        @relation("notice_types_updated_byTousers")
  offers_offers_created_byTousers                                                            offers[]                              @relation("offers_created_byTousers")
  offers_offers_deleted_byTousers                                                            offers[]                              @relation("offers_deleted_byTousers")
  offers_offers_updated_byTousers                                                            offers[]                              @relation("offers_updated_byTousers")
  office_purchases_office_purchases_approved_byTousers                                       office_purchases[]                    @relation("office_purchases_approved_byTousers")
  office_purchases_office_purchases_created_byTousers                                        office_purchases[]                    @relation("office_purchases_created_byTousers")
  office_purchases_office_purchases_deleted_byTousers                                        office_purchases[]                    @relation("office_purchases_deleted_byTousers")
  office_purchases_office_purchases_updated_byTousers                                        office_purchases[]                    @relation("office_purchases_updated_byTousers")
  percentage_types_percentage_types_created_byTousers                                        percentage_types[]                    @relation("percentage_types_created_byTousers")
  percentage_types_percentage_types_deleted_byTousers                                        percentage_types[]                    @relation("percentage_types_deleted_byTousers")
  percentage_types_percentage_types_updated_byTousers                                        percentage_types[]                    @relation("percentage_types_updated_byTousers")
  product_catalogs_product_catalogs_created_byTousers                                        product_catalogs[]                    @relation("product_catalogs_created_byTousers")
  product_catalogs_product_catalogs_deleted_byTousers                                        product_catalogs[]                    @relation("product_catalogs_deleted_byTousers")
  product_catalogs_product_catalogs_updated_byTousers                                        product_catalogs[]                    @relation("product_catalogs_updated_byTousers")
  product_power_sizes_product_power_sizes_created_byTousers                                  product_power_sizes[]                 @relation("product_power_sizes_created_byTousers")
  product_power_sizes_product_power_sizes_deleted_byTousers                                  product_power_sizes[]                 @relation("product_power_sizes_deleted_byTousers")
  product_power_sizes_product_power_sizes_updated_byTousers                                  product_power_sizes[]                 @relation("product_power_sizes_updated_byTousers")
  product_sub_types_product_sub_types_created_byTousers                                      product_sub_types[]                   @relation("product_sub_types_created_byTousers")
  product_sub_types_product_sub_types_deleted_byTousers                                      product_sub_types[]                   @relation("product_sub_types_deleted_byTousers")
  product_sub_types_product_sub_types_updated_byTousers                                      product_sub_types[]                   @relation("product_sub_types_updated_byTousers")
  product_transfer_requests_product_transfer_requests_created_byTousers                      product_transfer_requests[]           @relation("product_transfer_requests_created_byTousers")
  product_transfer_requests_product_transfer_requests_deleted_byTousers                      product_transfer_requests[]           @relation("product_transfer_requests_deleted_byTousers")
  product_transfer_requests_product_transfer_requests_updated_byTousers                      product_transfer_requests[]           @relation("product_transfer_requests_updated_byTousers")
  product_transfers_product_transfers_created_byTousers                                      product_transfers[]                   @relation("product_transfers_created_byTousers")
  product_transfers_product_transfers_deleted_byTousers                                      product_transfers[]                   @relation("product_transfers_deleted_byTousers")
  product_transfers_product_transfers_updated_byTousers                                      product_transfers[]                   @relation("product_transfers_updated_byTousers")
  product_types_product_types_created_byTousers                                              product_types[]                       @relation("product_types_created_byTousers")
  product_types_product_types_deleted_byTousers                                              product_types[]                       @relation("product_types_deleted_byTousers")
  product_types_product_types_updated_byTousers                                              product_types[]                       @relation("product_types_updated_byTousers")
  products_products_created_byTousers                                                        products[]                            @relation("products_created_byTousers")
  products_products_deleted_byTousers                                                        products[]                            @relation("products_deleted_byTousers")
  products_products_updated_byTousers                                                        products[]                            @relation("products_updated_byTousers")
  purchase_order_receive_batches_purchase_order_receive_batches_created_byTousers            purchase_order_receive_batches[]      @relation("purchase_order_receive_batches_created_byTousers")
  purchase_order_receive_batches_purchase_order_receive_batches_deleted_byTousers            purchase_order_receive_batches[]      @relation("purchase_order_receive_batches_deleted_byTousers")
  purchase_order_receive_batches_purchase_order_receive_batches_updated_byTousers            purchase_order_receive_batches[]      @relation("purchase_order_receive_batches_updated_byTousers")
  purchase_order_receive_details_purchase_order_receive_details_created_byTousers            purchase_order_receive_details[]      @relation("purchase_order_receive_details_created_byTousers")
  purchase_order_receive_details_purchase_order_receive_details_deleted_byTousers            purchase_order_receive_details[]      @relation("purchase_order_receive_details_deleted_byTousers")
  purchase_order_receive_details_purchase_order_receive_details_updated_byTousers            purchase_order_receive_details[]      @relation("purchase_order_receive_details_updated_byTousers")
  purchase_order_receive_serials_purchase_order_receive_serials_created_byTousers            purchase_order_receive_serials[]      @relation("purchase_order_receive_serials_created_byTousers")
  purchase_order_receive_serials_purchase_order_receive_serials_deleted_byTousers            purchase_order_receive_serials[]      @relation("purchase_order_receive_serials_deleted_byTousers")
  purchase_order_receive_serials_purchase_order_receive_serials_updated_byTousers            purchase_order_receive_serials[]      @relation("purchase_order_receive_serials_updated_byTousers")
  purchase_order_receives_purchase_order_receives_approved_byTousers                         purchase_order_receives[]             @relation("purchase_order_receives_approved_byTousers")
  purchase_order_receives_purchase_order_receives_created_byTousers                          purchase_order_receives[]             @relation("purchase_order_receives_created_byTousers")
  purchase_order_receives_purchase_order_receives_deleted_byTousers                          purchase_order_receives[]             @relation("purchase_order_receives_deleted_byTousers")
  purchase_order_receives_purchase_order_receives_updated_byTousers                          purchase_order_receives[]             @relation("purchase_order_receives_updated_byTousers")
  purchase_orders_purchase_orders_approved_byTousers                                         purchase_orders[]                     @relation("purchase_orders_approved_byTousers")
  purchase_orders_purchase_orders_created_byTousers                                          purchase_orders[]                     @relation("purchase_orders_created_byTousers")
  purchase_orders_purchase_orders_deleted_byTousers                                          purchase_orders[]                     @relation("purchase_orders_deleted_byTousers")
  purchase_orders_purchase_orders_updated_byTousers                                          purchase_orders[]                     @relation("purchase_orders_updated_byTousers")
  purchase_return_approves_purchase_return_approves_created_byTousers                        purchase_return_approves[]            @relation("purchase_return_approves_created_byTousers")
  purchase_return_approves_purchase_return_approves_deleted_byTousers                        purchase_return_approves[]            @relation("purchase_return_approves_deleted_byTousers")
  purchase_return_approves_purchase_return_approves_updated_byTousers                        purchase_return_approves[]            @relation("purchase_return_approves_updated_byTousers")
  purchase_returns_purchase_returns_created_byTousers                                        purchase_returns[]                    @relation("purchase_returns_created_byTousers")
  purchase_returns_purchase_returns_deleted_byTousers                                        purchase_returns[]                    @relation("purchase_returns_deleted_byTousers")
  purchase_returns_purchase_returns_updated_byTousers                                        purchase_returns[]                    @relation("purchase_returns_updated_byTousers")
  quotations_quotations_approved_byTousers                                                   quotations[]                          @relation("quotations_approved_byTousers")
  quotations_quotations_created_byTousers                                                    quotations[]                          @relation("quotations_created_byTousers")
  quotations_quotations_deleted_byTousers                                                    quotations[]                          @relation("quotations_deleted_byTousers")
  quotations_quotations_updated_byTousers                                                    quotations[]                          @relation("quotations_updated_byTousers")
  receivers_receivers_created_byTousers                                                      receivers[]                           @relation("receivers_created_byTousers")
  receivers_receivers_deleted_byTousers                                                      receivers[]                           @relation("receivers_deleted_byTousers")
  receivers_receivers_updated_byTousers                                                      receivers[]                           @relation("receivers_updated_byTousers")
  requisition_receive_batches_requisition_receive_batches_created_byTousers                  requisition_receive_batches[]         @relation("requisition_receive_batches_created_byTousers")
  requisition_receive_batches_requisition_receive_batches_deleted_byTousers                  requisition_receive_batches[]         @relation("requisition_receive_batches_deleted_byTousers")
  requisition_receive_batches_requisition_receive_batches_updated_byTousers                  requisition_receive_batches[]         @relation("requisition_receive_batches_updated_byTousers")
  requisition_receive_details_requisition_receive_details_created_byTousers                  requisition_receive_details[]         @relation("requisition_receive_details_created_byTousers")
  requisition_receive_details_requisition_receive_details_deleted_byTousers                  requisition_receive_details[]         @relation("requisition_receive_details_deleted_byTousers")
  requisition_receive_details_requisition_receive_details_updated_byTousers                  requisition_receive_details[]         @relation("requisition_receive_details_updated_byTousers")
  requisition_receive_serials_requisition_receive_serials_created_byTousers                  requisition_receive_serials[]         @relation("requisition_receive_serials_created_byTousers")
  requisition_receive_serials_requisition_receive_serials_deleted_byTousers                  requisition_receive_serials[]         @relation("requisition_receive_serials_deleted_byTousers")
  requisition_receive_serials_requisition_receive_serials_updated_byTousers                  requisition_receive_serials[]         @relation("requisition_receive_serials_updated_byTousers")
  requisition_receives_requisition_receives_created_byTousers                                requisition_receives[]                @relation("requisition_receives_created_byTousers")
  requisition_receives_requisition_receives_deleted_byTousers                                requisition_receives[]                @relation("requisition_receives_deleted_byTousers")
  requisition_receives_requisition_receives_updated_byTousers                                requisition_receives[]                @relation("requisition_receives_updated_byTousers")
  requisitions_requisitions_approved_byTousers                                               requisitions[]                        @relation("requisitions_approved_byTousers")
  requisitions_requisitions_created_byTousers                                                requisitions[]                        @relation("requisitions_created_byTousers")
  requisitions_requisitions_deleted_byTousers                                                requisitions[]                        @relation("requisitions_deleted_byTousers")
  requisitions_requisitions_updated_byTousers                                                requisitions[]                        @relation("requisitions_updated_byTousers")
  role_user                                                                                  role_user[]
  salary_generates_salary_generates_created_byTousers                                        salary_generates[]                    @relation("salary_generates_created_byTousers")
  salary_generates_salary_generates_deleted_byTousers                                        salary_generates[]                    @relation("salary_generates_deleted_byTousers")
  salary_generates_salary_generates_updated_byTousers                                        salary_generates[]                    @relation("salary_generates_updated_byTousers")
  salary_setups_salary_setups_created_byTousers                                              salary_setups[]                       @relation("salary_setups_created_byTousers")
  salary_setups_salary_setups_deleted_byTousers                                              salary_setups[]                       @relation("salary_setups_deleted_byTousers")
  salary_setups_salary_setups_updated_byTousers                                              salary_setups[]                       @relation("salary_setups_updated_byTousers")
  sale_invoices_sale_invoices_created_byTousers                                              sale_invoices[]                       @relation("sale_invoices_created_byTousers")
  sale_invoices_sale_invoices_deleted_byTousers                                              sale_invoices[]                       @relation("sale_invoices_deleted_byTousers")
  sale_invoices_sale_invoices_updated_byTousers                                              sale_invoices[]                       @relation("sale_invoices_updated_byTousers")
  sales_order_deliveries_sales_order_deliveries_created_byTousers                            sales_order_deliveries[]              @relation("sales_order_deliveries_created_byTousers")
  sales_order_deliveries_sales_order_deliveries_deleted_byTousers                            sales_order_deliveries[]              @relation("sales_order_deliveries_deleted_byTousers")
  sales_order_deliveries_sales_order_deliveries_updated_byTousers                            sales_order_deliveries[]              @relation("sales_order_deliveries_updated_byTousers")
  sales_orders_sales_orders_created_byTousers                                                sales_orders[]                        @relation("sales_orders_created_byTousers")
  sales_orders_sales_orders_deleted_byTousers                                                sales_orders[]                        @relation("sales_orders_deleted_byTousers")
  sales_orders_sales_orders_updated_byTousers                                                sales_orders[]                        @relation("sales_orders_updated_byTousers")
  sales_requisitions_sales_requisitions_created_byTousers                                    sales_requisitions[]                  @relation("sales_requisitions_created_byTousers")
  sales_requisitions_sales_requisitions_deleted_byTousers                                    sales_requisitions[]                  @relation("sales_requisitions_deleted_byTousers")
  sales_requisitions_sales_requisitions_updated_byTousers                                    sales_requisitions[]                  @relation("sales_requisitions_updated_byTousers")
  service_assigns_service_assigns_created_byTousers                                          service_assigns[]                     @relation("service_assigns_created_byTousers")
  service_assigns_service_assigns_deleted_byTousers                                          service_assigns[]                     @relation("service_assigns_deleted_byTousers")
  service_assigns_service_assigns_updated_byTousers                                          service_assigns[]                     @relation("service_assigns_updated_byTousers")
  service_names_service_names_created_byTousers                                              service_names[]                       @relation("service_names_created_byTousers")
  service_names_service_names_deleted_byTousers                                              service_names[]                       @relation("service_names_deleted_byTousers")
  service_names_service_names_updated_byTousers                                              service_names[]                       @relation("service_names_updated_byTousers")
  service_tokens_service_tokens_created_byTousers                                            service_tokens[]                      @relation("service_tokens_created_byTousers")
  service_tokens_service_tokens_deleted_byTousers                                            service_tokens[]                      @relation("service_tokens_deleted_byTousers")
  service_tokens_service_tokens_updated_byTousers                                            service_tokens[]                      @relation("service_tokens_updated_byTousers")
  service_types_service_types_created_byTousers                                              service_types[]                       @relation("service_types_created_byTousers")
  service_types_service_types_deleted_byTousers                                              service_types[]                       @relation("service_types_deleted_byTousers")
  service_types_service_types_updated_byTousers                                              service_types[]                       @relation("service_types_updated_byTousers")
  services_services_created_byTousers                                                        services[]                            @relation("services_created_byTousers")
  services_services_deleted_byTousers                                                        services[]                            @relation("services_deleted_byTousers")
  services_services_updated_byTousers                                                        services[]                            @relation("services_updated_byTousers")
  shifts_shifts_created_byTousers                                                            shifts[]                              @relation("shifts_created_byTousers")
  shifts_shifts_deleted_byTousers                                                            shifts[]                              @relation("shifts_deleted_byTousers")
  shifts_shifts_updated_byTousers                                                            shifts[]                              @relation("shifts_updated_byTousers")
  shipment_verifies_shipment_verifies_created_byTousers                                      shipment_verifies[]                   @relation("shipment_verifies_created_byTousers")
  shipment_verifies_shipment_verifies_deleted_byTousers                                      shipment_verifies[]                   @relation("shipment_verifies_deleted_byTousers")
  shipment_verifies_shipment_verifies_updated_byTousers                                      shipment_verifies[]                   @relation("shipment_verifies_updated_byTousers")
  sms_templates_sms_templates_created_byTousers                                              sms_templates[]                       @relation("sms_templates_created_byTousers")
  sms_templates_sms_templates_deleted_byTousers                                              sms_templates[]                       @relation("sms_templates_deleted_byTousers")
  sms_templates_sms_templates_updated_byTousers                                              sms_templates[]                       @relation("sms_templates_updated_byTousers")
  suppliers_suppliers_created_byTousers                                                      suppliers[]                           @relation("suppliers_created_byTousers")
  suppliers_suppliers_deleted_byTousers                                                      suppliers[]                           @relation("suppliers_deleted_byTousers")
  suppliers_suppliers_updated_byTousers                                                      suppliers[]                           @relation("suppliers_updated_byTousers")
  tags_tags_created_byTousers                                                                tags[]                                @relation("tags_created_byTousers")
  tags_tags_deleted_byTousers                                                                tags[]                                @relation("tags_deleted_byTousers")
  tags_tags_updated_byTousers                                                                tags[]                                @relation("tags_updated_byTousers")
  target_setups_target_setups_created_byTousers                                              target_setups[]                       @relation("target_setups_created_byTousers")
  target_setups_target_setups_deleted_byTousers                                              target_setups[]                       @relation("target_setups_deleted_byTousers")
  target_setups_target_setups_updated_byTousers                                              target_setups[]                       @relation("target_setups_updated_byTousers")
  territories_territories_created_byTousers                                                  territories[]                         @relation("territories_created_byTousers")
  territories_territories_deleted_byTousers                                                  territories[]                         @relation("territories_deleted_byTousers")
  territories_territories_updated_byTousers                                                  territories[]                         @relation("territories_updated_byTousers")
  territory_assigns_territory_assigns_created_byTousers                                      territory_assigns[]                   @relation("territory_assigns_created_byTousers")
  territory_assigns_territory_assigns_deleted_byTousers                                      territory_assigns[]                   @relation("territory_assigns_deleted_byTousers")
  territory_assigns_territory_assigns_updated_byTousers                                      territory_assigns[]                   @relation("territory_assigns_updated_byTousers")
  transactions_transactions_created_byTousers                                                transactions[]                        @relation("transactions_created_byTousers")
  transactions_transactions_deleted_byTousers                                                transactions[]                        @relation("transactions_deleted_byTousers")
  transactions_transactions_updated_byTousers                                                transactions[]                        @relation("transactions_updated_byTousers")
  transport_types_transport_types_created_byTousers                                          transport_types[]                     @relation("transport_types_created_byTousers")
  transport_types_transport_types_deleted_byTousers                                          transport_types[]                     @relation("transport_types_deleted_byTousers")
  transport_types_transport_types_updated_byTousers                                          transport_types[]                     @relation("transport_types_updated_byTousers")
  trigger_names_trigger_names_created_byTousers                                              trigger_names[]                       @relation("trigger_names_created_byTousers")
  trigger_names_trigger_names_deleted_byTousers                                              trigger_names[]                       @relation("trigger_names_deleted_byTousers")
  trigger_names_trigger_names_updated_byTousers                                              trigger_names[]                       @relation("trigger_names_updated_byTousers")
  u_s_g_or_o_p_g_license_requisitions_u_s_g_or_o_p_g_license_requisitions_approved_byTousers u_s_g_or_o_p_g_license_requisitions[] @relation("u_s_g_or_o_p_g_license_requisitions_approved_byTousers")
  u_s_g_or_o_p_g_license_requisitions_u_s_g_or_o_p_g_license_requisitions_created_byTousers  u_s_g_or_o_p_g_license_requisitions[] @relation("u_s_g_or_o_p_g_license_requisitions_created_byTousers")
  u_s_g_or_o_p_g_license_requisitions_u_s_g_or_o_p_g_license_requisitions_deleted_byTousers  u_s_g_or_o_p_g_license_requisitions[] @relation("u_s_g_or_o_p_g_license_requisitions_deleted_byTousers")
  u_s_g_or_o_p_g_license_requisitions_u_s_g_or_o_p_g_license_requisitions_updated_byTousers  u_s_g_or_o_p_g_license_requisitions[] @relation("u_s_g_or_o_p_g_license_requisitions_updated_byTousers")
  units_units_created_byTousers                                                              units[]                               @relation("units_created_byTousers")
  units_units_deleted_byTousers                                                              units[]                               @relation("units_deleted_byTousers")
  units_units_updated_byTousers                                                              units[]                               @relation("units_updated_byTousers")
  user_general_notification                                                                  user_general_notification[]
  user_log_histories                                                                         user_log_histories[]
  usg_or_opg_sms_usg_or_opg_sms_created_byTousers                                            usg_or_opg_sms[]                      @relation("usg_or_opg_sms_created_byTousers")
  usg_or_opg_sms_usg_or_opg_sms_deleted_byTousers                                            usg_or_opg_sms[]                      @relation("usg_or_opg_sms_deleted_byTousers")
  usg_or_opg_sms_usg_or_opg_sms_updated_byTousers                                            usg_or_opg_sms[]                      @relation("usg_or_opg_sms_updated_byTousers")
  vendors_vendors_created_byTousers                                                          vendors[]                             @relation("vendors_created_byTousers")
  vendors_vendors_deleted_byTousers                                                          vendors[]                             @relation("vendors_deleted_byTousers")
  vendors_vendors_updated_byTousers                                                          vendors[]                             @relation("vendors_updated_byTousers")
}

model usg_or_opg_sms {
  id                                     BigInt                   @id @default(autoincrement()) @db.UnsignedBigInt
  u_s_g_or_o_p_g_license_requisition_id  BigInt                   @db.UnsignedBigInt
  customer_id                            BigInt                   @db.UnsignedBigInt
  address                                String?                  @db.VarChar(255)
  phone                                  String?                  @db.VarChar(255)
  dongle_id                              BigInt                   @db.UnsignedBigInt
  product_model                          String?                  @db.VarChar(255)
  start_date                             DateTime?                @db.Date
  expired_date                           DateTime?                @db.Date
  valid_period                           String?                  @db.VarChar(255)
  valid_period_type                      String?                  @db.VarChar(255)
  remarks                                String?                  @db.VarChar(255)
  license_id                             String?                  @db.VarChar(255)
  software_version                       String?                  @db.VarChar(255)
  license_key                            String?                  @db.VarChar(255)
  sms                                    String?                  @db.VarChar(255)
  status                                 String                   @default("Pending") @db.VarChar(255)
  deleted_at                             DateTime?                @db.Timestamp(0)
  created_by                             BigInt?                  @db.UnsignedBigInt
  updated_by                             BigInt?                  @db.UnsignedBigInt
  deleted_by                             BigInt?                  @db.UnsignedBigInt
  created_at                             DateTime?                @db.Timestamp(0)
  updated_at                             DateTime?                @db.Timestamp(0)
  users_usg_or_opg_sms_created_byTousers users?                   @relation("usg_or_opg_sms_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "usg_or_opg_sms_created_by_foreign")
  customers                              customers                @relation(fields: [customer_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "usg_or_opg_sms_customer_id_foreign")
  users_usg_or_opg_sms_deleted_byTousers users?                   @relation("usg_or_opg_sms_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "usg_or_opg_sms_deleted_by_foreign")
  dongle_or_serial_entries               dongle_or_serial_entries @relation(fields: [dongle_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "usg_or_opg_sms_dongle_id_foreign")
  users_usg_or_opg_sms_updated_byTousers users?                   @relation("usg_or_opg_sms_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "usg_or_opg_sms_updated_by_foreign")

  @@index([created_by], map: "usg_or_opg_sms_created_by_foreign")
  @@index([customer_id], map: "usg_or_opg_sms_customer_id_foreign")
  @@index([deleted_by], map: "usg_or_opg_sms_deleted_by_foreign")
  @@index([dongle_id], map: "usg_or_opg_sms_dongle_id_foreign")
  @@index([updated_by], map: "usg_or_opg_sms_updated_by_foreign")
}

model usg_or_opg_sms_phones {
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  usg_or_opg_sms_id BigInt    @db.UnsignedBigInt
  multiple_phone_no String    @db.VarChar(255)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)
}

model vendors {
  id                              BigInt             @id @default(autoincrement()) @db.UnsignedBigInt
  company_name                    String             @db.VarChar(255)
  account_name                    String?            @db.VarChar(255)
  account_head_id                 BigInt?            @db.UnsignedBigInt
  company_type_id                 BigInt?            @db.UnsignedBigInt
  phone                           String             @db.VarChar(255)
  tnt_number                      String?            @db.VarChar(255)
  email                           String?            @db.VarChar(255)
  country_id                      BigInt?            @db.UnsignedBigInt
  opening_balance                 Decimal?           @db.Decimal(14, 2)
  address                         String             @db.Text
  owner_name                      String?            @db.VarChar(255)
  owner_designation               String?            @db.VarChar(255)
  owner_mobile                    String?            @db.VarChar(255)
  owner_email                     String?            @db.VarChar(255)
  owner_dob                       String?            @db.VarChar(255)
  owner_address                   String?            @db.VarChar(255)
  nid                             String?            @db.VarChar(255)
  front_image                     String?            @db.VarChar(255)
  back_image                      String?            @db.VarChar(255)
  visiting_card_front             String?            @db.VarChar(255)
  visiting_card_back              String?            @db.VarChar(255)
  trade_license                   String?            @db.VarChar(255)
  signature                       String?            @db.VarChar(255)
  remarks                         String?            @db.Text
  status                          Int                @default(1) @db.TinyInt
  deleted_at                      DateTime?          @db.Timestamp(0)
  deleted_by                      BigInt?            @db.UnsignedBigInt
  created_by                      BigInt?            @db.UnsignedBigInt
  updated_by                      BigInt?            @db.UnsignedBigInt
  created_at                      DateTime?          @db.Timestamp(0)
  updated_at                      DateTime?          @db.Timestamp(0)
  office_purchases                office_purchases[]
  users_vendors_created_byTousers users?             @relation("vendors_created_byTousers", fields: [created_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "vendors_created_by_foreign")
  users_vendors_deleted_byTousers users?             @relation("vendors_deleted_byTousers", fields: [deleted_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "vendors_deleted_by_foreign")
  users_vendors_updated_byTousers users?             @relation("vendors_updated_byTousers", fields: [updated_by], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "vendors_updated_by_foreign")

  @@index([created_by], map: "vendors_created_by_foreign")
  @@index([deleted_by], map: "vendors_deleted_by_foreign")
  @@index([updated_by], map: "vendors_updated_by_foreign")
}

model visit_plans {
  id                BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  visit_date        DateTime   @db.Date
  start_time        DateTime   @db.Time(0)
  end_time          DateTime   @db.Time(0)
  sales_rep_id      BigInt?    @db.UnsignedBigInt
  geo_json          String?    @db.LongText
  visit_priority    String     @db.VarChar(255)
  visit_purpose     String     @db.VarChar(255)
  follow_up_actions String     @db.VarChar(255)
  repeat_task       String     @default("off") @db.VarChar(255)
  repeat_frequency  Int?
  repeat_unit       String?    @db.VarChar(255)
  task_end_date     DateTime?  @db.Date
  task_reminder     String?    @db.VarChar(255)
  repeat_day_sat    Boolean    @default(false)
  repeat_day_sun    Boolean    @default(false)
  repeat_day_mon    Boolean    @default(false)
  repeat_day_tue    Boolean    @default(false)
  repeat_day_wed    Boolean    @default(false)
  repeat_day_thu    Boolean    @default(false)
  repeat_day_fri    Boolean    @default(false)
  created_at        DateTime?  @db.Timestamp(0)
  updated_at        DateTime?  @db.Timestamp(0)
  employees         employees? @relation(fields: [sales_rep_id], references: [id], onUpdate: Restrict, map: "visit_plans_sales_rep_id_foreign")

  @@index([sales_rep_id], map: "visit_plans_sales_rep_id_foreign")
}

enum accounts_balance_type {
  Debit
  Credit
}
